LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y5 + x2) * (y5 + y4x + x2)+y11;
list l1 = integralBasis(f,2, "atOrigin");
var(2)
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y5 + x2) * (y5 + y4x + x2)+y11;
list l1 = integralBasis(f,2, "atOrigin");
den
f
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y5 + x2) * (y5 + y4x + x2)+y11;
list l1 = integralBasis(f,2, "atOrigin");
ff
den
pols
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y5 + x2) * (y5 + y4x + x2)+y11;
list l1 = integralBasis(f,2, "atOrigin");
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y5 + x2) * (y5 + y4x + x2)+y11;
list l1 = integralBasis(f,2, "atOrigin");
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y5 + x2) * (y5 + y4x + x2)+y11;
list l1 = integralBasis(f,2, "atOrigin");
printlevel = 10;
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y5 + x2) * (y5 + y4x + x2)+y11;
list l1 = integralBasis(f,2, "atOrigin");
printlevel = 10;
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y5 + x2) * (y5 + y4x + x2)+y11;
list l1 = integralBasis(f,2, "atOrigin");
printlevel = 10;
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y5 + x2) * (y5 + y4x + x2)+y11;
list l1 = integralBasis(f,2, "atOrigin");
maxExpi
d
s
md
summands(d, s, md);
M
MSelf
s
d
s
md
printlevel = 10;
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y5 + x2) * (y5 + y4x + x2)+y11;
list l1 = integralBasis(f,2, "atOrigin");
md
printlevel = 10;
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y5 + x2) * (y5 + y4x + x2)+y11;
list l1 = integralBasis(f,2, "atOrigin");
printlevel = 10;
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y5 + x2) * (y5 + y4x + x2)+y11;
list l1 = integralBasis(f,2, "atOrigin");
I2Lifted
classes
l
getClasses(l)
printlevel = 10;
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y5 + x2) * (y5 + y4x + x2)+y11;
list l1 = integralBasis(f,2, "atOrigin");
printlevel = 10;
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y5 + x2) * (y5 + y4x + x2)+y11;
list l1 = integralBasis(f,2, "atOrigin");
printlevel = 10;
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y5 + x2) * (y5 + y4x + x2)+y11;
list l1 = integralBasis(f,2, "atOrigin");
f
classes
blocks
mdm
printlevel = 10;
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y5 + x2) * (y5 + y4x + x2)+y11;
list l1 = integralBasis(f,2, "atOrigin");
printlevel = 10;
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y5 + x2) * (y5 + y4x + x2)+y11;
list l1 = integralBasis(f,2, "atOrigin");
printlevel = 10;
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y5 + x2) * (y5 + y4x + x2)+y11;
list l1 = integralBasis(f,2, "atOrigin");
printlevel = 10;
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y5 + x2) * (y5 + y4x + x2)+y11;
list l1 = integralBasis(f,2, "atOrigin");
printlevel = 10;
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y5 + x2) * (y5 + y4x + x2)+y11;
list l1 = integralBasis(f,2, "atOrigin");
printlevel = 10;
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y5 + x2) * (y5 + y4x + x2)+y11;
list l1 = integralBasis(f,2, "atOrigin");
printlevel = 10;
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y5 + x2) * (y5 + y4x + x2)+y11;
list l1 = integralBasis(f,2, "atOrigin");
printlevel = 10;
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y5 + x2) * (y5 + y4x + x2)+y11;
list l1 = integralBasis(f,2, "atOrigin");
printlevel = 10;
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y5 + x2) * (y5 + y4x + x2)+y11;
list l1 = integralBasis(f,2, "atOrigin");
printlevel = 10;
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y5 + x2) * (y5 + y4x + x2)+y11;
list l1 = integralBasis(f,2, "atOrigin");
degExpand
printlevel = 10;
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y5 + x2) * (y5 + y4x + x2)+y11;
list l1 = integralBasis(f,2, "atOrigin");
maxDeg
sN
sD
f
je
printlevel = 10;
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y5 + x2) * (y5 + y4x + x2)+y11;
list l1 = integralBasis(f,2, "atOrigin");
printlevel = 10;
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y5 + x2) * (y5 + y4x + x2)+y11;
list l1 = integralBasis(f,2, "atOrigin");
newL
printlevel = 10;
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y5 + x2) * (y5 + y4x + x2)+y11;
list l1 = integralBasis(f,2, "atOrigin");
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y5 + x2) * (y5 + y4x + x2)+y11;
list l1 = integralBasis(f,2, "atOrigin");
[200~LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y5 + x2) * (y5 + y4x + x2)+y11;
list l1 = integralBasis(f,2, "atOrigin");
~
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y5 + x2) * (y5 + y4x + x2)+y11;
list l1 = integralBasis(f,2, "atOrigin");
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y5 + x2) * (y5 + y4x + x2)+y11;
list l1 = integralBasis(f,2, "atOrigin");
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y5 + x2) * (y5 + y4x + x2)+y11;
list l1 = integralBasis(f,2, "atOrigin");
l1;
printlevel = 10;
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y5 + x2) * (y5 + y4x + x2)+y11;
list l1 = integralBasis(f,2, "atOrigin");
I2LiftedFull
ifOut
printlevel = 10;
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y5 + x2) * (y5 + y4x + x2)+y11;
list l1 = integralBasis(f,2, "atOrigin");
l1;
printlevel = 10;
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y5 + x2) * (y5 + y4x + x2)+y11;
list l1 = integralBasis(f,2, "atOrigin");
I2LiftedFull
printlevel = 10;
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y5 + x2) * (y5 + y4x + x2)+y11;
list l1 = integralBasis(f,2, "atOrigin");
classes2
printlevel = 10;
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y5 + x2) * (y5 + y4x + x2)+y11;
list l1 = integralBasis(f,2, "atOrigin");
I2LiftedFull
printlevel = 10;
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y5 + x2) * (y5 + y4x + x2)+y11;
list l1 = integralBasis(f,2, "atOrigin");
printlevel = 10;
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y5 + x2) * (y5 + y4x + x2)+y11;
list l1 = integralBasis(f,2, "atOrigin");
l1;
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y3+x2)*(y2-x3)+y6;
integralBasis(f,2);
ring r = 0, (x,y), dp;
poly f = (y4+3x3y + x4)*(y5+7x3)+y12;
list l1 = integralBasis(f,2);
ring r = 0, (x,y), dp;
poly f = (y4+3x3y + x4)*(y5+7x3)+y12;
list l1 = integralBasis(f,2);
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y4+3x3y + x4)*(y5+7x3)+y12;
list l1 = integralBasis(f,2);
printlevel = 10;
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y4+3x3y + x4)*(y5+7x3)+y12;
list l1 = integralBasis(f,2);
printlevel = 10;
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y4+3x3y + x4)*(y5+7x3)+y12;
list l1 = integralBasis(f,2);
printlevel = 10;
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y4+3x3y + x4)*(y5+7x3)+y12;
list l1 = integralBasis(f,2);
printlevel = 10;
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y4+3x3y + x4)*(y5+7x3)+y12;
list l1 = integralBasis(f,2);
classes
typeof(classes[i][1])
printlevel = 10;
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y4+3x3y + x4)*(y5+7x3)+y12;
list l1 = integralBasis(f,2);
classes
i
printlevel = 10;
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y4+3x3y + x4)*(y5+7x3)+y12;
list l1 = integralBasis(f,2);
printlevel = 10;
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y4+3x3y + x4)*(y5+7x3)+y12;
list l1 = integralBasis(f,2);
classes
size(classes);
printlevel = 10;
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y4+3x3y + x4)*(y5+7x3)+y12;
list l1 = integralBasis(f,2);
;
;
printlevel = 10;
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y4+3x3y + x4)*(y5+7x3)+y12;
list l1 = integralBasis(f,2);
printlevel = 10;
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y4+3x3y + x4)*(y5+7x3)+y12;
list l1 = integralBasis(f,2);
printlevel = 10;
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y4+3x3y + x4)*(y5+7x3)+y12;
list l1 = integralBasis(f,2);
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y4+3x3y + x4)*(y5+7x3)+y12;
list l1 = integralBasis(f,2);
1<>0;
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y4+3x3y + x4)*(y5+7x3)+y12;
list l1 = integralBasis(f,2);
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y4+3x3y + x4)*(y5+7x3)+y12;
list l1 = integralBasis(f,2);
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y4+3x3y + x4)*(y5+7x3)+y12;
list l1 = integralBasis(f,2);
maxExpi
minOrd
M
MSelf
d
md
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y4+3x3y + x4)*(y5+7x3)+y12;
list l1 = integralBasis(f,2);
classes
def S = classes[2];
setring S;
PE;
printlevel = 10;
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y4+3x3y + x4)*(y5+7x3)+y12;
list l1 = integralBasis(f,2);
classes
def SS = classes[2][1];
setring SS;
PE;
basering;
M
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y4+3x3y + x4)*(y5+7x3)+y12;
list l1 = integralBasis(f,2);
M
bestElem
bF
md
classes
def SS = classes[2][1];
setring SS;
PE;
minpoly
pardeg(minpoly)
degBase
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y4+3x3y + x4)*(y5+7x3)+y12;
list l1 = integralBasis(f,2);
md
basering
def SS = classes[1][1];
setring SS;
PE;
basering;
lcm(5,5)
lcm(5,10)
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y4+3x3y + x4)*(y5+7x3)+y12;
list l1 = integralBasis(f,2);
l;
l1;
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y4+3x3y + x4)*(y5+7x3)*(y3-4x2)*(y3+x2)*(y2-x3)+y30;
list l1 = integralBasis(f,2,"modular");
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y4+3x3y + x4)*(y5+7x3)*(y3-4x2)*(y3+x2)*(y2-x3)+y30;
list l1 = integralBasis(f,2,"modular", "atOrigin");
l1;
LIB"integralbasis.lib";
ring r = 0,(x,y),dp;
int k = 40; int d = 50;
poly f = y^2 + x^(k+1) + y^d;
list l = integralBasis(f, 2);
l1;
l;
LIB"integralbasis.lib";
ring r = 0,(x,y),dp;
int k = 40; int d = 50;
poly f = x*(x^(k-1) + y^2) + y^d;
list l = integralBasis(f, 2, "atOrigin");
LIB"integralbasis.lib";
ring r = 0,(x,y),dp;
int k = 40; int d = 50;
poly f = x*(x^(k-1) + y^2) + y^d;
list l = integralBasis(f, 2, "atOrigin");
LIB"integralbasis.lib";
ring r = 0,(x,y),dp;
int k = 40; int d = 50;
poly f = x*(x^(k-1) + y^2) + y^d;
list l = integralBasis(f, 2, "atOrigin");
classes
def SS = classes[1][1];
setring SS;
PE;
basering;
def SS = classes[1][1];
setring SS;
PE;
ring r = 0,(x,y),dp;
int k = 40; int d = 50;
poly f = x*(x^(k-1) + y^2) + y^d;
list l = integralBasis(f, 2, "atOrigin");
LIB"integralbasis.lib";
ring r = 0,(x,y),dp;
int k = 40; int d = 50;
poly f = x*(x^(k-1) + y^2) + y^d;
list l = integralBasis(f, 2, "atOrigin");
def SS = classes[1][2];
setring SS;
PE;
LIB"integralbasis.lib";
ring r = 0,(x,y),dp;
int k = 40; int d = 50;
poly f = x*(x^(k-1) + y^2) + y^d;
list l = integralBasis(f, 2, "atOrigin");
def SS = classes[2][1];
setring SS;
PE;
basering;
getDegs(classes);
LIB"integralbasis.lib";
ring r = 0,(x,y),dp;
int k = 40; int d = 50;
poly f = x*(x^(k-1) + y^2) + y^d;
list l = integralBasis(f, 2, "atOrigin");
LIB"integralbasis.lib";
ring r = 0,(x,y),dp;
int k = 40; int d = 50;
poly f = x*(x^(k-1) + y^2) + y^d;
list l = integralBasis(f, 2, "atOrigin");
bF
LIB"integralbasis.lib";
ring r = 0,(x,y),dp;
int k = 40; int d = 50;
poly f = x*(x^(k-1) + y^2) + y^d;
list l = integralBasis(f, 2, "atOrigin");
setring S
PE
LIB"integralbasis.lib";
ring r = 0,(x,y),dp;
int k = 40; int d = 50;
poly f = x*(x^(k-1) + y^2) + y^d;
list l = integralBasis(f, 2, "atOrigin");
l;
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
int k = 5;
int d = 10;
poly f = polyDK(d, k, 1231);
list l = integralBasis(f, 2, "atOrigin");
l;
LIB"integralbasis.lib";
ring r = 0,(x,y),dp;
int k = 6;
poly z = 2*x - y + 1;
poly f = (x^(k+1) + y^(k+1) + z^(k+1))^2 - 4*(x^(k+1)*y^(k+1) + y^(k+1)*z^(k+1) + z^(k+1)*x^(k+1));
f = monic(f);
list l = integralBasis(f, 2, "atOrigin");
classes
LIB"integralbasis.lib";
ring r = 0,(x,y),dp;
int k = 6;
poly z = 2*x - y + 1;
poly f = (x^(k+1) + y^(k+1) + z^(k+1))^2 - 4*(x^(k+1)*y^(k+1) + y^(k+1)*z^(k+1) + z^(k+1)*x^(k+1));
f = monic(f);
list l = integralBasis(f, 2);
LIB"integralbasis.lib";
ring r = 0,(x,y),dp;
int k = 6;
poly z = 2*x - y + 1;
poly f = (x^(k+1) + y^(k+1) + z^(k+1))^2 - 4*(x^(k+1)*y^(k+1) + y^(k+1)*z^(k+1) + z^(k+1)*x^(k+1));
f = monic(f);
list l = integralBasis(f, 2);
l;
LIB"integralbasis.lib";
ring r = 0,(x,y),dp;
int k = 11;
poly z = x - 2*y + 1;
poly f = x^(2*k) + y^(2*k) + z^(2*k) + 2 * (x^k * z^k - x^k * y^k + y^k * z^k);
f = monic(f);
list l = integralBasis(f, 2, "nonModular");
LIB"integralbasis.lib";
ring r = 0,(x,y),dp;
int k = 11;
poly z = x - 2*y + 1;
poly f = x^(2*k) + y^(2*k) + z^(2*k) + 2 * (x^k * z^k - x^k * y^k + y^k * z^k);
f = monic(f);
list l = integralBasis(f, 2, "nonModular");
classes
def SS = classes[1][1];
setring SS;
PE;
setring R
polyGround
classes
setring S
basering;
PE
setring R
basering;
setring S
basering
pG
minpolys
LIB"integralbasis.lib";
ring r = 0,(x,y),dp;
int k = 40; int d = 50;
poly f = y^2 + x^(k+1) + y^d;
list l = integralBasis(f, 2);
l;
[200~LIB"integralbasis.lib";
ring r = 0,(x,y),dp;
int k = 40; int d = 50;
poly f = y^2 + x^(k+1) + y^d;
list l = integralBasis(f, 2);
LIB"integralbasis.lib";
ring r = 0,(x,y),dp;
int k = 40; int d = 50;
poly f = y^2 + x^(k+1) + y^d;
list l = integralBasis(f, 2);
l;
LIB"integralbasis.lib";
ring r = 0,(x,y),dp;
int k = 40; int d = 50;
poly f = y^2 + x^(k+1) + y^d;
list l = integralBasis(f, 2);
classes
def S = classes[1][1];
setring S;
PE;
basering;
fFr
LIB"integralbasis.lib";
ring r = 0,(x,y),dp;
int k = 40; int d = 50;
poly f = y^2 + x^(k+1) + y^d;
list l = integralBasis(f, 2);
fFr
LIB"integralbasis.lib";
ring r = 0,(x,y),dp;
int k = 40; int d = 50;
poly f = y^2 + x^(k+1) + y^d;
list l = integralBasis(f, 2);
fF
buildPolyFrac(fF);
basering;
basering;
[200~LIB"integralbasis.lib";
ring r = 0,(x,y),dp;
int k = 40; int d = 50;
poly f = y^2 + x^(k+1) + y^d;
list l = integralBasis(f, 2);
LIB"integralbasis.lib";
ring r = 0,(x,y),dp;
int k = 40; int d = 50;
poly f = y^2 + x^(k+1) + y^d;
list l = integralBasis(f, 2);
LIB"integralbasis.lib";
ring r = 0,(x,y),dp;
int k = 40; int d = 50;
poly f = y^2 + x^(k+1) + y^d;
list l = integralBasis(f, 2);
LIB"integralbasis.lib";
ring r = 0,(x,y),dp;
int k = 40; int d = 50;
poly f = y^2 + x^(k+1) + y^d;
list l = integralBasis(f, 2);
LIB"integralbasis.lib";
ring r = 0,(x,y),dp;
int k = 40; int d = 50;
poly f = y^2 + x^(k+1) + y^d;
list l = integralBasis(f, 2);
l;
LIB"integralbasis.lib";
ring r = 0,(x,y),dp;
int k = 40; int d = 50;
poly f = x*(x^(k-1) + y^2) + y^d;
list l = integralBasis(f, 2, "atOrigin");
l;
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
int k = 5;
int d = 10;
poly f = polyDK(d, k, 1231);
list l = integralBasis(f, 2, "atOrigin");
l;
LIB"integralbasis.lib";
ring r = 0,(x,y),dp;
int k = 6;
poly z = 2*x - y + 1;
poly f = (x^(k+1) + y^(k+1) + z^(k+1))^2 - 4*(x^(k+1)*y^(k+1) + y^(k+1)*z^(k+1) + z^(k+1)*x^(k+1));
f = monic(f);
list l = integralBasis(f, 2);
l;
LIB"integralbasis.lib";
ring r = 0,(x,y),dp;
int k = 11;
poly z = x - 2*y + 1;
poly f = x^(2*k) + y^(2*k) + z^(2*k) + 2 * (x^k * z^k - x^k * y^k + y^k * z^k);
f = monic(f);
list l = integralBasis(f, 2, "nonModular");
LIB"integralbasis.lib";
ring r = 0,(x,y),dp;
int k = 11;
poly z = x - 2*y + 1;
poly f = x^(2*k) + y^(2*k) + z^(2*k) + 2 * (x^k * z^k - x^k * y^k + y^k * z^k);
f = monic(f);
list l = integralBasis(f, 2, "nonModular");
LIB"integralbasis.lib";
ring r = 0,(x,y),dp;
int k = 11;
poly z = x - 2*y + 1;
poly f = x^(2*k) + y^(2*k) + z^(2*k) + 2 * (x^k * z^k - x^k * y^k + y^k * z^k);
f = monic(f);
list l = integralBasis(f, 2, "nonModular");
LIB"integralbasis.lib";
ring r = 0,(x,y),dp;
int k = 11;
poly z = x - 2*y + 1;
poly f = x^(2*k) + y^(2*k) + z^(2*k) + 2 * (x^k * z^k - x^k * y^k + y^k * z^k);
f = monic(f);
list l = integralBasis(f, 2, "nonModular");
degs
basering;
classes
degs
degs
bF
LIB"integralbasis.lib";
ring r = 0,(x,y),dp;
int k = 11;
poly z = x - 2*y + 1;
poly f = x^(2*k) + y^(2*k) + z^(2*k) + 2 * (x^k * z^k - x^k * y^k + y^k * z^k);
f = monic(f);
list l = integralBasis(f, 2, "nonModular");
LIB"integralbasis.lib";
ring r = 0,(x,y),dp;
int k = 11;
poly z = x - 2*y + 1;
poly f = x^(2*k) + y^(2*k) + z^(2*k) + 2 * (x^k * z^k - x^k * y^k + y^k * z^k);
f = monic(f);
list l = integralBasis(f, 2, "nonModular");
LIB"integralbasis.lib";
ring r = 0,(x,y),dp;
int k = 40; int d = 50;
poly f = y^2 + x^(k+1) + y^d;
list l = integralBasis(f, 2);
l;
ring r = 0,(x,y),dp;
int k = 40; int d = 50;
poly f = x*(x^(k-1) + y^2) + y^d;
list l = integralBasis(f, 2, "atOrigin");
l;
LIB"integralbasis.lib";
ring r = 0,(x,y),dp;
int k = 11;
poly z = x - 2*y + 1;
poly f = x^(2*k) + y^(2*k) + z^(2*k) + 2 * (x^k * z^k - x^k * y^k + y^k * z^k);
f = monic(f);
list l = integralBasis(f, 2, "nonModular");
basering;
minpoly
setring S
minpolys
LIB"integralbasis.lib";
ring r = 0,(x,y),dp;
int k = 11;
poly z = x - 2*y + 1;
poly f = x^(2*k) + y^(2*k) + z^(2*k) + 2 * (x^k * z^k - x^k * y^k + y^k * z^k);
f = monic(f);
list l = integralBasis(f, 2, "nonModular");
setring S
mp
fF
erg
setring R
LIB"integralbasis.lib";
ring r = 0,(x,y),dp;
int k = 11;
poly z = x - 2*y + 1;
poly f = x^(2*k) + y^(2*k) + z^(2*k) + 2 * (x^k * z^k - x^k * y^k + y^k * z^k);
f = monic(f);
list l = integralBasis(f, 2, "nonModular");
fFr
LIB"integralbasis.lib";
ring r = 0,(x,y),dp;
int k = 11;
poly z = x - 2*y + 1;
poly f = x^(2*k) + y^(2*k) + z^(2*k) + 2 * (x^k * z^k - x^k * y^k + y^k * z^k);
f = monic(f);
ideal J = slocus(f);
J;
radical(J);
LIB"integralbasis.lib";
ring r = 0,(x,y),dp;
poly f = x^15-21*x^14+8*x^13*y-6*x^13-16*x^12*y+20*x^11*y^2-x^12+8*x^11*y-36*x^10*y^2+24*x^9*y^3+4*x^9*y^2-16*x^8*y^3+26*x^7*y^4-6*x^6*y^4+8*x^5*y^5+4*x^3*y^6-y^8;
f = f *(-1);
list l = integralBasis(f, 2, "nonModular");
LIB"integralbasis.lib";
ring r = 0,(x,y),dp;
poly f = (y^4 + 2*x^3*y^2 + x^6 + x^5*y)^3 + x^11*y^11;
list l = integralBasis(f, 2, "nonModular");
l;
LIB"integralbasis.lib";
ring r = 0,(x,y),dp;
poly f = (y^4 + 2*x^3*y^2 + x^6 + x^5*y)^3 + x^11*y^11;
list l = integralBasis(f, 2, "nonModular");
classes
md
LIB"integralbasis.lib";
ring r = 0,(x,y),dp;
poly f = (y^4 + 2*x^3*y^2 + x^6 + x^5*y)^3 + x^11*y^11;
list l = integralBasis(f, 2, "nonModular");
MSelf
bestElem
bestElem
vS
bF
LIB"integralbasis.lib";
ring r = 0,(x,y),dp;
poly f = (y^4 + 2*x^3*y^2 + x^6 + x^5*y)^3 + x^11*y^11;
list l = integralBasis(f, 2, "nonModular");
LIB"integralbasis.lib";
ring r = 0,(x,y),dp;
poly f = (y^4 + 2*x^3*y^2 + x^6 + x^5*y)^3 + x^11*y^11;
list l = integralBasis(f, 2, "nonModular");
classes
def S = classes[1][1];
setring S;
PE
basering;
LIB"integralbasis.lib";
ring r = 0,(x,y),dp;
poly f = (y^4 + 2*x^3*y^2 + x^6 + x^5*y)^3 + x^11*y^11;
list l = integralBasis(f, 2, "nonModular");
l;
LIB"integralbasis.lib";
ring r = 0,(x,y),dp;
poly f = (y^4 + 2*x^3*y^2 + x^6 + x^5*y)^3 + x^11*y^11;
list l = integralBasis(f, 2, "nonModular");
LIB"integralbasis.lib";
ring r = 0,(x,y),dp;
poly f = (y^4 + 2*x^3*y^2 + x^6 + x^5*y)^3 + x^11*y^11;
list l = integralBasis(f, 2, "nonModular");
fFB
printlevel = 10;
LIB"integralbasis.lib";
ring r = 0,(x,y),dp;
poly f = (y^4 + 2*x^3*y^2 + x^6 + x^5*y)^3 + x^11*y^11;
list l = integralBasis(f, 2, "nonModular");
printlevel = 10;
LIB"integralbasis.lib";
ring r = 0,(x,y),dp;
poly f = (y^4 + 2*x^3*y^2 + x^6 + x^5*y)^3 + x^11*y^11;
list l = integralBasis(f, 2, "nonModular");
fFB
fF
basering
exps
den
printlevel = 10;
LIB"integralbasis.lib";
ring r = 0,(x,y),dp;
poly f = (y^4 + 2*x^3*y^2 + x^6 + x^5*y)^3 + x^11*y^11;
list l = integralBasis(f, 2, "nonModular");
l;
printlevel = 10;
LIB"integralbasis.lib";
ring r = 0,(x,y),dp;
poly f = (y^4 + 2*x^3*y^2 + x^6 + x^5*y)^3 + x^11*y^11;
list l = integralBasis(f, 2, "nonModular");
printlevel = 10;
LIB"integralbasis.lib";
ring r = 0,(x,y),dp;
poly f = (y^4 + 2*x^3*y^2 + x^6 + x^5*y)^3 + x^11*y^11;
list l = integralBasis(f, 2, "nonModular");
l;
reduce(I, groebner(l[1]);
reduce(l[1], groebner(I));
q
c
printlevel = 10;
LIB"integralbasis.lib";
ring r = 0,(x,y),dp;
poly f = (y^4 + 2*x^3*y^2 + x^6 + x^5*y)^3 + x^11*y^11;
list l = integralBasis(f, 2, "nonModular");
ideal I;
I[1]=x23;
I[2]=x22y;
I[3]=x23+x20y2;
I[4]=x22y+x19y3;
I[5]=19381206307392801/83076749736557242056487941267521536x31+1055924242596369/40564819207303340847894502572032x30+106134086413873/79228162514264337593543950336x29+577396907939/4835703278458516698824704x28+10609139737/1180591620717411303424x27+1252947609/2361183241434822606848x26y+340609631/576460752303423488x26+239957037/9223372036854775808x25y+94820295/2251799813685248x25-80599193/72057594037927936x24y+310107/137438953472x24-8280015/70368744177664x23y+18253053/2251799813685248x22y2+65/1048576x23-56685/8589934592x22y+68555/137438953472x21y2+65/1048576x20y2+x20+x19y+2x17y2+x14y4;
I[6]=19381206307392801/83076749736557242056487941267521536x30y+1055924242596369/40564819207303340847894502572032x29y+106134086413873/79228162514264337593543950336x28y+577396907939/4835703278458516698824704x27y+10609139737/1180591620717411303424x26y+1252947609/2361183241434822606848x25y2+340609631/576460752303423488x25y+239957037/9223372036854775808x24y2+94820295/2251799813685248x24y-80599193/72057594037927936x23y2+310107/137438953472x23y-8280015/70368744177664x22y2+18253053/2251799813685248x21y3+65/1048576x22y-56685/8589934592x21y2+68555/137438953472x20y3+65/1048576x19y3+x19y+x18y2+2x16y3+x13y5;
I[7]=19381206307392801/83076749736557242056487941267521536x31+1055924242596369/40564819207303340847894502572032x30+19381206307392801/83076749736557242056487941267521536x28y2+106134086413873/79228162514264337593543950336x29+1055924242596369/40564819207303340847894502572032x27y2+577396907939/4835703278458516698824704x28+106134086413873/79228162514264337593543950336x26y2+10609139737/1180591620717411303424x27+1252947609/2361183241434822606848x26y+577396907939/4835703278458516698824704x25y2+340609631/576460752303423488x26+239957037/9223372036854775808x25y+10609139737/1180591620717411303424x24y2+1252947609/2361183241434822606848x23y3+94820295/2251799813685248x25-80599193/72057594037927936x24y+340609631/576460752303423488x23y2+239957037/9223372036854775808x22y3+310107/137438953472x24-8280015/70368744177664x23y+28268337/562949953421312x22y2-80599193/72057594037927936x21y3+65/1048576x23-56685/8589934592x22y+189331/68719476736x21y2-8280015/70368744177664x20y3+18253053/2251799813685248x19y4+65/524288x20y2-56685/8589934592x19y3+68555/137438953472x18y4+65/1048576x17y4+x20+x19y+3x17y2+x16y3+3x14y4+x11y6;
I[8]=19381206307392801/83076749736557242056487941267521536x30y+1055924242596369/40564819207303340847894502572032x29y+19381206307392801/83076749736557242056487941267521536x27y3+106134086413873/79228162514264337593543950336x28y+1055924242596369/40564819207303340847894502572032x26y3+577396907939/4835703278458516698824704x27y+106134086413873/79228162514264337593543950336x25y3+10609139737/1180591620717411303424x26y+1252947609/2361183241434822606848x25y2+577396907939/4835703278458516698824704x24y3+340609631/576460752303423488x25y+239957037/9223372036854775808x24y2+10609139737/1180591620717411303424x23y3+1252947609/2361183241434822606848x22y4+94820295/2251799813685248x24y-80599193/72057594037927936x23y2+340609631/576460752303423488x22y3+239957037/9223372036854775808x21y4+310107/137438953472x23y-8280015/70368744177664x22y2+28268337/562949953421312x21y3-80599193/72057594037927936x20y4+65/1048576x22y-56685/8589934592x21y2+189331/68719476736x20y3-8280015/70368744177664x19y4+18253053/2251799813685248x18y5+65/524288x19y3-56685/8589934592x18y4+68555/137438953472x17y5+65/1048576x16y5+x19y+x18y2+3x16y3+x15y4+3x13y5+x10y7;
I[9]=16303899057149140345/2722258935367507707706996859454145691648x27y2+825795527723069/20769187434139310514121985316880384x27y+329389695644524757/1329227995784915872903807060280344576x26y2+22870119113300277/2658455991569831745807614120560689152x25y3+113696317117120213/20282409603651670423947251286016x27-9459681055342527/81129638414606681695789005144064x26y+465344929385294213/20769187434139310514121985316880384x25y2+9877281207523641/10384593717069655257060992658440192x24y3+10535555076172593/39614081257132168796771975168x26-1335049250915095/79228162514264337593543950336x25y+24442346609846169/10141204801825835211973625643008x24y2+5971807599092811/81129638414606681695789005144064x23y3+19381206307392801/41538374868278621028243970633760768x22y4+25509167563811/2417851639229258349412352x25-9541852585049/9671406556917033397649408x24y+3680295205157621/19807040628566084398385987584x23y2+16001450669885/79228162514264337593543950336x22y3+2388620017879605/20282409603651670423947251286016x21y4+175734915097/590295810358705651712x24-29908034707/1180591620717411303424x23y+13985189232815/1208925819614629174706176x22y2-3511117737475/9671406556917033397649408x21y3+426476626808113/39614081257132168796771975168x20y4+1448168031/288230376151711744x23+1916757533/4611686018427387904x22y+139634117885/295147905179352825856x21y2-5622154083/295147905179352825856x20y3+3608816190499/2417851639229258349412352x19y4+94820295/1125899906842624x22+2953650247/36028797018963968x21y+1125771259/144115188075855872x20y2-1646519763/2305843009213693952x19y3+47113306137/590295810358705651712x18y4+1252947609/1180591620717411303424x17y5+310107/68719476736x21+150494769/35184372088832x20y-57066837/1125899906842624x19y2+211449655/18014398509481984x18y3+1448168031/288230376151711744x17y4+239957037/4611686018427387904x16y5+65/524288x20+475795/4294967296x19y-218191/68719476736x18y2+9270065/17592186044416x17y3+131326401/1125899906842624x16y4-80599193/36028797018963968x15y5+195/524288x17y2+209555/2147483648x16y3+447217/68719476736x15y4-8280015/35184372088832x14y5+18253053/1125899906842624x13y6+195/524288x14y4-56685/4294967296x13y5+68555/68719476736x12y6+x17+2x16y+x15y2+65/524288x11y6+4x14y2+4x13y3+6x11y4+2x10y5+4x8y6+x5y8;
I[10]=16303899057149140345/2722258935367507707706996859454145691648x26y3+825795527723069/20769187434139310514121985316880384x26y2+329389695644524757/1329227995784915872903807060280344576x25y3+22870119113300277/2658455991569831745807614120560689152x24y4+113696317117120213/20282409603651670423947251286016x26y-9459681055342527/81129638414606681695789005144064x25y2+465344929385294213/20769187434139310514121985316880384x24y3+9877281207523641/10384593717069655257060992658440192x23y4+10535555076172593/39614081257132168796771975168x25y-1335049250915095/79228162514264337593543950336x24y2+24442346609846169/10141204801825835211973625643008x23y3+5971807599092811/81129638414606681695789005144064x22y4+19381206307392801/41538374868278621028243970633760768x21y5+25509167563811/2417851639229258349412352x24y-9541852585049/9671406556917033397649408x23y2+3680295205157621/19807040628566084398385987584x22y3+16001450669885/79228162514264337593543950336x21y4+2388620017879605/20282409603651670423947251286016x20y5+175734915097/590295810358705651712x23y-29908034707/1180591620717411303424x22y2+13985189232815/1208925819614629174706176x21y3-3511117737475/9671406556917033397649408x20y4+426476626808113/39614081257132168796771975168x19y5+1448168031/288230376151711744x22y+1916757533/4611686018427387904x21y2+139634117885/295147905179352825856x20y3-5622154083/295147905179352825856x19y4+3608816190499/2417851639229258349412352x18y5+94820295/1125899906842624x21y+2953650247/36028797018963968x20y2+1125771259/144115188075855872x19y3-1646519763/2305843009213693952x18y4+47113306137/590295810358705651712x17y5+1252947609/1180591620717411303424x16y6+310107/68719476736x20y+150494769/35184372088832x19y2-57066837/1125899906842624x18y3+211449655/18014398509481984x17y4+1448168031/288230376151711744x16y5+239957037/4611686018427387904x15y6+65/524288x19y+475795/4294967296x18y2-218191/68719476736x17y3+9270065/17592186044416x16y4+131326401/1125899906842624x15y5-80599193/36028797018963968x14y6+195/524288x16y3+209555/2147483648x15y4+447217/68719476736x14y5-8280015/35184372088832x13y6+18253053/1125899906842624x12y7+195/524288x13y5-56685/4294967296x12y6+68555/68719476736x11y7+x16y+2x15y2+x14y3+65/524288x10y7+4x13y3+4x12y4+6x10y5+2x9y6+4x7y7+x4y9;
I[11]=16303899057149140345/2722258935367507707706996859454145691648x24y4+20580357942770351/20769187434139310514121985316880384x24y3+329389695644524757/1329227995784915872903807060280344576x23y4+22870119113300277/2658455991569831745807614120560689152x22y5+162581010336812551/20282409603651670423947251286016x24y2-871968364062429/20282409603651670423947251286016x23y3+950071065077981227/41538374868278621028243970633760768x22y4+9877281207523641/10384593717069655257060992658440192x21y5-9541852585049/9671406556917033397649408x24y+17896145486487835/39614081257132168796771975168x23y2-659523900122605/39614081257132168796771975168x22y3+51273313237571943/20282409603651670423947251286016x21y4+5971807599092811/81129638414606681695789005144064x20y5+19381206307392801/41538374868278621028243970633760768x19y6+175734915097/590295810358705651712x24-29908034707/1180591620717411303424x23y+53479546029441/2417851639229258349412352x22y2-3263242580631/2417851639229258349412352x21y3+7787067037123355/39614081257132168796771975168x20y4+16001450669885/79228162514264337593543950336x19y5+2388620017879605/20282409603651670423947251286016x18y6+1448168031/288230376151711744x23+1916757533/4611686018427387904x22y+455003150867/590295810358705651712x21y2-52396651039/1180591620717411303424x20y3+31579194656129/2417851639229258349412352x19y4-3511117737475/9671406556917033397649408x18y5+426476626808113/39614081257132168796771975168x17y6+94820295/1125899906842624x22+2953650247/36028797018963968x21y+3699710549/288230376151711744x20y2-1376281993/4611686018427387904x19y3+326381541907/590295810358705651712x18y4-21235668723/1180591620717411303424x17y5+3608816190499/2417851639229258349412352x16y6+310107/68719476736x21+150494769/35184372088832x20y+18876729/562949953421312x19y2+3376549557/36028797018963968x18y3+3699710549/288230376151711744x17y4-3053082489/4611686018427387904x16y5+47113306137/590295810358705651712x15y6+1252947609/1180591620717411303424x14y7+65/524288x20+475795/4294967296x19y+22979/17179869184x18y2+169034899/35184372088832x17y3+18564891/281474976710656x16y4+342300117/36028797018963968x15y5+1448168031/288230376151711744x14y6+239957037/4611686018427387904x13y7+65/131072x17y2+894905/4294967296x16y3+114513/34359738368x15y4+10260115/35184372088832x14y5+74789727/562949953421312x13y6-80599193/36028797018963968x12y7+195/262144x14y4+362425/4294967296x13y5+128943/17179869184x12y6-8280015/35184372088832x11y7+18253053/1125899906842624x10y8+x17+2x16y+x15y2+65/131072x11y6-56685/4294967296x10y7+68555/68719476736x9y8+5x14y2+6x13y3+x12y4+65/524288x8y8+10x11y4+6x10y5+10x8y6+2x7y7+5x5y8+x2y10;
I[12]=16303899057149140345/2722258935367507707706996859454145691648x22y5+20580357942770351/20769187434139310514121985316880384x22y4+329389695644524757/1329227995784915872903807060280344576x21y5+22870119113300277/2658455991569831745807614120560689152x20y6+162581010336812551/20282409603651670423947251286016x22y3-871968364062429/20282409603651670423947251286016x21y4+950071065077981227/41538374868278621028243970633760768x20y5+9877281207523641/10384593717069655257060992658440192x19y6-9541852585049/9671406556917033397649408x22y2+17896145486487835/39614081257132168796771975168x21y3-659523900122605/39614081257132168796771975168x20y4+51273313237571943/20282409603651670423947251286016x19y5+5971807599092811/81129638414606681695789005144064x18y6+19381206307392801/41538374868278621028243970633760768x17y7+175734915097/590295810358705651712x22y-29908034707/1180591620717411303424x21y2+53479546029441/2417851639229258349412352x20y3-3263242580631/2417851639229258349412352x19y4+7787067037123355/39614081257132168796771975168x18y5+16001450669885/79228162514264337593543950336x17y6+2388620017879605/20282409603651670423947251286016x16y7+1448168031/288230376151711744x21y+1916757533/4611686018427387904x20y2+455003150867/590295810358705651712x19y3-52396651039/1180591620717411303424x18y4+31579194656129/2417851639229258349412352x17y5-3511117737475/9671406556917033397649408x16y6+426476626808113/39614081257132168796771975168x15y7+94820295/1125899906842624x20y+2953650247/36028797018963968x19y2+3699710549/288230376151711744x18y3-1376281993/4611686018427387904x17y4+326381541907/590295810358705651712x16y5-21235668723/1180591620717411303424x15y6+3608816190499/2417851639229258349412352x14y7+310107/68719476736x19y+150494769/35184372088832x18y2+18876729/562949953421312x17y3+3376549557/36028797018963968x16y4+3699710549/288230376151711744x15y5-3053082489/4611686018427387904x14y6+47113306137/590295810358705651712x13y7+1252947609/1180591620717411303424x12y8+65/524288x18y+475795/4294967296x17y2+22979/17179869184x16y3+169034899/35184372088832x15y4+18564891/281474976710656x14y5+342300117/36028797018963968x13y6+1448168031/288230376151711744x12y7+239957037/4611686018427387904x11y8+65/131072x15y3+894905/4294967296x14y4+114513/34359738368x13y5+10260115/35184372088832x12y6+74789727/562949953421312x11y7-80599193/36028797018963968x10y8+195/262144x12y5+362425/4294967296x11y6+128943/17179869184x10y7-8280015/35184372088832x9y8+18253053/1125899906842624x8y9+x15y+2x14y2+x13y3+65/131072x9y7-56685/4294967296x8y8+68555/68719476736x7y9+5x12y3+6x11y4+x10y5+65/524288x6y9+10x9y5+6x8y6+10x6y7+2x5y8+5x3y9+y11;
I;
reduce(I, groebner(l[1]));
reduce(l[1], groebner(I));
LIB"integralbasis.lib";
ring r = 0,(x,y),dp;
int k = 40; int d = 50;
poly f = y^2 + x^(k+1) + y^d;
list l = integralBasis(f, 2);
l;
LIB"integralbasis.lib";
ring r = 0,(x,y),dp;
int k = 40; int d = 50;
poly f = x*(x^(k-1) + y^2) + y^d;
list l = integralBasis(f, 2, "atOrigin");
l;
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
int k = 5;
int d = 10;
poly f = polyDK(d, k, 1231);
list l = integralBasis(f, 2, "atOrigin");
l;
LIB"integralbasis.lib";
ring r = 0,(x,y),dp;
int k = 6;
poly z = 2*x - y + 1;
poly f = (x^(k+1) + y^(k+1) + z^(k+1))^2 - 4*(x^(k+1)*y^(k+1) + y^(k+1)*z^(k+1) + z^(k+1)*x^(k+1));
f = monic(f);
list l = integralBasis(f, 2);
l;
LIB"integralbasis.lib";
ring r = 0,(x,y),dp;
int k = 11;
poly z = x - 2*y + 1;
poly f = x^(2*k) + y^(2*k) + z^(2*k) + 2 * (x^k * z^k - x^k * y^k + y^k * z^k);
f = monic(f);
list l = integralBasis(f, 2, "nonModular");
LIB"integralbasis.lib";
ring r = 0,(x,y),dp;
poly f = x^15-21*x^14+8*x^13*y-6*x^13-16*x^12*y+20*x^11*y^2-x^12+8*x^11*y-36*x^10*y^2+24*x^9*y^3+4*x^9*y^2-16*x^8*y^3+26*x^7*y^4-6*x^6*y^4+8*x^5*y^5+4*x^3*y^6-y^8;
f = f *(-1);
list l = integralBasis(f, 2, "nonModular");
LIB"integralbasis.lib";
ring r = 0,(x,y),dp;
poly f = (y^4 + 2*x^3*y^2 + x^6 + x^5*y)^3 + x^11*y^11;
list l = integralBasis(f, 2, "nonModular");
l;
LIB"integralbasis.lib";
ring r = 0,(x,y),dp;
poly f = (y^5 + y^4*x^7 + 2*x^8) * (y^3 + 7*x^4) * (y^7 + 2*x^12) * (y^11 + 2*x^18) + y^30;
int t = timer;
list l = integralBasis(f, 2);
LIB"integralbasis.lib";
ring r = 0,(x,y),dp;
poly f = (y^5 + y^4*x^7 + 2*x^8) * (y^3 + 7*x^4) * (y^7 + 2*x^12) * (y^11 + 2*x^18) + y^30;
int t = timer;
list l = integralBasis(f, 2, "atOrigin");
l;
LIB"integralbasis.lib";
ring r = 0,(x,y),(dp, L(100000));
poly f = (y^15 + 2*x^38)*(y^19 + 7*x^52) + y^36;
list l = integralBasis(f, 2, "check0");
l;
LIB"integralbasis.lib";
ring r = 0,(x,y),(dp, L(100000));
poly f = (y^15 + 2*x^38)*(y^19 + 7*x^52) + y^100;
list l = integralBasis(f, 2, "nonModular");
l;
LIB"integralbasis.lib";
ring r = 0,(x,y),dp;
int k = 11;
poly z = x - 2*y + 1;
poly f = x^(2*k) + y^(2*k) + z^(2*k) + 2 * (x^k * z^k - x^k * y^k + y^k * z^k);
f = monic(f);
list l = integralBasis(f, 2, "nonModular");
LIB"integralbasis.lib";
ring r = 0,(x,y),dp;
int k = 11;
poly z = x - 2*y + 1;
poly f = x^(2*k) + y^(2*k) + z^(2*k) + 2 * (x^k * z^k - x^k * y^k + y^k * z^k);
f = monic(f);
list l = integralBasis(f, 2, "nonModular");
classes
basering
seting S
LIB"integralbasis.lib";
ring r = 0,(x,y),dp;
int k = 11;
poly z = x - 2*y + 1;
poly f = x^(2*k) + y^(2*k) + z^(2*k) + 2 * (x^k * z^k - x^k * y^k + y^k * z^k);
f = monic(f);
list l = integralBasis(f, 2, "nonModular");
setring S
LIB"integralbasis.lib";
ring r = 0,(x,y),dp;
int k = 11;
poly z = x - 2*y + 1;
poly f = x^(2*k) + y^(2*k) + z^(2*k) + 2 * (x^k * z^k - x^k * y^k + y^k * z^k);
f = monic(f);
list l = integralBasis(f, 2, "nonModular");
fFr
den
buildPolyGround(fFr,den);
polyGround
fGround
fFr
buildPolyGroundXRoot(fFr, den);
fFr
den
LIB"integralbasis.lib";
ring r = 0,(x,y),dp;
int k = 11;
poly z = x - 2*y + 1;
poly f = x^(2*k) + y^(2*k) + z^(2*k) + 2 * (x^k * z^k - x^k * y^k + y^k * z^k);
f = monic(f);
list l = integralBasis(f, 2, "nonModular");
LIB"integralbasis.lib";
ring r = 0,(x,y),dp;
int k = 6;
poly z = 2*x - y + 1;
poly f = (x^(k+1) + y^(k+1) + z^(k+1))^2 - 4*(x^(k+1)*y^(k+1) + y^(k+1)*z^(k+1) + z^(k+1)*x^(k+1));
f = monic(f);
list l = integralBasis(f, 2);
LIB"integralbasis.lib";
ring r = 0,(x,y),dp;
int k = 6;
poly z = 2*x - y + 1;
poly f = (x^(k+1) + y^(k+1) + z^(k+1))^2 - 4*(x^(k+1)*y^(k+1) + y^(k+1)*z^(k+1) + z^(k+1)*x^(k+1));
f = monic(f);
list l = integralBasis(f, 2);
l;
LIB"integralbasis.lib";
ring r = 0,(x,y),dp;
int k = 40; int d = 50;
poly f = y^2 + x^(k+1) + y^d;
list l = integralBasis(f, 2);
LIB"integralbasis.lib";
ring r = 0,(x,y),dp;
int k = 40; int d = 50;
poly f = y^2 + x^(k+1) + y^d;
list l = integralBasis(f, 2);
LIB"integralbasis.lib";
ring r = 0,(x,y),dp;
int k = 40; int d = 50;
poly f = y^2 + x^(k+1) + y^d;
list l = integralBasis(f, 2);
l;
LIB"integralbasis.lib";
ring r = 0,(x,y),dp;
int k = 40; int d = 50;
poly f = x*(x^(k-1) + y^2) + y^d;
list l = integralBasis(f, 2, "atOrigin");
LIB"integralbasis.lib";
ring r = 0,(x,y),dp;
int k = 40; int d = 50;
poly f = x*(x^(k-1) + y^2) + y^d;
list l = integralBasis(f, 2, "atOrigin");
LIB"integralbasis.lib";
ring r = 0,(x,y),dp;
int k = 40; int d = 50;
poly f = x*(x^(k-1) + y^2) + y^d;
list l = integralBasis(f, 2, "atOrigin");
LIB"integralbasis.lib";
ring r = 0,(x,y),dp;
int k = 40; int d = 50;
poly f = x*(x^(k-1) + y^2) + y^d;
list l = integralBasis(f, 2, "atOrigin");
l;
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
int k = 5;
int d = 10;
poly f = polyDK(d, k, 1231);
list l = integralBasis(f, 2, "atOrigin");
l;
LIB"integralbasis.lib";
ring r = 0,(x,y),dp;
int k = 6;
poly z = 2*x - y + 1;
poly f = (x^(k+1) + y^(k+1) + z^(k+1))^2 - 4*(x^(k+1)*y^(k+1) + y^(k+1)*z^(k+1) + z^(k+1)*x^(k+1));
f = monic(f);
list l = integralBasis(f, 2);
LIB"integralbasis.lib";
ring r = 0,(x,y),dp;
int k = 6;
poly z = 2*x - y + 1;
poly f = (x^(k+1) + y^(k+1) + z^(k+1))^2 - 4*(x^(k+1)*y^(k+1) + y^(k+1)*z^(k+1) + z^(k+1)*x^(k+1));
f = monic(f);
list l = integralBasis(f, 2);
l;
LIB"integralbasis.lib";
ring r = 0,(x,y),dp;
int k = 11;
poly z = x - 2*y + 1;
poly f = x^(2*k) + y^(2*k) + z^(2*k) + 2 * (x^k * z^k - x^k * y^k + y^k * z^k);
f = monic(f);
list l = integralBasis(f, 2, "nonModular");
LIB"integralbasis.lib";
ring r = 0,(x,y),dp;
int k = 11;
poly z = x - 2*y + 1;
poly f = x^(2*k) + y^(2*k) + z^(2*k) + 2 * (x^k * z^k - x^k * y^k + y^k * z^k);
f = monic(f);
list l = integralBasis(f, 2, "nonModular");
LIB"integralbasis.lib";
ring r = 0,(x,y),dp;
poly f = x^15-21*x^14+8*x^13*y-6*x^13-16*x^12*y+20*x^11*y^2-x^12+8*x^11*y-36*x^10*y^2+24*x^9*y^3+4*x^9*y^2-16*x^8*y^3+26*x^7*y^4-6*x^6*y^4+8*x^5*y^5+4*x^3*y^6-y^8;
f = f *(-1);
list l = integralBasis(f, 2, "nonModular");
LIB"integralbasis.lib";
ring r = 0,(x,y),dp;
poly f = x12;
exponentsGCD(f, x);
exponentsGCD(f, 1);
poly f = x12 + x14;
exponentsGCD(f, 1);
LIB"integralbasis.lib";
ring r = 0,(x,y),dp;
poly f = x^15-21*x^14+8*x^13*y-6*x^13-16*x^12*y+20*x^11*y^2-x^12+8*x^11*y-36*x^10*y^2+24*x^9*y^3+4*x^9*y^2-16*x^8*y^3+26*x^7*y^4-6*x^6*y^4+8*x^5*y^5+4*x^3*y^6-y^8;
f = f *(-1);
list l = integralBasis(f, 2, "nonModular");
LIB"integralbasis.lib";
ring r = 0,(x,y),dp;
poly f = x^15-21*x^14+8*x^13*y-6*x^13-16*x^12*y+20*x^11*y^2-x^12+8*x^11*y-36*x^10*y^2+24*x^9*y^3+4*x^9*y^2-16*x^8*y^3+26*x^7*y^4-6*x^6*y^4+8*x^5*y^5+4*x^3*y^6-y^8;
f = f *(-1);
list l = integralBasis(f, 2, "nonModular");
LIB"integralbasis.lib";
ring r = 0,(x,y),dp;
poly f = x^15-21*x^14+8*x^13*y-6*x^13-16*x^12*y+20*x^11*y^2-x^12+8*x^11*y-36*x^10*y^2+24*x^9*y^3+4*x^9*y^2-16*x^8*y^3+26*x^7*y^4-6*x^6*y^4+8*x^5*y^5+4*x^3*y^6-y^8;
f = f *(-1);
list l = integralBasis(f, 2, "nonModular");
l;
LIB"integralbasis.lib";
ring r = 0,(x,y),dp;
poly f = x^15-21*x^14+8*x^13*y-6*x^13-16*x^12*y+20*x^11*y^2-x^12+8*x^11*y-36*x^10*y^2+24*x^9*y^3+4*x^9*y^2-16*x^8*y^3+26*x^7*y^4-6*x^6*y^4+8*x^5*y^5+4*x^3*y^6-y^8;
f = f *(-1);
list l = integralBasis(f, 2, "nonModular");
LIB"integralbasis.lib";
ring r = 0,(x,y),dp;
poly f = x^15-21*x^14+8*x^13*y-6*x^13-16*x^12*y+20*x^11*y^2-x^12+8*x^11*y-36*x^10*y^2+24*x^9*y^3+4*x^9*y^2-16*x^8*y^3+26*x^7*y^4-6*x^6*y^4+8*x^5*y^5+4*x^3*y^6-y^8;
f = f *(-1);
list l = integralBasis(f, 2, "nonModular");
l;
LIB"integralbasis.lib";
ring r = 0,(x,y),dp;
poly f = (y^4 + 2*x^3*y^2 + x^6 + x^5*y)^3 + x^11*y^11;
list l = integralBasis(f, 2, "nonModular");
l;
LIB"integralbasis.lib";
ring r = 0,(x,y),dp;
poly f = (y^4 + 2*x^3*y^2 + x^6 + x^5*y)^3 + x^11*y^11;
list l = integralBasis(f, 2, "nonModular");
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y3+x2)*(y2-x3)+y6;
integralBasis(f,2);
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y7 + x4) * (y7 + y6x + x4)*(y7 + y5x3 + x4)+y30;
int t = timer;
list l1 = integralBasis(f,2, "atOrigin");
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y7 + x4) * (y7 + y5x3 + x4)+y30;
list l2 = integralBasis(f,2, "atOrigin", "noOpti");
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y4+3x3y + x4)*(y^7 + 6x4y3 + 2xy + x7)*(y5+7xy-4x2)*(y3+x2)*(y2-x3)+y30;
int t = timer;
list l1 = integralBasis(f,2, "atOrigin");
l;
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y4+3x3y + x4)*(y^7 + 6x4y3 + 2xy + x7)*(y5+7xy-4x2)*(y3+x2)*(y2-x3)+y30;
int t = timer;
list l1 = integralBasis(f,2, "atOrigin");
"opti", timer - t;
l1;
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y4+3x3y + x4)*(y^7 + 6x4y3 + 2xy + x7)*(y9+7xy2-4x2)*(y3+x2)*(y2-x3)+y30;
int t = timer;
list l1 = integralBasis(f,2, "atOrigin");
"opti", timer - t;
l1;
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y5 + 3x2) * (y5 + y4x + x2)+y11;
int t = timer;
list l1 = integralBasis(f,2, "atOrigin");
"Optimization: ", timer - t;
t = timer;
l1;
f;
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y5 + x2) * (y5 + y4x + x2)+y11;
int t = timer;
list l1 = integralBasis(f,2, "atOrigin");
"Optimization: ", timer - t;
t = timer;
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y5 + x2) * (y5 + y4x + x2)+y11;
int t = timer;
list l1 = integralBasis(f,2, "atOrigin");
"Optimization: ", timer - t;
t = timer;
l1;
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y5 + x2) * (y5 + y4x + x2)+y11;
int t = timer;
list l1 = integralBasis(f,2, "atOrigin");
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y5 + x2) * (y5 + y4x + x2)+y11;
int t = timer;
list l1 = integralBasis(f,2, "atOrigin");
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y5 + x2) * (y5 + y4x + x2)+y11;
int t = timer;
list l1 = integralBasis(f,2, "atOrigin");
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y5 + x2) * (y5 + y4x + x2)+y11;
int t = timer;
list l1 = integralBasis(f,2, "atOrigin");
l1;
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y5 + x2) * (y5 + y4x + x2)+y11;
int t = timer;
list l1 = integralBasis(f,2, "atOrigin");
classes
ifOut
I2LiftedFull
mdm
with(algcurves);
f := (Y^5 + X^2) * (Y^5 + Y^4*X + X^2)+Y^11;
intBasis := integral_basis(f, X, Y);
puiseux(f,X=0,Y,0);
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y5 + x2) * (y5 + y4x + x2)+y11;
int t = timer;
list l1 = integralBasis(f,2, "atOrigin");
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y5 + x2) * (y5 + y4x + x2)+y11;
int t = timer;
list l1 = integralBasis(f,2, "atOrigin");
classes
I2Lifted
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y5 + x2) * (y5 + y4x + x2)+y11;
int t = timer;
list l1 = integralBasis(f,2, "atOrigin");
l1;
LIB"integralbasis.lib";
ring r = 0, (x,y), lp;
poly f = (y5 + x2) * (y5 + y4x + x2)+y11;
int t = timer;
list l1 = integralBasis(f,2, "atOrigin");
l1;
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y5 + x2) * (y5 + y4x + x2)+y11;
int t = timer;
list l1 = integralBasis(f,2, "atOrigin");
l1;
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y7 + x4) * (y7 + y5x3 + x4)+y30;
list l1 = integralBasis(f,2, "atOrigin");
"Optimization: ", timer - t;
t = timer;
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y5 + x2) * (y5 + y4x + x2)+y11;
int t = timer;
list l1 = integralBasis(f,2, "atOrigin");
"Optimization: ", timer - t;
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y4+3x3y + x4)*(y^7 + 6x4y3 + 2xy + x7)*(y5+7xy-4x2)*(y3+x2)*(y2-x3)+y30;
int t = timer;
list l1 = integralBasis(f,2, "atOrigin");
"opti", timer - t;
int t = timer;
list l2 = integralBasis(f,2, "atOrigin", "noOpti");
"no opti", timer - t;
reduce(l1[1], groebner(l2[1]));
reduce(l2[1], groebner(l1[1]));
printlevel = 5;
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y4+3x3y + x4)*(y^7 + 6x4y3 + 2xy + x7)*(y9+7xy2-4x2)*(y3+x2)*(y2-x3)+y30;
int t = timer;
list l1 = integralBasis(f,2, "atOrigin");
"opti", timer - t;
int t = timer;
list l2 = integralBasis(f,2, "atOrigin", "noOpti");
"no opti", timer - t;
reduce(l1[1], groebner(l2[1]));
reduce(l2[1], groebner(l1[1]));
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y7 + x4) * (y7 + y5x3 + x4)+y30;
int t = timer;
list l1 = integralBasis(f,2, "atOrigin");
"Optimization: ", timer - t;
printlevel = 10;
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y7 + x4) * (y7 + y5x3 + x4)+y30;
int t = timer;
list l1 = integralBasis(f,2, "atOrigin");
printlevel = 10;
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y7 + x4) * (y7 + y5x3 + x4)+y30;
int t = timer;
list l1 = integralBasis(f,2, "atOrigin");
printlevel = 10;
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y7 + x4) * (y7 + y5x3 + x4)+y30;
int t = timer;
list l1 = integralBasis(f,2, "atOrigin");
printlevel = 10;
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y7 + x4) * (y7 + y5x3 + x4)+y30;
int t = timer;
list l1 = integralBasis(f,2, "atOrigin");
classes
printlevel = 10;
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y7 + x4) * (y7 + y5x3 + x4)+y30;
int t = timer;
list l1 = integralBasis(f,2, "atOrigin");
l
f(j)
buildPolyGroundXRoot(f(j), den(j), 7);
buildPolyGroundXRoot(f(j), den(j), 20);
buildPolyGroundXRoot(f(j), den(j), 20*7);
f(j)
printlevel = 10;
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y7 + x4) * (y7 + y5x3 + x4)+y30;
int t = timer;
list l1 = integralBasis(f,2, "atOrigin");
printlevel = 10;
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y7 + x4) * (y7 + y5x3 + x4)+y30;
int t = timer;
list l1 = integralBasis(f,2, "atOrigin");
printlevel = 10;
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y7 + x4) * (y7 + y5x3 + x4)+y30;
int t = timer;
list l1 = integralBasis(f,2, "atOrigin");
printlevel = 10;
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y7 + x4) * (y7 + y5x3 + x4)+y30;
int t = timer;
list l1 = integralBasis(f,2, "atOrigin");
printlevel = 10;
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y7 + x4) * (y7 + y5x3 + x4)+y30;
int t = timer;
list l1 = integralBasis(f,2, "atOrigin");
printlevel = 10;
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y7 + x4) * (y7 + y5x3 + x4)+y30;
int t = timer;
list l1 = integralBasis(f,2, "atOrigin");
printlevel = 10;
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y7 + x4) * (y7 + y5x3 + x4)+y30;
int t = timer;
list l1 = integralBasis(f,2, "atOrigin");
printlevel = 10;
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y7 + x4) * (y7 + y5x3 + x4)+y30;
int t = timer;
list l1 = integralBasis(f,2, "atOrigin");
printlevel = 10;
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y7 + x4) * (y7 + y5x3 + x4)+y30;
int t = timer;
list l1 = integralBasis(f,2, "atOrigin");
f
f(1)
f(2)
j
den(2)
printlevel = 10;
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y7 + x4) * (y7 + y5x3 + x4)+y30;
int t = timer;
list l1 = integralBasis(f,2, "atOrigin");
d
I
printlevel = 10;
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y7 + x4) * (y7 + y5x3 + x4)+y30;
int t = timer;
list l1 = integralBasis(f,2, "atOrigin");
printlevel = 10;
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y7 + x4) * (y7 + y5x3 + x4)+y30;
int t = timer;
list l1 = integralBasis(f,2, "atOrigin");
d
den
printlevel = 10;
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y7 + x4) * (y7 + y5x3 + x4)+y30;
int t = timer;
list l1 = integralBasis(f,2, "atOrigin");
printlevel = 10;
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y7 + x4) * (y7 + y5x3 + x4)+y30;
int t = timer;
list l1 = integralBasis(f,2, "atOrigin");
I;
printlevel = 10;
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y7 + x4) * (y7 + y5x3 + x4)+y30;
int t = timer;
list l1 = integralBasis(f,2, "atOrigin");
printlevel = 10;
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y7 + x4) * (y7 + y5x3 + x4)+y30;
int t = timer;
list l1 = integralBasis(f,2, "atOrigin");
fNewTemp
printlevel = 10;
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y7 + x4) * (y7 + y5x3 + x4)+y30;
int t = timer;
list l1 = integralBasis(f,2, "atOrigin");
fNewTemp
reduce(fNewTemp, T(1)^55+T(2)^55+T(3)^55+T(4)^55+T(5)^55+T(6)^55+T(7)^55+T(8)^55-1)
reduce(fNewTemp, T(1)^55+T(2)^55+T(3)^55+T(4)^55+T(5)^55+T(6)^55+T(7)^55+T(8)^55-1)
poly fg = T(1)^55+T(2)^55+T(3)^55+T(4)^55;
fg = fg+T(5)^55+T(6)^55+T(7)^55+T(8)^55-1);
reduce(fNewTemp, fg);
printlevel = 10;
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y7 + x4) * (y7 + y5x3 + x4)+y30;
int t = timer;
list l1 = integralBasis(f,2, "atOrigin");
poly fg = T(1)^55+T(2)^55+T(3)^55+T(4)^55;
fg = fg+T(5)^55+T(6)^55+T(7)^55+T(8)^55-1);
printlevel = 10;
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y7 + x4) * (y7 + y5x3 + x4)+y30;
int t = timer;
list l1 = integralBasis(f,2, "atOrigin");
poly fg = T(1)^55+T(2)^55+T(3)^55+T(4)^55;
printlevel = 10;
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y7 + x4) * (y7 + y5x3 + x4)+y30;
int t = timer;
list l1 = integralBasis(f,2, "atOrigin");
poly fg = T(1)^55+T(2)^55+T(3)^55+T(4)^55;
fg = fg+T(5)^55+T(6)^55+T(7)^55+T(8)^55-1;
printlevel = 10;
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y7 + x4) * (y7 + y5x3 + x4)+y30;
int t = timer;
list l1 = integralBasis(f,2, "atOrigin");
poly fg = T(1)^55+T(2)^55+T(3)^55+T(4)^55;
fg = fg+T(5)^55+T(6)^55+T(7)^55-1;
reduce(fNewTemp, fg);
5
5 mod 3
6 mod 3
printlevel = 10;
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y7 + x4) * (y7 + y5x3 + x4)+y30;
int t = timer;
list l1 = integralBasis(f,2, "atOrigin");
printlevel = 10;
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y7 + x4) * (y7 + y5x3 + x4)+y30;
int t = timer;
list l1 = integralBasis(f,2, "atOrigin");
printlevel = 10;
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y7 + x4) * (y7 + y5x3 + x4)+y30;
int t = timer;
list l1 = integralBasis(f,2, "atOrigin");
printlevel = 10;
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y7 + x4) * (y7 + y5x3 + x4)+y30;
int t = timer;
list l1 = integralBasis(f,2, "atOrigin");
printlevel = 10;
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y7 + x4) * (y7 + y5x3 + x4)+y30;
int t = timer;
list l1 = integralBasis(f,2, "atOrigin");
printlevel = 10;
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y7 + x4) * (y7 + y5x3 + x4)+y30;
int t = timer;
list l1 = integralBasis(f,2, "atOrigin");
fNew = reduce(fNewTemp, I);
fNew
printlevel = 10;
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y7 + x4) * (y7 + y5x3 + x4)+y30;
int t = timer;
list l1 = integralBasis(f,2, "atOrigin");
printlevel = 10;
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y7 + x4) * (y7 + y5x3 + x4)+y30;
int t = timer;
list l1 = integralBasis(f,2, "atOrigin");
printlevel = 10;
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y7 + x4) * (y7 + y5x3 + x4)+y30;
int t = timer;
list l1 = integralBasis(f,2, "atOrigin");
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y7 + x4) * (y7 + y5x3 + 3x4)+y30;
int t = timer;
list l1 = integralBasis(f,2, "atOrigin");
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y7 + x4) * (y7 + y5x3 + 3x4)+y30;
int t = timer;
list l1 = integralBasis(f,2, "atOrigin");
M;
l;
f(j)
f(i)
l
f(i)
f(j)
den(j)
buildPolyGroundXRoot(f(j), den(j), -1);
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y7 + x4) * (y7 + y5x3 + 3x4)+y30;
int t = timer;
list l1 = integralBasis(f,2, "atOrigin");
den(j)
f(j)
d
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y7 + x4) * (y7 + y5x3 + 3x4)+y30;
int t = timer;
list l1 = integralBasis(f,2, "atOrigin");
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y7 + x4) * (y7 + y5x3 + 3x4)+y30;
int t = timer;
list l1 = integralBasis(f,2, "atOrigin");
l
f(j)
den(j)
l
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y7 + x4) * (y7 + y5x3 + 3x4)+y30;
int t = timer;
list l1 = integralBasis(f,2, "atOrigin");
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y7 + x4) * (y7 + y5x3 + 3x4)+y30;
int t = timer;
list l1 = integralBasis(f,2, "atOrigin");
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y7 + x4) * (y7 + y5x3 + 3x4)+y30;
int t = timer;
list l1 = integralBasis(f,2, "atOrigin");
vS
MClass
M
MSelf
md
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y7 + x4) * (y7 + y5x3 + 3x4)+y30;
int t = timer;
list l1 = integralBasis(f,2, "atOrigin");
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y7 + x4) * (y7 + y5x3 + 3x4)+y30;
int t = timer;
list l1 = integralBasis(f,2, "atOrigin");
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y7 + x4) * (y7 + y5x3 + 3x4)+y30;
int t = timer;
list l1 = integralBasis(f,2, "atOrigin");
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y7 + x4) * (y7 + y5x3 + 3x4)+y30;
int t = timer;
list l1 = integralBasis(f,2, "atOrigin");
M
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y7 + x4) * (y7 + y5x3 + 3x4)+y30;
int t = timer;
list l1 = integralBasis(f,2, "atOrigin");
l;
l1;
printlevel = 10;
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y7 + x4) * (y7 + y5x3 + x4)+y30;
int t = timer;
list l1 = integralBasis(f,2, "atOrigin");
printlevel = 10;
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y7 + x4) * (y7 + y5x3 + x4)+y30;
int t = timer;
list l1 = integralBasis(f,2, "atOrigin");
printlevel = 10;
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y7 + x4) * (y7 + y5x3 + x4)+y30;
int t = timer;
list l1 = integralBasis(f,2, "atOrigin");
printlevel = 10;
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y7 + x4) * (y7 + y5x3 + x4)+y30;
int t = timer;
list l1 = integralBasis(f,2, "atOrigin");
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y7 + x4) * (y7 + y5x3 + x4)+y30;
int t = timer;
list l1 = integralBasis(f,2, "atOrigin");
I
fNew = reduce(fNewTemp, I);
fNew;
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y7 + x4) * (y7 + y5x3 + x4)+y30;
int t = timer;
list l1 = integralBasis(f,2, "atOrigin");
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y7 + x4) * (y7 + y5x3 + x4)+y30;
int t = timer;
list l1 = integralBasis(f,2, "atOrigin");
M
classes
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y7 + x4) * (y7 + y5x3 + x4)+y30;
int t = timer;
list l1 = integralBasis(f,2, "atOrigin");
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y7 + x4) * (y7 + y5x3 + x4)+y30;
int t = timer;
list l1 = integralBasis(f,2, "atOrigin");
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y7 + x4) * (y7 + y5x3 + x4)+y30;
int t = timer;
list l1 = integralBasis(f,2, "atOrigin");
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y7 + x4) * (y7 + y5x3 + x4)+y30;
int t = timer;
list l1 = integralBasis(f,2, "atOrigin");
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y7 + x4) * (y7 + y5x3 + x4)+y30;
int t = timer;
list l1 = integralBasis(f,2, "atOrigin");
fNewTemp
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y7 + x4) * (y7 + y5x3 + x4)+y30;
int t = timer;
list l1 = integralBasis(f,2, "atOrigin");
classes
classes
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y7 + x4) * (y7 + y5x3 + 3x4)+y30;
int t = timer;
list l1 = integralBasis(f,2, "atOrigin");
list l1 = integralBasis(f,2, "atOrigin");
classes
def S = classes[2][1]
setring S
PE
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y7 + x4) * (y7 + y5x3 + x4)+y30;
int t = timer;
list l1 = integralBasis(f,2, "atOrigin");
l;
l1;
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y7 + x4) * (y7 + y5x3 + x4)+y30;
int t = timer;
list l2 = integralBasis(f,2, "atOrigin", "noOpti");
l1;
l;
l2;
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y7 + x4) * (y7 + y5x3 + x4)+y30;
int t = timer;
list l2 = integralBasis(f,2, "atOrigin", "noOpti");
bF
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y7 + x4) * (y7 + y5x3 + x4)+y30;
int t = timer;
list l2 = integralBasis(f,2, "atOrigin", "noOpti");
ordsBest
bestElem
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y7 + x4) * (y7 + y5x3 + x4)+y30;
int t = timer;
list l2 = integralBasis(f,2, "atOrigin", "noOpti");
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y7 + x4) * (y7 + y5x3 + x4)+y30;
int t = timer;
list l2 = integralBasis(f,2, "atOrigin", "noOpti");
classes;
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y7 + x4) * (y7 + y5x3 + x4)+y30;
int t = timer;
list l2 = integralBasis(f,2, "atOrigin", "noOpti");
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y7 + x4) * (y7 + y5x3 + x4)+y30;
int t = timer;
list l2 = integralBasis(f,2, "atOrigin", "noOpti");
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y7 + x4) * (y7 + y5x3 + x4)+y30;
int t = timer;
list l2 = integralBasis(f,2, "atOrigin", "noOpti");
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y7 + x4) * (y7 + y5x3 + x4)+y30;
int t = timer;
list l1 = integralBasis(f,2, "atOrigin");
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y7 + x4) * (y7 + y5x3 + x4)+y30;
int t = timer;
list l1 = integralBasis(f,2, "atOrigin");
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y7 + x4) * (y7 + y5x3 + x4)+y30;
int t = timer;
list l1 = integralBasis(f,2, "atOrigin");
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y7 + x4) * (y7 + y5x3 + x4)+y30;
int t = timer;
list l1 = integralBasis(f,2, "atOrigin");
fSegment
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y7 + x4) * (y7 + y5x3 + x4)+y30;
int t = timer;
list l1 = integralBasis(f,2, "atOrigin");
classes
getSlopes(classes);
l
l[1][2]
classesNew
classesNew[size(classesNew) + 1] = list();
classesNew
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y7 + x4) * (y7 + y5x3 + x4)+y30;
int t = timer;
list l1 = integralBasis(f,2, "atOrigin");
classes
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y7 + x4) * (y7 + y5x3 + x4)+y30;
int t = timer;
list l1 = integralBasis(f,2, "atOrigin");
classes
slopes
l
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y7 + x4) * (y7 + y5x3 + x4)+y30;
int t = timer;
list l1 = integralBasis(f,2, "atOrigin");
j
j = 1
slopes[j][1] * l[1][2]
slopes[j][2] * l[1][1]
slopes[j][2] * l[2][1]
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y7 + x4) * (y7 + y5x3 + x4)+y30;
int t = timer;
list l1 = integralBasis(f,2, "atOrigin");
classes
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y7 + x4) * (y7 + y5x3 + x4)+y30;
int t = timer;
list l1 = integralBasis(f,2, "atOrigin");
classes
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y7 + x4) * (y7 + y5x3 + x4)+y30;
int t = timer;
list l1 = integralBasis(f,2, "atOrigin");
classes
classesNew
l1;
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y7 + x4) * (y7 + y5x3 + x4)+y30;
int t = timer;
list l1 = integralBasis(f,2, "atOrigin");
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y7 + x4) * (y7 + y5x3 + x4)+y30;
int t = timer;
list l1 = integralBasis(f,2, "atOrigin");
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y7 + x4) * (y7 + y5x3 + x4)+y30;
int t = timer;
list l1 = integralBasis(f,2, "atOrigin");
ring r = 0, x dp;
ring r = 0, x, dp;
Set l;
LIB"sets.lib";
Set l;
list o = 1, x, list();
o;
l = o;
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y7 + x4) * (y7 + y5x3 + x4)+y30;
int t = timer;
list l1 = integralBasis(f,2, "atOrigin");
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y7 + x4) * (y7 + y5x3 + x4)+y30;
int t = timer;
list l1 = integralBasis(f,2, "atOrigin");
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y7 + x4) * (y7 + y5x3 + x4)+y30;
int t = timer;
list l1 = integralBasis(f,2, "atOrigin");
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y7 + x4) * (y7 + y5x3 + x4)+y30;
int t = timer;
list l1 = integralBasis(f,2, "atOrigin");
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y7 + x4) * (y7 + y5x3 + x4)+y30;
int t = timer;
list l1 = integralBasis(f,2, "atOrigin");
polySet
polySet[1]
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y7 + x4) * (y7 + y5x3 + x4)+y30;
int t = timer;
list l1 = integralBasis(f,2, "atOrigin");
polySet
list ll = polySet
ll;
x == list()
list l1 = 1, x;
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y7 + x4) * (y7 + y5x3 + x4)+y30;
int t = timer;
list l1 = integralBasis(f,2, "atOrigin");
list l1 = 1, x
list l2 = x, y;
l1 == l2;
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y7 + x4) * (y7 + y5x3 + x4)+y30;
int t = timer;
list l1 = integralBasis(f,2, "atOrigin");
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y7 + x4) * (y7 + y5x3 + x4)+y30;
int t = timer;
list l1 = integralBasis(f,2, "atOrigin");
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y7 + x4) * (y7 + y5x3 + x4)+y30;
int t = timer;
list l1 = integralBasis(f,2, "atOrigin");
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y7 + x4) * (y7 + y5x3 + x4)+y30;
int t = timer;
list l1 = integralBasis(f,2, "atOrigin");
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y7 + x4) * (y7 + y5x3 + x4)+y30;
int t = timer;
list l1 = integralBasis(f,2, "atOrigin");
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y7 + x4) * (y7 + y5x3 + x4)+y30;
int t = timer;
list l1 = integralBasis(f,2, "atOrigin");
classes
classes[1]
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y7 + x4) * (y7 + y5x3 + x4)+y30;
int t = timer;
list l1 = integralBasis(f,2, "atOrigin");
[200~LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y7 + x4) * (y7 + y5x3 + x4)+y30;
int t = timer;
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y7 + x4) * (y7 + y5x3 + x4)+y30;
int t = timer;
intvec v = (3, 4, 10);
summandsFac(v, 30);
int u = 30;
summandsFac(v, u);
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y7 + x4) * (y7 + y5x3 + x4)+y30;
int t = timer;
summandsFac(v, u);
LIB"integralbasis.lib";
ring r = 0, x, dp;
intvec v = (1, 7, 10);
int i = 30;
summandsFac(v, i);
LIB"integralbasis.lib";
ring r = 0, x, dp;
intvec v = (1, 7, 10);
int i = 30;
summandsFac(v, i);
LIB"integralbasis.lib";
ring r = 0, x, dp;
intvec v = (1, 7, 10);
int i = 30;
summandsFac(v, i);
LIB"integralbasis.lib";
ring r = 0, x, dp;
intvec v = (1, 7, 10);
int i = 30;
summandsFac(v, i);
LIB"integralbasis.lib";
ring r = 0, x, dp;
intvec v = (1, 7, 10);
int i = 30;
summandsFac(v, i);
LIB"integralbasis.lib";
ring r = 0, x, dp;
intvec v = (1, 7, 10);
int i = 30;
summandsFac(v, i);
LIB"integralbasis.lib";
ring r = 0, x, dp;
intvec v = (1, 7, 10);
int i = 30;
summandsFac(v, i);
LIB"integralbasis.lib";
ring r = 0, x, dp;
intvec v = (1, 7, 10);
int i = 30;
summandsFac(v, i);
LIB"integralbasis.lib";
ring r = 0, x, dp;
intvec v = (1, 7, 10);
int i = 30;
summandsFac(v, i);
v;
v,10;
intvec(v,10);
LIB"integralbasis.lib";
ring r = 0, x, dp;
intvec v = (1, 7, 10);
int i = 30;
summandsFac(v, i);
size(v);
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y7 + x4) * (y7 + y5x3 + x4)+y30;
int t = timer;
list l1 = integralBasis(f,2, "atOrigin");
list l1 = integralBasis(f,2, "atOrigin");
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y7 + x4) * (y7 + y5x3 + x4)+y30;
int t = timer;
list l1 = integralBasis(f,2, "atOrigin");
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y7 + x4) * (y7 + y5x3 + x4)+y30;
int t = timer;
list l1 = integralBasis(f,2, "atOrigin");
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y7 + x4) * (y7 + y5x3 + x4)+y30;
int t = timer;
list l1 = integralBasis(f,2, "atOrigin");
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y7 + x4) * (y7 + y5x3 + x4)+y30;
int t = timer;
list l1 = integralBasis(f,2, "atOrigin");
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y7 + x4) * (y7 + y5x3 + x4)+y30;
int t = timer;
list l1 = integralBasis(f,2, "atOrigin");
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y7 + x4) * (y7 + y5x3 + x4)+y30;
int t = timer;
list l1 = integralBasis(f,2, "atOrigin");
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y7 + x4) * (y7 + y5x3 + x4)+y30;
int t = timer;
list l1 = integralBasis(f,2, "atOrigin");
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y7 + x4) * (y7 + y5x3 + x4)+y30;
int t = timer;
list l1 = integralBasis(f,2, "atOrigin");
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y7 + x4) * (y7 + y5x3 + x4)+y30;
int t = timer;
list l1 = integralBasis(f,2, "atOrigin");
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y7 + x4) * (y7 + y5x3 + x4)+y30;
int t = timer;
list l1 = integralBasis(f,2, "atOrigin");
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y7 + x4) * (y7 + y5x3 + x4)+y30;
int t = timer;
list l1 = integralBasis(f,2, "atOrigin");
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y7 + x4) * (y7 + y5x3 + x4)+y30;
int t = timer;
list l1 = integralBasis(f,2, "atOrigin");
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y7 + x4) * (y7 + y5x3 + x4)+y30;
int t = timer;
list l1 = integralBasis(f,2, "atOrigin");
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y7 + x4) * (y7 + y5x3 + x4)+y30;
int t = timer;
list l1 = integralBasis(f,2, "atOrigin");
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y7 + x4) * (y7 + y5x3 + x4)+y30;
int t = timer;
list l1 = integralBasis(f,2, "atOrigin");
l;
l1;
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y7 + x4) * (y7 + y5x3 + x4)+y30;
int t = timer;
list l1 = integralBasis(f,2, "atOrigin");
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y7 + x4) * (y7 + y5x3 + x4)+y30;
int t = timer;
list l1 = integralBasis(f,2, "atOrigin");
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y7 + x4) * (y7 + y5x3 + x4)+y30;
int t = timer;
list l1 = integralBasis(f,2, "atOrigin");
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y7 + x4) * (y7 + y5x3 + x4)+y30;
int t = timer;
list l2 = integralBasis(f,2, "atOrigin", "noOpti");
l2;
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y7 + x4) * (y7 + y5x3 + x4)+y30;
int t = timer;
list l2 = integralBasis(f,2, "atOrigin");
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y7 + x4) * (y7 + y5x3 + x4)+y30;
int t = timer;
list l2 = integralBasis(f,2, "atOrigin", "noOpti");
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y7 + x4) * (y7 + y5x3 + x4)+y30;
int t = timer;
list l2 = integralBasis(f,2, "atOrigin", "noOpti");
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y7 + x4) * (y7 + y5x3 + x4)+y30;
int t = timer;
list l2 = integralBasis(f,2, "atOrigin", "noOpti");
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y7 + x4) * (y7 + y5x3 + x4)+y30;
int t = timer;
list l1 = integralBasis(f,2, "atOrigin");
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y7 + x4) * (y7 + y5x3 + x4)+y30;
int t = timer;
list l1 = integralBasis(f,2, "atOrigin");
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y7 + x4) * (y7 + y5x3 + x4)+y30;
int t = timer;
list l1 = integralBasis(f,2, "atOrigin");
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y7 + x4) * (y7 + y5x3 + x4)+y30;
int t = timer;
list l1 = integralBasis(f,2, "atOrigin", "noOpti");
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y5 + x2) * (y5 + y4x + x2)+y11;
int t = timer;
list l1 = integralBasis(f,2, "atOrigin");
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y5 + x2) * (y5 + y4x + x2)+y11;
int t = timer;
list l1 = integralBasis(f,2, "atOrigin");
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y5 + x2) * (y5 + y4x + x2)+y11;
int t = timer;
list l1 = integralBasis(f,2, "atOrigin");
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y7 + x2) * (y5 + y4x + x2)+y11;
int t = timer;
list l1 = integralBasis(f,2, "atOrigin");
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y7 + x2) * (y5 + y4x + x2)+y11;
int t = timer;
list l1 = integralBasis(f,2, "atOrigin");
classes
f
def S = classes[1][1];
setring S;
PE
setring R
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y7 + x2) * (y5 + y4x + x2)+y11;
int t = timer;
list l1 = integralBasis(f,2, "atOrigin");
typeOf(classPE);
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y7 + x2) * (y5 + y4x + x2)+y11;
int t = timer;
list l1 = integralBasis(f,2, "atOrigin");
typeOf(classPe)
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y7 + x2) * (y5 + y4x + x2)+y11;
int t = timer;
list l1 = integralBasis(f,2, "atOrigin");
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y7 + x2) * (y5 + y4x + x2)+y11;
int t = timer;
list l1 = integralBasis(f,2, "atOrigin");
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y7 + x2) * (y5 + y4x + x2)+y11;
int t = timer;
list l1 = integralBasis(f,2, "atOrigin");
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y7 + x2) * (y5 + y4x + x2)+y11;
int t = timer;
list l1 = integralBasis(f,2, "atOrigin");
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y7 + x2) * (y5 + y4x + x2)+y11;
int t = timer;
list l1 = integralBasis(f,2, "atOrigin");
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y7 + x2) * (y5 + y4x + x2)+y11;
int t = timer;
list l1 = integralBasis(f,2, "atOrigin");
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y7 + x2) * (y5 + y4x + x2)+y11;
int t = timer;
list l1 = integralBasis(f,2, "atOrigin");
cc = intvec;
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y7 + x2) * (y5 + y4x + x2)+y11;
int t = timer;
list l1 = integralBasis(f,2, "atOrigin");
intvec cc;
cc[5] = 0:
cc
:
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y7 + x2) * (y5 + y4x + x2)+y11;
int t = timer;
list l1 = integralBasis(f,2, "atOrigin");
intvec cc = 1..5;
cc;
0*cc
zero
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y7 + x2) * (y5 + y4x + x2)+y11;
int t = timer;
list l1 = integralBasis(f,2, "atOrigin");
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y7 + x2) * (y5 + y4x + x2)+y11;
int t = timer;
list l1 = integralBasis(f,2, "atOrigin");
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y7 + x2) * (y5 + y4x + x2)+y11;
int t = timer;
list l1 = integralBasis(f,2, "atOrigin");
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y7 + x2) * (y5 + y4x + x2)+y11;
int t = timer;
list l1 = integralBasis(f,2, "atOrigin");
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y7 + x2) * (y5 + y4x + x2)+y11;
int t = timer;
list l1 = integralBasis(f,2, "atOrigin");
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y7 + x2) * (y5 + y4x + x2)+y11;
int t = timer;
list l1 = integralBasis(f,2, "atOrigin");
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y7 + x2) * (y5 + y4x + x2)+y11;
int t = timer;
list l1 = integralBasis(f,2, "atOrigin");
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y7 + x2) * (y5 + y4x + x2)+y11;
int t = timer;
list l1 = integralBasis(f,2, "atOrigin");
def S = classes[1][1]
setring S;
PE
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y7 + x2) * (y5 + y4x + x2)+y13;
int t = timer;
list l1 = integralBasis(f,2, "atOrigin");
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y7 + x2) * (y5 + y4x + x2)+y13;
int t = timer;
list l1 = integralBasis(f,2, "atOrigin");
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y7 + x2) * (y5 + y4x + x2)+y13;
int t = timer;
list l1 = integralBasis(f,2, "atOrigin");
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y7 + x2) * (y5 + y4x + x2)+y13;
int t = timer;
list l1 = integralBasis(f,2, "atOrigin");
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y7 + x2) * (y5 + y4x + x2)+y13;
int t = timer;
list l1 = integralBasis(f,2, "atOrigin");
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y7 + x2) * (y5 + y4x + x2)+y13;
int t = timer;
list l1 = integralBasis(f,2, "atOrigin");
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y7 + x2) * (y5 + y4x + x2)+y13;
int t = timer;
list l1 = integralBasis(f,2, "atOrigin");
polySet
degPolySet
ordExpAtPoly
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y7 + x2) * (y5 + y4x + x2)+y13;
int t = timer;
list l1 = integralBasis(f,2, "atOrigin");
ordExpAtPoly
polySet
classes
ordAtPol(polySet[2], classes[1][1]);
deg(0, vy)
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y7 + x2) * (y5 + y4x + x2)+y13;
int t = timer;
list l1 = integralBasis(f,2, "atOrigin");
i
j
polySet[i]
classes[j]
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y7 + x2) * (y5 + y4x + x2)+y13;
int t = timer;
list l1 = integralBasis(f,2, "atOrigin");
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y7 + x2) * (y5 + y4x + x2)+y13;
int t = timer;
list l1 = integralBasis(f,2, "atOrigin");
hs
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y7 + x2) * (y5 + y4x + x2)+y13;
int t = timer;
list l1 = integralBasis(f,2, "atOrigin");
MM[1, ncols(MM)]
MM[1, ncols(MM)]
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y7 + x2) * (y5 + y4x + x2)+y13;
int t = timer;
list l1 = integralBasis(f,2, "atOrigin");
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y7 + x2) * (y5 + y4x + x2)+y13;
int t = timer;
list l1 = integralBasis(f,2, "atOrigin");
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y7 + x2) * (y5 + y4x + x2)+y13;
int t = timer;
list l1 = integralBasis(f,2, "atOrigin");
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y7 + x2) * (y5 + y4x + x2)+y13;
int t = timer;
list l1 = integralBasis(f,2, "atOrigin");
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y7 + x2) * (y5 + y4x + x2)+y13;
int t = timer;
list l1 = integralBasis(f,2, "atOrigin");
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y7 + x2) * (y5 + y4x + x2)+y13;
int t = timer;
list l1 = integralBasis(f,2, "atOrigin");
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y7 + x4) * (y7 + y5x3 + x4)+y30;
int t = timer;
list l1 = integralBasis(f,2, "atOrigin");
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y7 + x4) * (y7 + y5x3 + x4)+y30;
int t = timer;
list l1 = integralBasis(f,2, "atOrigin");
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y7 + x4) * (y7 + y5x3 + x4)+y30;
int t = timer;
list l1 = integralBasis(f,2, "atOrigin");
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y7 + x4) * (y7 + y5x3 + x4)+y30;
int t = timer;
list l1 = integralBasis(f,2, "atOrigin");
classes
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y7 + x4) * (y7 + y5x3 + x4)+y30;
int t = timer;
list l1 = integralBasis(f,2, "atOrigin");
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y7 + x4) * (y7 + y5x3 + x4)+y30;
int t = timer;
list l1 = integralBasis(f,2, "atOrigin");
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y7 + x4) * (y7 + y5x3 + x4)+y30;
int t = timer;
list l1 = integralBasis(f,2, "atOrigin");
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y7 + x4) * (y7 + y5x3 + 3x4)+y30;
int t = timer;
list l1 = integralBasis(f,2, "atOrigin");
LIB"integralbasis.lib";
ring r = 0,(x,y),(dp, L(100000));
poly f = (y^15 + 2*x^38)*(y^19 + 7*x^52) + y^36;
list l = integralBasis(f, 2);
l;
LIB"integralbasis.lib";
ring r = 0,(x,y),(dp, L(100000));
poly f = (y^15 + 2*x^38)*(y^19 + 7*x^52) + y^36;
list l = integralBasis(f, 2, "noOpti");
l;
LIB"integralbasis.lib";
ring r = 0,(x,y),(dp, L(100000));
poly f = (y^15 + 2*x^38)*(y^19 + 7*x^52) + y^36;
list l = integralBasis(f, 2);
LIB"integralbasis.lib";
ring r = 0,(x,y),(dp, L(100000));
poly f = (y^15 + 2*x^38)*(y^19 + 7*x^52) + y^36;
list l = integralBasis(f, 2);
LIB"integralbasis.lib";
ring r = 0,(x,y),(dp, L(100000));
poly f = (y^15 + 2*x^38)*(y^19 + 7*x^52) + y^36;
list l = integralBasis(f, 2);
classes
MSelf
l;
LIB"integralbasis.lib";
ring r = 0,(x,y),(dp, L(100000));
poly f = (y^15 + 2*x^38)*(y^19 + 7*x^52) + y^36;
list l = integralBasis(f, 2);
LIB"integralbasis.lib";
ring r = 0,(x,y),(dp, L(100000));
poly f = (y^15 + 2*x^38)*(y^19 + 7*x^52) + y^36;
list l = integralBasis(f, 2);
ib
size(ib)
ib[34]
int(ib[34][1])
LIB"integralbasis.lib";
ring r = 0,(x,y),(dp, L(100000));
poly f = (y^15 + 2*x^38)*(y^19 + 7*x^52) + y^36;
list l = integralBasis(f, 2);
l;
LIB"integralbasis.lib";
ring r = 0,(x,y),(dp, L(100000));
poly f = (y^15 + 2*x^38)*(y^19 + 7*x^52) + y^36;
list l = integralBasis(f, 2);
LIB"integralbasis.lib";
ring r = 0,(x,y),(dp, L(100000));
poly f = (y^15 + 2*x^38)*(y^19 + 7*x^52) + y^36;
list l = integralBasis(f, 2);
LIB"integralbasis.lib";
ring r = 0,(x,y),(dp, L(100000));
poly f = (y^15 + 2*x^38)*(y^19 + 7*x^52) + y^36;
list l = integralBasis(f, 2);
LIB"integralbasis.lib";
ring r = 0,(x,y),(dp, L(100000));
poly f = (y^15 + 2*x^38)*(y^19 + 7*x^52) + y^36;
list l = integralBasis(f, 2);
list l = integralBasis(f, 2, "noOpti");
l;
list l1 = integralBasis(f, 2);
list l2 = integralBasis(f, 2, "noOpti");
l1;
reduce(l1[1], groebner(l2[1]));
reduce(l2[1], groebner(l1[1]));
list l1;
ring r = 0,(x,y),(dp, L(100000));
poly f = (y^15 + 2*x^38)*(y^19 + 7*x^52) + y^36;
list l1 = integralBasis(f, 2);
LIB"integralbasis.lib";
ring r = 0,(x,y),(dp, L(100000));
poly f = (y^15 + 2*x^38)*(y^19 + 7*x^52) + y^36;
list l1 = integralBasis(f, 2);
LIB"integralbasis.lib";
ring r = 0,(x,y),(dp, L(100000));
poly f = (y^15 + 2*x^38)*(y^19 + 7*x^52) + y^36;
list l1 = integralBasis(f, 2);
LIB"integralbasis.lib";
ring r = 0,(x,y),(dp, L(100000));
poly f = (y^15 + 2*x^38)*(y^19 + 7*x^52) + y^36;
list l1 = integralBasis(f, 2);
polySet
classes
def S = classes[1][1];
setring S;
PE
basering
LIB"integralbasis.lib";
ring r = 0,(x,y),(dp, L(100000));
poly f = (y^15 + 2*x^38)*(y^19 + 7*x^52) + y^36;
list l1 = integralBasis(f, 2);
h
size(h)
hs
LIB"integralbasis.lib";
ring r = 0,(x,y),(dp, L(100000));
poly f = (y^15 + 2*x^38)*(y^19 + 7*x^52) + y^36;
list l1 = integralBasis(f, 2);
poly hs = subst(h, var(2), g);
hs
LIB"integralbasis.lib";
ring r = 0,(x,y),(dp, L(100000));
poly f = (y^15 + 2*x^38)*(y^19 + 7*x^52) + y^36;
list l1 = integralBasis(f, 2);
LIB"integralbasis.lib";
ring r = 0,(x,y),(dp, L(100000));
poly f = (y^15 + 2*x^38)*(y^19 + 7*x^52) + y^36;
list l1 = integralBasis(f, 2);
list l2 = integralBasis(f, 2, "noOpti");
reduce(l1[1], groebner(l2[1]));
reduce(l2[1], groebner(l1[1]));
LIB"integralbasis.lib";
ring r = 0,(x,y),(dp, L(100000));
poly f = (y^15 + 2*x^38)*(y^19 + 7*x^52) + y^36;
list l1 = integralBasis(f, 2);
LIB"integralbasis.lib";
ring r = 0,(x,y),(dp, L(100000));
poly f = (y^15 + 2*x^38)*(y^19 + 7*x^52) + y^36;
list l1 = integralBasis(f, 2);
LIB"integralbasis.lib";
ring r = 0,(x,y),(dp, L(100000));
poly f = (y^15 + 2*x^38)*(y^19 + 7*x^52) + y^36;
list l1 = integralBasis(f, 2);
LIB"integralbasis.lib";
ring r = 0,(x,y),(dp, L(100000));
poly f = (y^15 + 2*x^38)*(y^19 + 7*x^52) + y^36;
list l1 = integralBasis(f, 2);
LIB"integralbasis.lib";
ring r = 0,(x,y),(dp, L(100000));
poly f = (y^15 + 2*x^38)*(y^19 + 7*x^52) + y^36;
list l1 = integralBasis(f, 2);
LIB"integralbasis.lib";
ring r = 0,(x,y),(dp, L(100000));
poly f = (y^15 + 2*x^38)*(y^19 + 7*x^52) + y^36;
list l1 = integralBasis(f, 2);
LIB"integralbasis.lib";
ring r = 0,(x,y),(dp, L(100000));
poly f = (y^15 + 2*x^38)*(y^19 + 7*x^52) + y^36;
list l1 = integralBasis(f, 2);
LIB"integralbasis.lib";
ring r = 0,(x,y),(dp, L(100000));
poly f = (y^15 + 2*x^38)*(y^19 + 7*x^52) + y^36;
list l1 = integralBasis(f, 2);
LIB"integralbasis.lib";
ring r = 0,(x,y),(dp, L(100000));
poly f = (y^15 + 2*x^38)*(y^19 + 7*x^52) + y^36;
list l1 = integralBasis(f, 2);
LIB"integralbasis.lib";
ring r = 0,(x,y),(dp, L(100000));
poly f = (y^15 + 2*x^38)*(y^19 + 7*x^52) + y^36;
list l1 = integralBasis(f, 2);
l1;
list l2 = integralBasis(f, 2, "noOpti");
list l2 = integralBasis(f, 2, "noOpti");
LIB"integralbasis.lib";
ring r = 0,(x,y),(dp, L(100000));
poly f = (y^15 + 2*x^38)*(y^19 + 7*x^52) + y^36;
list l1 = integralBasis(f, 2);
list l2 = integralBasis(f, 2, "noOpti");
int t = timer;
list l1 = integralBasis(f, 2);
timer - t;
t = timer;
list l2 = integralBasis(f, 2, "noOpti");
timer - t;
int t = timer;
list l1 = integralBasis(f, 2);
timer - t;
t = timer;
list l2 = integralBasis(f, 2, "noOpti");
timer - t;
LIB"integralbasis.lib";
ring r = 0,(x,y),(dp, L(100000));
poly f = (y^15 + 2*x^38)*(y^19 + 7*x^52) + y^100;
int t = timer;
list l1 = integralBasis(f, 2);
timer - t;
t = timer;
list l2 = integralBasis(f, 2, "noOpti");
timer - t;
reduce(l1[1], groebner(l2[1]));
reduce(l2[1], groebner(l1[1]));
LIB"integralbasis.lib";
ring r = 0,(x,y),dp;
poly f = (y^5 + y^4*x^7 + 2*x^8) * (y^3 + 7*x^4) * (y^7 + 2*x^12) * (y^11 + 2*x^18) + y^30;
int t = timer;
list l1 = integralBasis(f, 2, "atOrigin");
timer - t;
t = timer;
list l2 = integralBasis(f, 2, "atOrigin", "noOpti");
timer - t;
list l1 = integralBasis(f, 2, "atOrigin");
l1
;
LIB"integralbasis.lib";
ring r = 0,(x,y),dp;
poly f = (y^5 + y^4*x^7 + 2*x^8) * (y^3 + 7*x^4) * (y^7 + 2*x^12) * (y^11 + 2*x^18) + y^30;
int t = timer;
list l1 = integralBasis(f, 2, "atOrigin");
LIB"integralbasis.lib";
ring r = 0,(x,y),(dp, L(100000));
poly f = (y^15 + 2*x^38)*(y^19 + 7*x^52) + y^36;
int t = timer;
list l1 = integralBasis(f, 2);
ibSeg[1]
segmentSlope
out
LIB"integralbasis.lib";
ring r = 0,(x,y),(dp, L(100000));
poly f = (y^15 + 2*x^38)*(y^19 + 7*x^52)*(y^7+3*x^2) + y^100;
int t = timer;
list l1 = integralBasis(f, 2);
LIB"integralbasis.lib";
ring r = 0,(x,y),(dp, L(100000));
poly f = (y^15 + 2*x^38)*(y^19 + 7*x^52)*(y^7+3*x^2) + y^100;
int t = timer;
list l1 = integralBasis(f, 2, "atOrigin");
timer - t;
LIB"integralbasis.lib";
ring r = 0,(x,y),(dp, L(100000));
poly f = (y^15 + 2*x^38)*(y^19 + 7*x^52)*(y^7+3*x^2) + y^100;
int t = timer;
list l1 = integralBasis(f, 2, "atOrigin");
timer - t;
LIB"integralbasis.lib";
ring r = 0,(x,y),(dp, L(100000));
poly f = (y^15 + 2*x^38)*(y^19 + 7*x^52)*(y^7+3*x^2) + y^100;
int t = timer;
list l1 = integralBasis(f, 2, "atOrigin");
timer - t;
l1;
t = timer;
list l2 = integralBasis(f, 2, "noOpti");
timer - t;
LIB"integralbasis.lib";
ring r = 0,(x,y),(dp, L(100000));
poly f = (y^15 + 2*x^38)*(y^19 + 7*x^52)*(y^7+3*x^2) + y^100;
int t = timer;
list l1 = integralBasis(f, 2, "atOrigin");
timer - t;
t = timer;
list l2 = integralBasis(f, 2, "atOrigin", "noOpti");
timer - t;
LIB"integralbasis.lib";
ring r = 0,(x,y),(dp, L(100000));
poly f = (y^5 + 2*x^8)*(y^9 + 7*x^2)*(y^7+3*x^2) + y^25;
int t = timer;
list l1 = integralBasis(f, 2, "atOrigin");
timer - t;
t = timer;
list l2 = integralBasis(f, 2, "atOrigin", "noOpti");
timer - t;
reduce(l1[1], groebner(l2[1]));
reduce(l2[1], groebner(l1[1]));
with(algcurves);
f := (y^5 + 2*x^8)*(y^9 + 7*x^2)*(y^7+3*x^2) + y^25;
intBasis := integral_basis(f, x, y, {x});
LIB"integralbasis.lib";
ring r = 0,(x,y),(dp, L(100000));
poly f = (y^5 + 2*x^8)*(y^9 + 7*x^2)*(y^7+3*x^2) + y^25;
int t = timer;
list l1 = integralBasis(f, 2, "atOrigin");
l1;
LIB"integralbasis.lib";
ring r = 0,(x,y),(dp, L(100000));
poly f = (y^5 + 2*x^8)*(y^9 + 7*x^2)*(y^7+3*x^2) + y^25;
int t = timer;
list l1 = integralBasis(f, 2, "atOrigin");
timer - t;
t = timer;
list l2 = integralBasis(f, 2, "atOrigin", "noOpti");
timer - t;
[200~reduce(l1[1], groebner(l2[1]));
reduce(l2[1], groebner(l1[1]));
LIB"integralbasis.lib";
ring r = 0,(x,y),(dp, L(100000));
poly f = (y^5 + 2*x^8)*(y^9 + 7*x^2)*(y^7+3*x^2) + y^25;
int t = timer;
list l1 = integralBasis(f, 2, "atOrigin");
timer - t;
t = timer;
list l2 = integralBasis(f, 2, "atOrigin", "noOpti");
timer - t;
reduce(l1[1], groebner(l2[1]));
reduce(l2[1], groebner(l1[1]));
LIB"integralbasis.lib";
ring r = 0,(x,y),(dp, L(100000));
poly f = (y^5 + 2*x^8)*(y^9 + 7*x^2)*(y^7+3*x^2) + y^25;
int t = timer;
list l1 = integralBasis(f, 2, "atOrigin");
timer - t;
t = timer;
list l2 = integralBasis(f, 2, "atOrigin", "noOpti");
timer - t;
reduce(l1[1], groebner(l2[1]));
reduce(l2[1], groebner(l1[1]));
LIB"integralbasis.lib";
ring r = 0,(x,y),(dp, L(100000));
poly f = (y^5 + 2*x^8)*(y^9 + 7*x^2)*(y^7+3*x^2) + y^25;
int t = timer;
list l1 = integralBasis(f, 2, "atOrigin");
timer - t;
t = timer;
list l2 = integralBasis(f, 2, "atOrigin", "noOpti");
timer - t;
reduce(l1[1], groebner(l2[1]));
reduce(l2[1], groebner(l1[1]));
LIB"integralbasis.lib";
ring r = 0,(x,y),(dp, L(100000));
poly f = (y^5 + 2*x^8)*(y^9 + 7*x^2)*(y^7+3*x^2) + y^25;
int t = timer;
list l1 = integralBasis(f, 2, "atOrigin");
l1;
timer - t;
t = timer;
list l2 = integralBasis(f, 2, "atOrigin", "noOpti");
timer - t;
reduce(l1[1], groebner(l2[1]));
reduce(l2[1], groebner(l1[1]));
LIB"integralbasis.lib";
ring r = 0,(x,y),(dp, L(100000));
poly f = (y^5 + 2*x^8)*(y^9 + 7*x^2)*(y^7+3*x^2)*(y^11+7*x6*y6+x^12) + y^34;
int t = timer;
list l1 = integralBasis(f, 2, "atOrigin");
timer - t;
t = timer;
list l2 = integralBasis(f, 2, "atOrigin", "noOpti");
timer - t;
reduce(l1[1], groebner(l2[1]));
reduce(l2[1], groebner(l1[1]));
LIB"integralbasis.lib";
ring r = 0,(x,y),(dp, L(100000));
poly f = (y^15 + 2*x^8)*(y^9 + 7*x^2)*(y^7+3*x^2)*(y^11+7*x6*y6+x^12) + y^44;
int t = timer;
list l1 = integralBasis(f, 2, "atOrigin");
timer - t;
t = timer;
list l2 = integralBasis(f, 2, "atOrigin", "noOpti");
timer - t;
reduce(l1[1], groebner(l2[1]));
reduce(l2[1], groebner(l1[1]));
LIB"integralbasis.lib";
ring r = 0,(x,y),(dp, L(100000));
poly f = (y^15 + 2*x^7)*(y^15 + 2*x^8)*(y^9 + 7*x^2)*(y^7+3*x^2)*(y^11+7*x6*y6+x^12) + y^60;
int t = timer;
list l1 = integralBasis(f, 2, "atOrigin");
timer - t;
t = timer;
list l2 = integralBasis(f, 2, "atOrigin", "noOpti");
timer - t;
LIB"integralbasis.lib";
ring r = 0,(x,y),(dp, L(100000));
poly f = (y^15 + 2*x^7)*(y^15 + 2*x^8)*(y^9 + 7*x^2)*(y^7+3*x^2)*(y^11+7*x6*y6+x^12) + y^60;
int t = timer;
list l1 = integralBasis(f, 2, "atOrigin");
timer - t;
l1;
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y7 + x4) * (y7 + y5x3 + x4) + y16;
int t = timer;
list l1 = integralBasis(f,2, "atOrigin");
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y7 + x4) * (y7 + y5x3 + x4) + y16;
int t = timer;
list l1 = integralBasis(f,2, "atOrigin");
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y7 + x4) * (y7 + y5x3 + x4) + y16;
int t = timer;
list l1 = integralBasis(f,2, "atOrigin");
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y7 + x4) * (y7 + y5x3 + x4) + y16;
int t = timer;
list l1 = integralBasis(f,2, "atOrigin");
basering
fFrac
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y7 + x4) * (y7 + y5x3 + x4) + y16;
int t = timer;
list l1 = integralBasis(f,2, "atOrigin");
fNew
sD
setring R
fFrac
printlevel = 5;
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y7 + x4) * (y7 + y5x3 + x4) + y16;
int t = timer;
list l1 = integralBasis(f,2, "atOrigin");
printlevel = 5;
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y7 + x4) * (y7 + y5x3 + x4) + y16;
int t = timer;
list l1 = integralBasis(f,2, "atOrigin");
classes
def S = classes[1][1];
setring S
PE
basering
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y7 + x4) * (y7 + y5x3 + x4) + y16;
int t = timer;
list l1 = integralBasis(f,2, "atOrigin");
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y7 + x4) * (y7 + y5x3 + x4) + y16;
int t = timer;
list l1 = integralBasis(f,2, "atOrigin");
classes
def S = classes[1][1];
setring S;
PE
setring R;
f
list l = puiseux(f, -1, 1);
l;
with(algcurves);
f := (y^7 + x^4) * (y^7 + y^5*x^3 + x^4)+y^16;
puiseux(f,x=0,y,0);
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y7 + x4) * (y7 + y5x3 + x4) + y16;
int t = timer;
list l1 = integralBasis(f,2, "atOrigin");
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y7 + x4) * (y7 + y5x3 + x4) + y16;
int t = timer;
list l1 = integralBasis(f,2, "atOrigin");
fFr
den
basering
PE
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y7 + x4) * (y7 + y5x3 + x4) + y16;
int t = timer;
list l1 = integralBasis(f,2, "atOrigin");
setring S
PE
setring R
fFr
dMP
pardeg(minpoly);
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y7 + x4) * (y7 + y5x3 + x4) + y16;
int t = timer;
list l1 = integralBasis(f,2, "atOrigin");
d
setring S;
PE
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y7 + x4) * (y7 + y5x3 + x4) + y16;
int t = timer;
list l1 = integralBasis(f,2, "atOrigin");
fFr
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y7 + x4) * (y7 + y5x3 + x4) + y16;
int t = timer;
list l1 = integralBasis(f,2, "atOrigin");
fF
basering;
den
d
buildPolyGroundXRoot(fFr, den, d);
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y7 + x4) * (y7 + y5x3 + x4) + y16;
int t = timer;
list l1 = integralBasis(f,2, "atOrigin");
buildPolyGroundXRoot(fF, den, d);
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y7 + x4) * (y7 + y5x3 + x4) + y16;
int t = timer;
list l1 = integralBasis(f,2, "atOrigin");
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y7 + x4) * (y7 + y5x3 + x4) + y16;
int t = timer;
list l1 = integralBasis(f,2, "atOrigin");
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y7 + x4) * (y7 + y5x3 + x4) + y16;
int t = timer;
list l1 = integralBasis(f,2, "atOrigin");
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y7 + x4) * (y7 + y5x3 + x4) + y16;
int t = timer;
list l1 = integralBasis(f,2, "atOrigin");
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y7 + x4) * (y7 + y5x3 + x4) + y16;
int t = timer;
list l1 = integralBasis(f,2, "atOrigin");
l1;
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y7 + x4) * (y7 + y5x3 + x4) + y16;
int t = timer;
list l1 = integralBasis(f, 2, "atOrigin");
timer - t;
t = timer;
list l2 = integralBasis(f, 2, "atOrigin", "noOpti");
timer - t;
reduce(l1[1], groebner(l2[1]));
reduce(l2[1], groebner(l1[1]));
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y7 + x4) * (y7 + y5x3 + x4) + y16;
int t = timer;
list l1 = integralBasis(f, 2, "atOrigin");
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y7 + x4) * (y7 + y5x3 + x4) + y16;
int t = timer;
list l1 = integralBasis(f, 2, "atOrigin");
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y7 + x4) * (y7 + y5x3 + x4) + y16;
int t = timer;
list l1 = integralBasis(f, 2, "atOrigin");
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y7 + x4) * (y7 + y5x3 + x4) + y16;
int t = timer;
list l1 = integralBasis(f, 2, "atOrigin");
printlevel = 5;
LIB"integralbasis.lib";
ring r = 0,(x,y),(dp, L(100000));
poly f = (y^15 + 2*x^38)*(y^19 + 7*x^52)*(y^7+3*x^2) + y^100;
int t = timer;
list l1 = integralBasis(f, 2, "atOrigin");
timer - t;
t = timer;
list l2 = integralBasis(f, 2, "atOrigin", "noOpti");
timer - t;
reduce(l1[1], groebner(l2[1]));
reduce(l2[1], groebner(l1[1]));
LIB"integralbasis.lib";
ring r = 0,(x,y),(dp, L(100000));
poly f = (y^15 + 2*x^38)*(y^19 + 7*x^52) + y^100;
int t = timer;
list l1 = integralBasis(f, 2, "atOrigin");
timer - t;
t = timer;
list l2 = integralBasis(f, 2, "atOrigin", "noOpti");
timer - t;
reduce(l1[1], groebner(l2[1]));
reduce(l2[1], groebner(l1[1]));
[200~LIB"integralbasis.lib";
ring r = 0,(x,y),(dp, L(100000));
poly f = (y^15 + 2*x^7)*(y^15 + 2*x^8)*(y^9 + 7*x^2)*(y^7+3*x^2)*(y^11+7*x6*y6+x^12) + y^60;
int t = timer;
list l1 = integralBasis(f, 2, "atOrigin");
LIB"integralbasis.lib";
ring r = 0,(x,y),(dp, L(100000));
poly f = (y^15 + 2*x^7)*(y^15 + 2*x^8)*(y^9 + 7*x^2)*(y^7+3*x^2)*(y^11+7*x6*y6+x^12) + y^60;
int t = timer;
list l1 = integralBasis(f, 2, "atOrigin");
LIB"integralbasis.lib";
ring r = 0,(x,y),(dp, L(100000));
poly f = (y^15 + 2*x^7)*(y^15 + 2*x^8)*(y^9 + 7*x^2)*(y^7+3*x^2)*(y^11+7*x6*y6+x^12) + y^60;
int t = timer;
list l1 = integralBasis(f, 2, "atOrigin");
timer - t;
t = timer;
list l2 = integralBasis(f, 2, "atOrigin", "noOpti");
timer - t;
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y7 + x4) * (y7 + y5x3 + x4) + y30;
int t = timer;
list l1 = integralBasis(f, 2, "atOrigin");
timer - t;
t = timer;
list l2 = integralBasis(f, 2, "atOrigin", "noOpti");
timer - t;
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y7 + x4) * (y7 + y5x3 + x4) + y30;
int t = timer;
list l1 = integralBasis(f, 2, "atOrigin");
timer - t;
t = timer;
list l2 = integralBasis(f, 2, "atOrigin", "noOpti");
timer - t;
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y7 + x4) * (y7 + y5x3 + x4) + y16;
int t = timer;
list l1 = integralBasis(f, 2, "atOrigin");
timer - t;
t = timer;
list l2 = integralBasis(f, 2, "atOrigin", "noOpti");
timer - t;
reduce(l1[1], groebner(l2[1]));
reduce(l2[1], groebner(l1[1]));
LIB"integralbasis.lib";
ring r = 0,(x,y),dp;
int k = 40; int d = 50;
poly f = y^2 + x^(k+1) + y^d;
int t = timer;
list l1 = integralBasis(f, 2, "atOrigin");
timer - t;
t = timer;
list l2 = integralBasis(f, 2, "atOrigin", "noOpti");
timer - t;
reduce(l1[1], groebner(l2[1]));
reduce(l2[1], groebner(l1[1]));
LIB"integralbasis.lib";
ring r = 0,(x,y),dp;
int k = 400; int d = 500;
poly f = y^2 + x^(k+1) + y^d;
int t = timer;
list l1 = integralBasis(f, 2, "atOrigin");
timer - t;
t = timer;
list l2 = integralBasis(f, 2, "atOrigin", "noOpti");
timer - t;
reduce(l1[1], groebner(l2[1]));
reduce(l2[1], groebner(l1[1]));
LIB"integralbasis.lib";
ring r = 0,(x,y),dp;
int k = 40; int d = 50;
poly f = x*(x^(k-1) + y^2) + y^d;
list l1 = integralBasis(f, 2, "atOrigin");
timer - t;
t = timer;
list l2 = integralBasis(f, 2, "atOrigin", "noOpti");
timer - t;
reduce(l1[1], groebner(l2[1]));
reduce(l2[1], groebner(l1[1]));
int t = timer;
list l1 = integralBasis(f, 2, "atOrigin");
timer - t;
t = timer;
list l2 = integralBasis(f, 2, "atOrigin", "noOpti");
timer - t;
reduce(l1[1], groebner(l2[1]));
reduce(l2[1], groebner(l1[1]));
LIB"integralbasis.lib";
ring r = 0,(x,y),dp;
int k = 400; int d = 500;
poly f = x*(x^(k-1) + y^2) + y^d;
int t = timer;
list l1 = integralBasis(f, 2, "atOrigin");
timer - t;
t = timer;
list l2 = integralBasis(f, 2, "atOrigin", "noOpti");
timer - t;
LIB"integralbasis.lib";
ring r = 0,(x,y),dp;
int k = 400; int d = 500;
poly f = x*(x^(k-1) + y^2) + y^d;
int t = timer;
list l1 = integralBasis(f, 2, "atOrigin");
timer - t;
t = timer;
list l2 = integralBasis(f, 2, "atOrigin", "noOpti");
timer - t;
LIB"integralbasis.lib";
ring r = 0,(x,y),dp;
int k = 400; int d = 500;
poly f = x*(x^(k-1) + y^2) + y^d;
int t = timer;
list l1 = integralBasis(f, 2, "atOrigin");
timer - t;
t = timer;
list l2 = integralBasis(f, 2, "atOrigin", "noOpti");
timer - t;

LIB"integralbasis.lib";
ring r = 0,(x,y),dp;
int k = 400; int d = 500;
poly f = x*(x^(k-1) + y^2) + y^d;
int t = timer;
list l1 = integralBasis(f, 2, "atOrigin");
timer - t;
t = timer;
list l2 = integralBasis(f, 2, "atOrigin", "noOpti");
timer - t;
LIB"integralbasis.lib";
ring r = 0,(x,y),dp;
int k = 400; int d = 500;
poly f = x*(x^(k-1) + y^2) + y^d;
int t = timer;
list l1 = integralBasis(f, 2, "atOrigin");
timer - t;
t = timer;
list l2 = integralBasis(f, 2, "atOrigin", "noOpti");
timer - t;
LIB"integralbasis.lib";
ring r = 0,(x,y),dp;
int k = 400; int d = 500;
poly f = x*(x^(k-1) + y^2) + y^d;
int t = timer;
list l1 = integralBasis(f, 2, "atOrigin");
timer - t;
t = timer;
list l2 = integralBasis(f, 2, "atOrigin", "noOpti");
timer - t;
min(10,20);
LIB"integralbasis.lib";
ring r = 0,(x,y),dp;
int k = 400; int d = 500;
poly f = x*(x^(k-1) + y^2) + y^d;
int t = timer;
list l1 = integralBasis(f, 2, "atOrigin");
timer - t;
t = timer;
list l2 = integralBasis(f, 2, "atOrigin", "noOpti");
timer - t;
LIB"integralbasis.lib";
ring r = 0,(x,y),dp;
int k = 400; int d = 500;
poly f = x*(x^(k-1) + y^2) + y^d;
int t = timer;
list l1 = integralBasis(f, 2, "atOrigin");
timer - t;
t = timer;
list l2 = integralBasis(f, 2, "atOrigin", "noOpti");
timer - t;
LIB"integralbasis.lib";
ring r = 0,(x,y),dp;
int k = 400; int d = 500;
poly f = x*(x^(k-1) + y^2) + y^d;
int t = timer;
list l1 = integralBasis(f, 2, "atOrigin");
timer - t;
t = timer;
list l2 = integralBasis(f, 2, "atOrigin", "noOpti");
timer - t;
reduce(l1[1], groebner(l2[1]));
reduce(l2[1], groebner(l1[1]));
LIB"integralbasis.lib";
ring r = 0,(x,y),dp;
int k = 400; int d = 500;
poly f = y^2 + x^(k+1) + y^d;
int t = timer;
list l1 = integralBasis(f, 2, "atOrigin");
timer - t;
t = timer;
list l2 = integralBasis(f, 2, "atOrigin", "noOpti");
timer - t;
reduce(l1[1], groebner(l2[1]));
reduce(l2[1], groebner(l1[1]));
LIB"integralbasis.lib";
ring r = 0,(x,y),dp;
int k = 400; int d = 500;
poly f = x*(x^(k-1) + y^2) + y^d;
int t = timer;
list l1 = integralBasis(f, 2, "atOrigin");
timer - t;
t = timer;
list l2 = integralBasis(f, 2, "atOrigin", "noOpti");
timer - t;
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
int k = 5;
int d = 10;
poly f = polyDK(d, k, 1231);
int t = timer;
list l1 = integralBasis(f, 2, "atOrigin");
timer - t;
t = timer;
list l2 = integralBasis(f, 2, "atOrigin", "noOpti");
timer - t;
reduce(l1[1], groebner(l2[1]));
reduce(l2[1], groebner(l1[1]));
l1;
l2;
f;
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
int k = 5;
int d = 10;
poly f = polyDK(d, k, 1231);
int t = timer;
list l1 = integralBasis(f, 2, "atOrigin");
l1;
f;
deg(f);
subst(f,x,0);
puiseux(f,-1,1);
def S = puiseux(f,-1,1);
setring S;
def S = puiseux(f,-1,1)[1];
setring S;
PE;
basering;
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
int k = 5;
int d = 10;
poly f = polyDK(d, k, 1231);
int t = timer;
list l1 = integralBasis(f, 2, "atOrigin");
l1;
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
int k = 5;
int d = 10;
poly f = polyDK(d, k, 1231);
int t = timer;
list l1 = integralBasis(f, 2, "atOrigin");
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
int k = 5;
int d = 10;
poly f = polyDK(d, k, 1231);
int t = timer;
list l1 = integralBasis(f, 2, "atOrigin");
l1;
ring r = 0,(x,y),dp;
int k = 400; int d = 500;
poly f = x*(x^(k-1) + y^2) + y^d;
int t = timer;
list l1 = integralBasis(f, 2, "atOrigin");
timer - t;
t = timer;
list l2 = integralBasis(f, 2, "atOrigin", "noOpti");
LIB"integralbasis.lib";
ring r = 0,(x,y),dp;
int k = 400; int d = 500;
poly f = x*(x^(k-1) + y^2) + y^d;
int t = timer;
list l1 = integralBasis(f, 2, "atOrigin");
l1;
timer - t;
t = timer;
list l2 = integralBasis(f, 2, "atOrigin", "noOpti");
timer - t;
l2;
LIB"integralbasis.lib";
ring r = 0,(x,y),dp;
int k = 400; int d = 500;
poly f = x*(x^(k-1) + y^2) + y^d;
int t = timer;
list l1 = integralBasis(f, 2, "atOrigin");
l1;
LIB"integralbasis.lib";
ring r = 0,(x,y),dp;
int k = 400; int d = 500;
poly f = x*(x^(k-1) + y^2) + y^d;
int t = timer;
list l1 = integralBasis(f, 2, "atOrigin");
timer - t;
t = timer;
list l2 = integralBasis(f, 2, "atOrigin", "noOpti");
timer - t;
LIB"integralbasis.lib";
ring r = 0,(x,y),dp;
int k = 400; int d = 500;
poly f = x*(x^(k-1) + y^2) + y^d;
int t = timer;
list l1 = integralBasis(f, 2, "atOrigin");
timer - t;
t = timer;
list l2 = integralBasis(f, 2, "atOrigin", "noOpti");
timer - t;
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
int k = 5;
int d = 10;
poly f = polyDK(d, k, 1231);
int t = timer;
list l1 = integralBasis(f, 2, "atOrigin");
timer - t;
t = timer;
list l2 = integralBasis(f, 2, "atOrigin", "noOpti");
timer - t;
reduce(l1[1], groebner(l2[1]));
reduce(l2[1], groebner(l1[1]));
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
int k = 5;
int d = 10;
poly f = polyDK(d, k, 1231);
int t = timer;
list l1 = integralBasis(f, 2, "atOrigin");
intExp;
ib
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
int k = 5;
int d = 10;
poly f = polyDK(d, k, 1231);
int t = timer;
list l1 = integralBasis(f, 2, "atOrigin");
timer - t;
t = timer;
list l2 = integralBasis(f, 2, "atOrigin", "noOpti");
timer - t;
reduce(l1[1], groebner(l2[1]));
reduce(l2[1], groebner(l1[1]));
LIB"integralbasis.lib";
ring r = 0,(x,y),dp;
int k = 400; int d = 500;
poly f = x*(x^(k-1) + y^2) + y^d;
int t = timer;
list l1 = integralBasis(f, 2, "atOrigin");
timer - t;
t = timer;
list l2 = integralBasis(f, 2, "atOrigin", "noOpti");
timer - t;
reduce(l1[1], groebner(l2[1]));
reduce(l2[1], groebner(l1[1]));
LIB"integralbasis.lib";
ring r = 0,(x,y),dp;
int k = 400; int d = 500;
poly f = y^2 + x^(k+1) + y^d;
int t = timer;
list l1 = integralBasis(f, 2, "atOrigin");
timer - t;
t = timer;
list l2 = integralBasis(f, 2, "atOrigin", "noOpti");
timer - t;
reduce(l1[1], groebner(l2[1]));
reduce(l2[1], groebner(l1[1]));
printlevel = 5;
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y7 + x4) * (y7 + y5x3 + x4) + y16;
int t = timer;
list l1 = integralBasis(f, 2, "atOrigin");
timer - t;
t = timer;
list l2 = integralBasis(f, 2, "atOrigin", "noOpti");
timer - t;
reduce(l1[1], groebner(l2[1]));
reduce(l2[1], groebner(l1[1]));
printlevel = 5;
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y7 + x4) * (y7 + y5x3 + x4) + y30;
int t = timer;
list l1 = integralBasis(f, 2, "atOrigin");
timer - t;
t = timer;
list l2 = integralBasis(f, 2, "atOrigin", "noOpti");
timer - t;
reduce(l1[1], groebner(l2[1]));
reduce(l2[1], groebner(l1[1]));
LIB"integralbasis.lib";
ring r = 0,(x,y),dp;
int k = 6;
poly z = 2*x - y + 1;
poly f = (x^(k+1) + y^(k+1) + z^(k+1))^2 - 4*(x^(k+1)*y^(k+1) + y^(k+1)*z^(k+1) + z^(k+1)*x^(k+1));
f = monic(f);
int t = timer;
list l1 = integralBasis(f, 2, "atOrigin");
timer - t;
t = timer;
list l2 = integralBasis(f, 2, "atOrigin", "noOpti");
timer - t;
reduce(l1[1], groebner(l2[1]));
reduce(l2[1], groebner(l1[1]));
reduce(l1[1], groebner(l2[1]));
reduce(l2[1], groebner(l1[1]));
printlevel = 4;
LIB"integralbasis.lib";
ring r = 0,(x,y),dp;
int k = 11;
poly z = x - 2*y + 1;
poly f = x^(2*k) + y^(2*k) + z^(2*k) + 2 * (x^k * z^k - x^k * y^k + y^k * z^k);
f = monic(f);
list l = integralBasis(f, 2, "nonModular");
LIB"integralbasis.lib";
ring r = 0,(x,y),dp;
poly f = x^15-21*x^14+8*x^13*y-6*x^13-16*x^12*y+20*x^11*y^2-x^12+8*x^11*y-36*x^10*y^2+24*x^9*y^3+4*x^9*y^2-16*x^8*y^3+26*x^7*y^4-6*x^6*y^4+8*x^5*y^5+4*x^3*y^6-y^8;
f = f *(-1);
list l = integralBasis(f, 2, "nonModular");
LIB"integralbasis.lib";
ring r = 0,(x,y),dp;
poly f = (y^4 + 2*x^3*y^2 + x^6 + x^5*y)^3 + x^11*y^11;
list l = integralBasis(f, 2, "nonModular");
LIB"integralbasis.lib";
ring r = 0,(x,y),dp;
poly f = (y^4 + 2*x^3*y^2 + x^6 + x^5*y)^3 + x^11*y^11;
list l = integralBasis(f, 2, "nonModular");
int t = timer;
list l1 = integralBasis(f, 2, "atOrigin");
timer - t;
t = timer;
list l2 = integralBasis(f, 2, "atOrigin", "noOpti");
timer - t;
reduce(l1[1], groebner(l2[1]));
reduce(l2[1], groebner(l1[1]));
LIB"integralbasis.lib";
ring r = 0,(x,y),dp;
poly f = (y^5 + y^4*x^7 + 2*x^8) * (y^3 + 7*x^4) * (y^7 + 2*x^12) * (y^11 + 2*x^18) + y^30;
int t = timer;
list l1 = integralBasis(f, 2, "atOrigin");
timer - t;
t = timer;
list l2 = integralBasis(f, 2, "atOrigin", "noOpti");
timer - t;
LIB"integralbasis.lib";
ring r = 0,(x,y),(dp, L(100000));
poly f = (y^15 + 2*x^38)*(y^19 + 7*x^52) + y^36;
int t = timer;
list l1 = integralBasis(f, 2);
timer - t;
t = timer;
list l2 = integralBasis(f, 2, "noOpti");
timer - t;
LIB"integralbasis.lib";
ring r = 0,(x,y),dp;
poly f = (y^35 + y^34*x^7 + 2*x^38) * (y^33 + 7*x^44) * (y^37 + 2*x^52) + y^110;
list l = integralBasis(f, 2, "atOrigin");
int t = timer;
list l1 = integralBasis(f, 2);
timer - t;
t = timer;
list l2 = integralBasis(f, 2, "noOpti");
timer - t;
LIB"integralbasis.lib";
ring r = 0,(x,y),dp;
poly f = (y^35 + y^34*x^7 + 2*x^38) * (y^33 + 7*x^44) * (y^37 + 2*x^52) + y^110;
list l = integralBasis(f, 2, "atOrigin");
int t = timer;
list l1 = integralBasis(f, 2);
timer - t;
t = timer;
list l2 = integralBasis(f, 2, "noOpti");
timer - t;
LIB"integralbasis.lib";
ring r = 0,(x,y),dp;
poly f = (y^35 + y^34*x^7 + 2*x^38) * (y^33 + 7*x^44) * (y^37 + 2*x^52) + y^110;
list l = integralBasis(f, 2, "atOrigin");
LIB"integralbasis.lib";
ring r = 0,(x,y),dp;
int k = 11;
poly z = x - 2*y + 1;
poly f = x^(2*k) + y^(2*k) + z^(2*k) + 2 * (x^k * z^k - x^k * y^k + y^k * z^k);
f = monic(f);
list l = integralBasis(f, 2, "nonModular");
LIB"integralbasis.lib";
ring r = 0,(x,y),dp;
int k = 11;
poly z = x - 2*y + 1;
poly f = x^(2*k) + y^(2*k) + z^(2*k) + 2 * (x^k * z^k - x^k * y^k + y^k * z^k);
f = monic(f);
list l = integralBasis(f, 2, "nonModular");
LIB"integralbasis.lib";
ring r = 0,(x,y),dp;
int k = 11;
poly z = x - 2*y + 1;
poly f = x^(2*k) + y^(2*k) + z^(2*k) + 2 * (x^k * z^k - x^k * y^k + y^k * z^k);
f = monic(f);
list l = integralBasis(f, 2, "nonModular");
list l = integralBasis(f, 2, "nonModular");
LIB"integralbasis.lib";
ring r = 0,(x,y),dp;
int k = 7;
poly z = x - 2*y + 1;
poly f = x^(2*k) + y^(2*k) + z^(2*k) + 2 * (x^k * z^k - x^k * y^k + y^k * z^k);
f = monic(f);
list l = integralBasis(f, 2, "nonModular");
int t = timer;
list l1 = integralBasis(f, 2, "atOrigin");
timer - t;
t = timer;
list l2 = integralBasis(f, 2, "atOrigin", "noOpti");
timer - t;
reduce(l1[1], groebner(l2[1]));
reduce(l2[1], groebner(l1[1]));
printlevel = 4;
LIB"integralbasis.lib";
ring r = 0,(x,y),dp;
int k = 7;
poly z = x - 2*y + 1;
poly f = x^(2*k) + y^(2*k) + z^(2*k) + 2 * (x^k * z^k - x^k * y^k + y^k * z^k);
f = monic(f);
int t = timer;
list l1 = integralBasis(f, 2, "atOrigin");
timer - t;
t = timer;
list l2 = integralBasis(f, 2, "atOrigin", "noOpti");
timer - t;
reduce(l1[1], groebner(l2[1]));
reduce(l2[1], groebner(l1[1]));
LIB"integralbasis.lib";
ring r = 0,(x,y),dp;
int k = 7;
poly z = x - 2*y + 1;
poly f = x^(2*k) + y^(2*k) + z^(2*k) + 2 * (x^k * z^k - x^k * y^k + y^k * z^k);
f = monic(f);
int t = timer;
list l1 = integralBasis(f, 2);
timer - t;
t = timer;
list l2 = integralBasis(f, 2, "noOpti");
timer - t;
reduce(l1[1], groebner(l2[1]));
reduce(l2[1], groebner(l1[1]));
LIB"integralbasis.lib";
ring r = 0,(x,y),dp;
int k = 7;
poly z = x - 2*y + 1;
poly f = x^(2*k) + y^(2*k) + z^(2*k) + 2 * (x^k * z^k - x^k * y^k + y^k * z^k);
f = monic(f);
int t = timer;
list l1 = integralBasis(f, 2);
timer - t;
t = timer;
list l2 = integralBasis(f, 2, "noOpti");
timer - t;
l1;
l2;
l1;
l2;
reduce(l1[1], groebner(l2[1]));
LIB"integralbasis.lib";
ring r = 0,(x,y),dp;
int k = 7;
poly z = x - 2*y + 1;
poly f = x^(2*k) + y^(2*k) + z^(2*k) + 2 * (x^k * z^k - x^k * y^k + y^k * z^k);
f = monic(f);
int t = timer;
list l1 = integralBasis(f, 2);
timer - t;
t = timer;
list l2 = integralBasis(f, 2, "noOpti");
timer - t;
reduce(l2[1], groebner(l1[1]));
LIB"integralbasis.lib";
ring r = 0,(x,y),dp;
int k = 4;
poly z = 2*x - y + 1;
poly f = (x^(k+1) + y^(k+1) + z^(k+1))^2 - 4*(x^(k+1)*y^(k+1) + y^(k+1)*z^(k+1) + z^(k+1)*x^(k+1));
f = monic(f);
int t = timer;
list l1 = integralBasis(f, 2, "atOrigin");
timer - t;
t = timer;
list l2 = integralBasis(f, 2, "atOrigin", "noOpti");
timer - t;
reduce(l1[1], groebner(l2[1]));
reduce(l2[1], groebner(l1[1]));
LIB"integralbasis.lib";
ring r = 0,(x,y),dp;
int k = 4;
poly z = 2*x - y + 1;
poly f = (x^(k+1) + y^(k+1) + z^(k+1))^2 - 4*(x^(k+1)*y^(k+1) + y^(k+1)*z^(k+1) + z^(k+1)*x^(k+1));
f = monic(f);
int t = timer;
list l1 = integralBasis(f, 2, "atOrigin");
LIB"integralbasis.lib";
ring r = 0,(x,y),dp;
int k = 4;
poly z = 2*x - y + 1;
poly f = (x^(k+1) + y^(k+1) + z^(k+1))^2 - 4*(x^(k+1)*y^(k+1) + y^(k+1)*z^(k+1) + z^(k+1)*x^(k+1));
f = monic(f);
int t = timer;
list l1 = integralBasis(f, 2);
LIB"integralbasis.lib";
ring r = 0,(x,y),dp;
int k = 4;
poly z = 2*x - y + 1;
poly f = (x^(k+1) + y^(k+1) + z^(k+1))^2 - 4*(x^(k+1)*y^(k+1) + y^(k+1)*z^(k+1) + z^(k+1)*x^(k+1));
f = monic(f);
int t = timer;
list l1 = integralBasis(f, 2);
timer - t;
t = timer;
list l2 = integralBasis(f, 2, "noOpti");
timer - t;
reduce(l1[1], groebner(l2[1]));
reduce(l2[1], groebner(l1[1]));
l1;
l2;
l1;
l2;
LIB"integralbasis.lib";
ring r = 0,(x,y),dp;
int k = 4;
poly z = 2*x - y + 1;
poly f = (x^(k+1) + y^(k+1) + z^(k+1))^2 - 4*(x^(k+1)*y^(k+1) + y^(k+1)*z^(k+1) + z^(k+1)*x^(k+1));
f = monic(f);
int t = timer;
list l1 = integralBasis(f, 2);
basering
basering
LIB"integralbasis.lib";
ring r = 0,(x,y),dp;
int k = 4;
poly z = 2*x - y + 1;
poly f = (x^(k+1) + y^(k+1) + z^(k+1))^2 - 4*(x^(k+1)*y^(k+1) + y^(k+1)*z^(k+1) + z^(k+1)*x^(k+1));
f = monic(f);
int t = timer;
list l1 = integralBasis(f, 2);
minpoly
pardeg(minpoly)
pardeg(minpoly)
basering
LIB"integralbasis.lib";
ring r = 0,(x,y),dp;
int k = 4;
poly z = 2*x - y + 1;
poly f = (x^(k+1) + y^(k+1) + z^(k+1))^2 - 4*(x^(k+1)*y^(k+1) + y^(k+1)*z^(k+1) + z^(k+1)*x^(k+1));
f = monic(f);
int t = timer;
list l1 = integralBasis(f, 2);
timer - t;
t = timer;
list l2 = integralBasis(f, 2, "noOpti");
timer - t;
reduce(l1[1], groebner(l2[1]));
reduce(l2[1], groebner(l1[1]));
LIB"integralbasis.lib";
ring r = 0,(x,y),dp;
int k = 4;
poly z = 2*x - y + 1;
poly f = (x^(k+1) + y^(k+1) + z^(k+1))^2 - 4*(x^(k+1)*y^(k+1) + y^(k+1)*z^(k+1) + z^(k+1)*x^(k+1));
f = monic(f);
int t = timer;
list l1 = integralBasis(f, 2);
timer - t;
t = timer;
list l2 = integralBasis(f, 2, "noOpti");
timer - t;
reduce(l1[1], groebner(l2[1]));
reduce(l2[1], groebner(l1[1]));
LIB"integralbasis.lib";
ring r = 0,(x,y),dp;
int k = 4;
poly z = 2*x - y + 1;
poly f = (x^(k+1) + y^(k+1) + z^(k+1))^2 - 4*(x^(k+1)*y^(k+1) + y^(k+1)*z^(k+1) + z^(k+1)*x^(k+1));
f = monic(f);
int t = timer;
list l1 = integralBasis(f, 2);
timer - t;
t = timer;
list l2 = integralBasis(f, 2, "noOpti");
timer - t;
reduce(l1[1], groebner(l2[1]));
reduce(l2[1], groebner(l1[1]));
LIB"integralbasis.lib";
ring r = 0,(x,y),dp;
int k = 6;
poly z = 2*x - y + 1;
poly f = (x^(k+1) + y^(k+1) + z^(k+1))^2 - 4*(x^(k+1)*y^(k+1) + y^(k+1)*z^(k+1) + z^(k+1)*x^(k+1));
f = monic(f);
int t = timer;
list l1 = integralBasis(f, 2);
timer - t;
t = timer;
list l2 = integralBasis(f, 2, "noOpti");
timer - t;
reduce(l1[1], groebner(l2[1]));
reduce(l2[1], groebner(l1[1]));
LIB"integralbasis.lib";
ring r = 0,(x,y),dp;
int k = 6;
poly z = 2*x - y + 1;
poly f = (x^(k+1) + y^(k+1) + z^(k+1))^2 - 4*(x^(k+1)*y^(k+1) + y^(k+1)*z^(k+1) + z^(k+1)*x^(k+1));
f = monic(f);
int t = timer;
list l1 = integralBasis(f, 2);
timer - t;
t = timer;
list l2 = integralBasis(f, 2, "noOpti");
timer - t;
reduce(l1[1], groebner(l2[1]));
reduce(l2[1], groebner(l1[1]));
reduce(l1[1], groebner(l2[1]));
reduce(l2[1], groebner(l1[1]));
LIB"integralbasis.lib";
ring r = 0,(x,y),dp;
int k = 6;
poly z = 2*x - y + 1;
poly f = (x^(k+1) + y^(k+1) + z^(k+1))^2 - 4*(x^(k+1)*y^(k+1) + y^(k+1)*z^(k+1) + z^(k+1)*x^(k+1));
f = monic(f);
int t = timer;
list l1 = integralBasis(f, 2);
timer - t;
t = timer;
list l2 = integralBasis(f, 2, "noOpti");
timer - t;
basering
PE
minPolys
composePolys(minPolys)
poly mpX = subst(mp, var(2), var(1));
LIB"integralbasis.lib";
ring r = 0,(x,y),dp;
int k = 6;
poly z = 2*x - y + 1;
poly f = (x^(k+1) + y^(k+1) + z^(k+1))^2 - 4*(x^(k+1)*y^(k+1) + y^(k+1)*z^(k+1) + z^(k+1)*x^(k+1));
f = monic(f);
int t = timer;
list l1 = integralBasis(f, 2);
timer - t;
t = timer;
list l2 = integralBasis(f, 2, "noOpti");
timer - t;
mp
LIB"integralbasis.lib";
ring r = 0,(x,y),dp;
int k = 6;
poly z = 2*x - y + 1;
poly f = (x^(k+1) + y^(k+1) + z^(k+1))^2 - 4*(x^(k+1)*y^(k+1) + y^(k+1)*z^(k+1) + z^(k+1)*x^(k+1));
f = monic(f);
int t = timer;
list l1 = integralBasis(f, 2);
timer - t;
t = timer;
list l2 = integralBasis(f, 2, "noOpti");
timer - t;
            poly mp = composePolys(minPolys);
            poly mpX = subst(mp, var(2), var(1));
fF
            poly fFB = buildPolyFracNew(fF, mpX);
fFB
PE
d
LIB"integralbasis.lib";
ring r = 0,(x,y),(dp, L(100000));
poly f = (y^15 + 2*x^38)*(y^19 + 7*x^52) + y^100;
int t = timer;
list l1 = integralBasis(f, 2, "atOrigin");
timer - t;
t = timer;
list l2 = integralBasis(f, 2, "atOrigin", "noOpti");
timer - t;
reduce(l1[1], groebner(l2[1]));
reduce(l2[1], groebner(l1[1]));
size(reduce(l1[1], groebner(l2[1])));
size(reduce(l2[1], groebner(l1[1])));
LIB"integralbasis.lib";
ring r = 0,(x,y),(dp, L(100000));
poly f = (y^15 + 2*x^38)*(y^19 + 7*x^52)*(y^7+3*x^2) + y^100;
int t = timer;
list l1 = integralBasis(f, 2, "atOrigin");
timer - t;
t = timer;
list l2 = integralBasis(f, 2, "atOrigin", "noOpti");
timer - t;
size(reduce(l1[1], groebner(l2[1])));
size(reduce(l2[1], groebner(l1[1])));
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y7 + x4) * (y7 + y5x3 + x4) + y30;
int t = timer;
list l1 = integralBasis(f, 2, "atOrigin");
timer - t;
t = timer;
list l2 = integralBasis(f, 2, "atOrigin", "noOpti");
timer - t;
size(reduce(l1[1], groebner(l2[1])));
size(reduce(l2[1], groebner(l1[1])));
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y7 + x4) * (y7 + y5x3 + x4) + y30;
int t = timer;
list l1 = integralBasis(f, 2, "atOrigin");
timer - t;
t = timer;
list l2 = integralBasis(f, 2, "atOrigin", "noOpti");
timer - t;
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y7 + x4) * (y7 + y5x3 + x4) + y30;
int t = timer;
list l1 = integralBasis(f, 2, "atOrigin");
timer - t;
t = timer;
list l2 = integralBasis(f, 2, "atOrigin", "noOpti");
timer - t;
size(reduce(l1[1], groebner(l2[1])));
size(reduce(l2[1], groebner(l1[1])));
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y7 + x4) * (y7 + y5x3 + x4) + y16;
int t = timer;
list l1 = integralBasis(f, 2, "atOrigin");
timer - t;
t = timer;
list l2 = integralBasis(f, 2, "atOrigin", "noOpti");
timer - t;
size(reduce(l1[1], groebner(l2[1])));
size(reduce(l2[1], groebner(l1[1])));
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y7 + x4) * (y7 + y5x3 + x4) + y16;
int t = timer;
list l1 = integralBasis(f, 2, "atOrigin");
timer - t;
t = timer;
list l2 = integralBasis(f, 2, "atOrigin", "noOpti");
timer - t;
size(reduce(l1[1], groebner(l2[1])));
size(reduce(l2[1], groebner(l1[1])));
LIB"integralbasis.lib";
ring r = 0,(x,y),dp;
int k = 400; int d = 500;
poly f = y^2 + x^(k+1) + y^d;
int t = timer;
list l1 = integralBasis(f, 2, "atOrigin");
timer - t;
t = timer;
list l2 = integralBasis(f, 2, "atOrigin", "noOpti");
timer - t;
size(reduce(l1[1], groebner(l2[1])));
size(reduce(l2[1], groebner(l1[1])));
LIB"integralbasis.lib";
ring r = 0,(x,y),dp;
int k = 400; int d = 500;
poly f = x*(x^(k-1) + y^2) + y^d;
int t = timer;
list l1 = integralBasis(f, 2, "atOrigin");
timer - t;
t = timer;
list l2 = integralBasis(f, 2, "atOrigin", "noOpti");
timer - t;
size(reduce(l1[1], groebner(l2[1])));
size(reduce(l2[1], groebner(l1[1])));
LIB"integralbasis.lib";
ring r = 0,(x,y),dp;
int k = 400; int d = 500;
poly f = x*(x^(k-1) + y^2) + y^d;
int t = timer;
list l1 = integralBasis(f, 2, "atOrigin");
timer - t;
t = timer;
list l2 = integralBasis(f, 2, "atOrigin", "noOpti");
timer - t;
size(reduce(l1[1], groebner(l2[1])));
size(reduce(l2[1], groebner(l1[1])));
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
int k = 5;
int d = 10;
poly f = polyDK(d, k, 1231);
int t = timer;
list l1 = integralBasis(f, 2, "atOrigin");
timer - t;
t = timer;
list l2 = integralBasis(f, 2, "atOrigin", "noOpti");
timer - t;
size(reduce(l1[1], groebner(l2[1])));
size(reduce(l2[1], groebner(l1[1])));
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
int k = 20;
int d = 30;
poly f = polyDK(d, k, 1231);
int t = timer;
list l1 = integralBasis(f, 2, "atOrigin");
timer - t;
t = timer;
list l2 = integralBasis(f, 2, "atOrigin", "noOpti");
timer - t;
size(reduce(l1[1], groebner(l2[1])));
size(reduce(l2[1], groebner(l1[1])));
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
int k = 50;
int d = 60;
poly f = polyDK(d, k, 1231);
int t = timer;
list l1 = integralBasis(f, 2, "atOrigin");
timer - t;
t = timer;
list l2 = integralBasis(f, 2, "atOrigin", "noOpti");
timer - t;
size(reduce(l1[1], groebner(l2[1])));
size(reduce(l2[1], groebner(l1[1])));
ring r = 0, (x,y), dp;
int k = 50;
int d = 70;
poly f = polyDK(d, k, 1231);
int t = timer;
list l1 = integralBasis(f, 2, "atOrigin");
timer - t;
t = timer;
list l2 = integralBasis(f, 2, "atOrigin", "noOpti");
timer - t;
size(reduce(l1[1], groebner(l2[1])));
size(reduce(l2[1], groebner(l1[1])));
ring r = 0, (x,y), dp;
int k = 50;
int d = 70;
poly f = polyDK(d, k, 1231);
int t = timer;
list l1 = integralBasis(f, 2, "atOrigin");
timer - t;
t = timer;
list l2 = integralBasis(f, 2, "atOrigin", "noOpti");
timer - t;
size(reduce(l1[1], groebner(l2[1])));
size(reduce(l2[1], groebner(l1[1])));
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
int k = 50;
int d = 70;
poly f = polyDK(d, k, 1231);
int t = timer;
list l1 = integralBasis(f, 2, "atOrigin");
timer - t;
t = timer;
list l2 = integralBasis(f, 2, "atOrigin", "noOpti");
timer - t;
size(reduce(l1[1], groebner(l2[1])));
size(reduce(l2[1], groebner(l1[1])));
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
int k = 50;
int d = 70;
poly f = polyDK(d, k, 1231);
int t = timer;
list l1 = integralBasis(f, 2, "atOrigin");
timer - t;
t = timer;
list l2 = integralBasis(f, 2, "atOrigin", "noOpti");
timer - t;
size(reduce(l1[1], groebner(l2[1])));
size(reduce(l2[1], groebner(l1[1])));
LIB"integralbasis.lib";
ring r = 0,(x,y),dp;
poly f = (y^4 + 2*x^3*y^2 + x^6 + x^5*y)^3 + x^11*y^11;
int t = timer;
list l1 = integralBasis(f, 2, "atOrigin");
timer - t;
t = timer;
list l2 = integralBasis(f, 2, "atOrigin", "noOpti");
timer - t;
reduce(l1[1], groebner(l2[1]));
reduce(l2[1], groebner(l1[1]));
LIB"integralbasis.lib";
ring r = 0,(x,y),dp;
poly f = (y^4 + 2*x^3*y^2 + x^6 + x^5*y)^3 + x^11*y^11;
int t = timer;
list l1 = integralBasis(f, 2, "atOrigin");
timer - t;
t = timer;
list l2 = integralBasis(f, 2, "atOrigin", "noOpti");
timer - t;
reduce(l1[1], groebner(l2[1]));
reduce(l2[1], groebner(l1[1]));
LIB"integralbasis.lib";
ring r = 0,(x,y),dp;
poly f = (y^4 + 2*x^3*y^2 + x^6 + x^5*y)^3 + x^11*y^11;
int t = timer;
list l1 = integralBasis(f, 2, "atOrigin");
timer - t;
t = timer;
list l2 = integralBasis(f, 2, "atOrigin", "noOpti");
timer - t;
size(reduce(l1[1], groebner(l2[1])));
size(reduce(l2[1], groebner(l1[1])));
LIB"integralbasis.lib";
ring r = 0,(x,y),dp;
poly f = (y^4 + 2*x^3*y^2 + x^6 + x^5*y)^3 + x^11*y^11;
int t = timer;
list l1 = integralBasis(f, 2, "atOrigin");
timer - t;
t = timer;
list l2 = integralBasis(f, 2, "atOrigin", "noOpti");
timer - t;
size(reduce(l1[1], groebner(l2[1])));
size(reduce(l2[1], groebner(l1[1])));
LIB"integralbasis.lib";
ring r = 0,(x,y),dp;
poly f = (y^4 + 2*x^3*y^2 + x^6 + x^5*y)^3 + x^11*y^11;
int t = timer;
list l1 = integralBasis(f, 2, "atOrigin");
timer - t;
t = timer;
list l2 = integralBasis(f, 2, "atOrigin", "noOpti");
timer - t;
size(reduce(l1[1], groebner(l2[1])));
size(reduce(l2[1], groebner(l1[1])));
LIB"integralbasis.lib";
ring r = 0,(x,y),dp;
poly f = (y^5 + y^4*x^7 + 2*x^8) * (y^3 + 7*x^4) * (y^7 + 2*x^12) * (y^11 + 2*x^18) + y^30;
int t = timer;
list l1 = integralBasis(f, 2, "atOrigin");
timer - t;
t = timer;
list l2 = integralBasis(f, 2, "atOrigin", "noOpti");
timer - t;
size(reduce(l1[1], groebner(l2[1])));
size(reduce(l2[1], groebner(l1[1])));
LIB"integralbasis.lib";
ring r = 0,(x,y),(dp, L(100000));
poly f = (y^15 + 2*x^38)*(y^19 + 7*x^52) + y^36;
int t = timer;
list l1 = integralBasis(f, 2);
timer - t;
t = timer;
list l2 = integralBasis(f, 2, "noOpti");
timer - t;
LIB"integralbasis.lib";
ring r = 0,(x,y),(dp, L(100000));
poly f = (y^15 + 2*x^38)*(y^19 + 7*x^52) + y^36;
int t = timer;
list l1 = integralBasis(f, 2);
timer - t;
t = timer;
list l2 = integralBasis(f, 2, "noOpti");
timer - t;
size(reduce(l1[1], groebner(l2[1])));
size(reduce(l2[1], groebner(l1[1])));
LIB"integralbasis.lib";
ring r = 0,(x,y),dp;
poly f = (y^35 + y^34*x^7 + 2*x^38) * (y^33 + 7*x^44) * (y^37 + 2*x^52) + y^110;
list l = integralBasis(f, 2, "atOrigin");
int t = timer;
list l1 = integralBasis(f, 2);
timer - t;
t = timer;
list l2 = integralBasis(f, 2, "noOpti");
timer - t;
size(reduce(l1[1], groebner(l2[1])));
size(reduce(l2[1], groebner(l1[1])));
printlevel = 4;
LIB"integralbasis.lib";
ring r = 0,(x,y),dp;
poly f = (y^35 + y^34*x^7 + 2*x^38) * (y^33 + 7*x^44) * (y^37 + 2*x^52) + y^110;
list l = integralBasis(f, 2, "atOrigin");
int t = timer;
list l1 = integralBasis(f, 2);
timer - t;
t = timer;
list l2 = integralBasis(f, 2, "noOpti");
timer - t;
printlevel = 4;
LIB"integralbasis.lib";
ring r = 0,(x,y),dp;
poly f = (y^35 + y^34*x^7 + 2*x^38) * (y^33 + 7*x^44) * (y^37 + 2*x^52) + y^110;
list l = integralBasis(f, 2, "atOrigin");
int t = timer;
list l1 = integralBasis(f, 2);
timer - t;
t = timer;
list l2 = integralBasis(f, 2, "atOrigin", "noOpti");
timer - t;
size(reduce(l1[1], groebner(l2[1])));
size(reduce(l2[1], groebner(l1[1])));
printlevel = 4;
LIB"integralbasis.lib";
ring r = 0,(x,y),dp;
poly f = (y^35 + y^34*x^7 + 2*x^38) * (y^33 + 7*x^44) * (y^37 + 2*x^52) + y^110;
int t = timer;
list l1 = integralBasis(f, 2);
timer - t;
t = timer;
list l2 = integralBasis(f, 2, "atOrigin", "noOpti");
timer - t;
LIB"integralbasis.lib";
ring r = 0,(x,y),dp;
poly f = (y^35 + y^34*x^7 + 2*x^38) * (y^33 + 7*x^44) * (y^37 + 2*x^52) + y^110;
int t = timer;
list l1 = integralBasis(f, 2, "atOrigin");
timer - t;
t = timer;
list l2 = integralBasis(f, 2, "atOrigin", "noOpti");
timer - t;
size(reduce(l1[1], groebner(l2[1])));
size(reduce(l2[1], groebner(l1[1])));
printlevel = 4;
LIB"integralbasis.lib";
ring r = 0,(x,y),dp;
poly f = (y^35 + y^34*x^7 + 2*x^38) * (y^33 + 7*x^44) * (y^37 + 2*x^52) + y^110;
int t = timer;
list l1 = integralBasis(f, 2, "atOrigin");
timer - t;
t = timer;
list l2 = integralBasis(f, 2, "atOrigin", "noOpti");
timer - t;
"Verification...";
size(reduce(l1[1], groebner(l2[1])));
size(reduce(l2[1], groebner(l1[1])));
LIB"integralbasis.lib";
ring r = 0,(x,y),dp;
poly f = (y^35 + y^34*x^7 + 2*x^38) * (y^33 + 7*x^44) * (y^37 + 2*x^52) + y^110;
int t = timer;
list l1 = integralBasis(f, 2, "atOrigin");
timer - t;
t = timer;
list l2 = integralBasis(f, 2, "atOrigin", "noOpti");
timer - t;
"Verification...";
size(reduce(l1[1], groebner(l2[1])));
size(reduce(l2[1], groebner(l1[1])));
ring r = 0, (x,y,z), dp;
ideal I = x5, y5, z5, xz4, xyz3, xy3z, x3yz;
hilb(groebner(I));
I;
hilb(I);
ideal J = x5, y5, z5;
hilb(groebner(J));
ideal I = x3,y3,z3;
hilb(groebner(I));
ring R=32003,(x,y,z),dp;
  ideal i=x2,y2,z2;
  ideal s=std(i);
  hilb(s);
ring R=32003,(x,y,z),dp;
  ideal i=x2,y2,z2;
  ideal s=std(i);
  hilb(s,1);
ring R=32003,(x,y,z),dp;
  ideal i=x2,y2,z2;
  ideal s=std(i);
  hilb(s,2);
hilb(groebner(I));
ring r = 0, (x,y,z), dp;
ideal I = x5, y5, z5, xz4, xyz3, xy3z, x3yz;
hilb(groebner(I));
def H = hilb(groebner(I));
ring r = 0, (x,y,z), dp;
ideal I = x5, y5, z5, xz4, xyz3, xy3z, x3yz;
hilb(groebner(I),2);
ring r = 0, (x,y,z), dp;
ideal I = x5, y5, z5;
hilb(groebner(I),2);
ideal I = x5, y5, z5, xz4, xyz3, xy3z, x3yz;
hilb(groebner(I),2);
ideal I = x5, y5, z5, x*z^4, y^2*z^3, x*y*z^3, x^3*y*z;
hilb(groebner(I),2);
ideal I = x5, y5, z5, x*z^4, x^4*y, y^4*z, x^2*y*z^2;
hilb(groebner(I),2);
ideal I = x5, y5, z5, x^2*y^3, x^3*z^2, x*y*z^3, x^2*y*z^2;
hilb(groebner(I),2);
ideal I = x5, y5, z5, x^2*y^3, x^3*z^2, x^2*y*z^2, x^2*y*z^2;
hilb(groebner(I),2);
ideal I = x5, y5, z5, x^2*y^3, x^3*z^2, x^3*y*z, x^2*y*z^2;
hilb(groebner(I),2);
LIB"integralbasis.lib";
ring r = 0,(x,y),dp;
poly f = x^(30)+x^2*y^2+y^(11);
map phi = R,x+2*y+x^2+x*y+y^2+x^3,3*x+5*y+x^2*y+y^2;
f=phi(f);
int t = timer;
list l1 = integralBasis(f, 2, "atOrigin");
timer - t;
LIB"integralbasis.lib";
ring R = 0,(x,y),dp;
poly f = x^(30)+x^2*y^2+y^(11);
map phi = R,x+2*y+x^2+x*y+y^2+x^3,3*x+5*y+x^2*y+y^2;
f=phi(f);
int t = timer;
list l1 = integralBasis(f, 2, "atOrigin");
timer - t;
poly f = x^(30)+x^2*y^2+y^(11);
int t = timer;
int t = timer;
list l1 = integralBasis(f, 2, "atOrigin");
timer - t;
printlevel = 5;
LIB"integralbasis.lib";
ring R = 0,(x,y),dp;
poly f = x^(30)+x^2*y^2+y^(11);
map phi = R,x+2*y+x^2+x*y+y^2+x^3,3*x+5*y+x^2*y+y^2;
poly g =phi(f);
int t = timer;
list l1 = integralBasis(f, 2, "atOrigin");
timer - t;
int t = timer;
list l1 = integralBasis(g, 2, "atOrigin");
timer - t;
g;
printlevel = 8;
LIB"integralbasis.lib";
ring R = 0,(x,y),dp;
poly f = x^(30)+x^2*y^2+y^(11);
map phi = R,x+2*y+x^2+x*y+y^2+x^3,3*x+5*y+x^2*y+y^2;
poly g =phi(f);
int t = timer;
list l1 = integralBasis(g, 2, "atOrigin");
timer - t;
[200~printlevel = 8;
LIB"integralbasis.lib";
ring R = 0,(x,y),dp;
poly f = x^(30)+x^2*y^2+y^(11);
map phi = R,x+2*y+x^2+x*y+y^2+x^3,3*x+5*y+x^2*y+y^2;
poly g =phi(f);
printlevel = 8;
LIB"integralbasis.lib";
ring R = 0,(x,y),dp;
poly f = x^(30)+x^2*y^2+y^(11);
map phi = R,x+2*y+x^2+x*y+y^2+x^3,3*x+5*y+x^2*y+y^2;
poly g =phi(f);
puisex(f,1,-1);
puiseux(f,1,-1);
puiseux(g,1,-1);
list l = puiseux(g,1,-1);
def S = l[1];
setring S;
PE;
basering
;
ring R = 0,(x,y),dp;
poly f = x^(30)+x^2*y^2+y^(11);
map phi = R,x+2*y+x^2+x*y+y^2+x^3,3*x+5*y+x^2*y+y^2;
poly g =phi(f);
g;
f;
puiseux(g, 1, -1);
LIB"integralbasis.lib";
ring R = 0,(x,y),dp;
poly f = x^(30)+x^2*y^2+y^(11);
map phi = R,x+2*y+x^2+x*y+y^2+x^3,3*x+5*y+x^2*y+y^2;
poly g =phi(f);
puiseux(g, 1, -1);
puiseux(f, 1, -1);
list l1 = puiseux(g, 1, -1);
def S = l1[1];
setring S;
PE;
setring r;
setring R;
l;
l1;
g;
LIB"integralbasis.lib";
ring R = 0,(x,y),dp;
poly h = x31+x30y+x29y2+x28y3+x27y4+x26y5+x25y6+x24y7+x23y8+x22y9+x21y10+x20y11+x19y12+x18y13+x17y14+x16y15+x15y16+x14y17+x13y18+x12y19+x11y20+x10y21+x9y22+x8y23+x7y24+x6y25+x5y26+x4y27+x3y28+x2y29+xy30+y31+x30+x29y+x28y2+x27y3+x26y4+x25y5+x24y6+x23y7+x22y8+x21y9+x20y10+x19y11+x18y12+x17y13+x16y14+x15y15+x14y16+x13y17+x12y18+x11y19+x10y20+x9y21+x8y22+x7y23+x6y24+x5y25+x4y26+x3y27+x2y28+xy29+y30+x29+x28y+x27y2+x26y3+x25y4+x24y5+x23y6+x22y7+x21y8+x20y9+x19y10+x18y11+x17y12+x16y13+x15y14+x14y15+x13y16+x12y17+x11y18+x10y19+x9y20+x8y21+x7y22+x6y23+x5y24+x4y25+x3y26+x2y27+xy28+x28+x27y+x26y2+x25y3+x24y4+x23y5+x22y6+x21y7+x20y8+x19y9+x18y10+x17y11+x16y12+x15y13+x14y14+x13y15+x12y16+x11y17+x10y18+x9y19+x8y20+x7y21+x6y22+x5y23+x4y24+x3y25+x2y26+xy27+x27+x26y+x25y2+x24y3+x23y4+x22y5+x21y6+x20y7+x19y8+x18y9+x17y10+x16y11+x15y12+x14y13+x13y14+x12y15+x11y16+x10y17+x9y18+x8y19+x7y20+x6y21+x5y22+x4y23+x3y24+x2y25+xy26+x26+x25y+x24y2+x23y3+x22y4+x21y5+x20y6+x19y7+x18y8+x17y9+x16y10+x15y11+x14y12+x13y13+x12y14+x11y15+x10y16+x9y17+x8y18+x7y19+x6y20+x5y21+x4y22+x3y23+x2y24+xy25+x25+x24y+x23y2+x22y3+x21y4+x20y5+x19y6+x18y7+x17y8+x16y9+x15y10+x14y11+x13y12+x12y13+x11y14+x10y15+x9y16+x8y17+x7y18+x6y19+x5y20+x4y21+x3y22+x2y23+xy24+x24+x23y+x22y2+x21y3+x20y4+x19y5+x18y6+x17y7+x16y8+x15y9+x14y10+x13y11+x12y12+x11y13+x10y14+x9y15+x8y16+x7y17+x6y18+x5y19+x4y20+x3y21+x2y22+xy23+x23+x22y+x21y2+x20y3+x19y4+x18y5+x17y6+x16y7+x15y8+x14y9+x13y10+x12y11+x11y12+x10y13+x9y14+x8y15+x7y16+x6y17+x5y18+x4y19+x3y20+x2y21+xy22+x22+x21y+x20y2+x19y3+x18y4+x17y5+x16y6+x15y7+x14y8+x13y9+x12y10+x11y11+x10y12+x9y13+x8y14+x7y15+x6y16+x5y17+x4y18+x3y19+x2y20+xy21+x21+x20y+x19y2+x18y3+x17y4+x16y5+x15y6+x14y7+x13y8+x12y9+x11y10+x10y11+x9y12+x8y13+x7y14+x6y15+x5y16+x4y17+x3y18+x2y19+xy20+x20+x19y+x18y2+x17y3+x16y4+x15y5+x14y6+x13y7+x12y8+x11y9+x10y10+x9y11+x8y12+x7y13+x6y14+x5y15+x4y16+x3y17+x2y18+xy19+x19+x18y+x17y2+x16y3+x15y4+x14y5+x13y6+x12y7+x11y8+x10y9+x9y10+x8y11+x7y12+x6y13+x5y14+x4y15+x3y16+x2y17+xy18+x18+x17y+x16y2+x15y3+x14y4+x13y5+x12y6+x11y7+x10y8+x9y9+x8y10+x7y11+x6y12+x5y13+x4y14+x3y15+x2y16+xy17+x17+x16y+x15y2+x14y3+x13y4+x12y5+x11y6+x10y7+x9y8+x8y9+x7y10+x6y11+x5y12+x4y13+x3y14+x2y15+xy16+x16+x15y+x14y2+x13y3+x12y4+x11y5+x10y6+x9y7+x8y8+x7y9+x6y10+x5y11+x4y12+x3y13+x2y14+x15+x14y+x13y2+x12y3+x11y4+x10y5+x9y6+x8y7+x7y8+x6y9+x5y10+x4y11+x3y12+x2y13+x14+x13y+x12y2+x11y3+x10y4+x9y5+x8y6+x7y7+x6y8+x5y9+x4y10+x3y11+x2y12+x13+x12y+x11y2+x10y3+x9y4+x8y5+x7y6+x6y7+x5y8+x4y9+x3y10+x2y11+x12+x11y+x10y2+x9y3+x8y4+x7y5+x6y6+x5y7+x4y8+x3y9+x2y10+x11+x10y+x9y2+x8y3+x7y4+x6y5+x5y6+x4y7+x3y8+x2y9+x9y+x8y2+x7y3+x6y4+x5y5+x4y6+x3y7+x2y8+x8y+x7y2+x6y3+x5y4+x4y5+x3y6+x2y7+x7y+x6y2+x5y3+x4y4+x3y5+x2y6+x5y2+x4y3+x3y4+x2y5+x4y2+x3y3+x2y4+x3y2+x2y3+x2y2;
poly h2 = phi(h);
int t = timer;
list l1 = integralBasis(h2, 2, "atOrigin");
timer - t;
LIB"integralbasis.lib";
ring R = 0,(x,y),dp;
poly h = x31+x30y+x29y2+x28y3+x27y4+x26y5+x25y6+x24y7+x23y8+x22y9+x21y10+x20y11+x19y12+x18y13+x17y14+x16y15+x15y16+x14y17+x13y18+x12y19+x11y20+x10y21+x9y22+x8y23+x7y24+x6y25+x5y26+x4y27+x3y28+x2y29+xy30+y31+x30+x29y+x28y2+x27y3+x26y4+x25y5+x24y6+x23y7+x22y8+x21y9+x20y10+x19y11+x18y12+x17y13+x16y14+x15y15+x14y16+x13y17+x12y18+x11y19+x10y20+x9y21+x8y22+x7y23+x6y24+x5y25+x4y26+x3y27+x2y28+xy29+y30+x29+x28y+x27y2+x26y3+x25y4+x24y5+x23y6+x22y7+x21y8+x20y9+x19y10+x18y11+x17y12+x16y13+x15y14+x14y15+x13y16+x12y17+x11y18+x10y19+x9y20+x8y21+x7y22+x6y23+x5y24+x4y25+x3y26+x2y27+xy28+x28+x27y+x26y2+x25y3+x24y4+x23y5+x22y6+x21y7+x20y8+x19y9+x18y10+x17y11+x16y12+x15y13+x14y14+x13y15+x12y16+x11y17+x10y18+x9y19+x8y20+x7y21+x6y22+x5y23+x4y24+x3y25+x2y26+xy27+x27+x26y+x25y2+x24y3+x23y4+x22y5+x21y6+x20y7+x19y8+x18y9+x17y10+x16y11+x15y12+x14y13+x13y14+x12y15+x11y16+x10y17+x9y18+x8y19+x7y20+x6y21+x5y22+x4y23+x3y24+x2y25+xy26+x26+x25y+x24y2+x23y3+x22y4+x21y5+x20y6+x19y7+x18y8+x17y9+x16y10+x15y11+x14y12+x13y13+x12y14+x11y15+x10y16+x9y17+x8y18+x7y19+x6y20+x5y21+x4y22+x3y23+x2y24+xy25+x25+x24y+x23y2+x22y3+x21y4+x20y5+x19y6+x18y7+x17y8+x16y9+x15y10+x14y11+x13y12+x12y13+x11y14+x10y15+x9y16+x8y17+x7y18+x6y19+x5y20+x4y21+x3y22+x2y23+xy24+x24+x23y+x22y2+x21y3+x20y4+x19y5+x18y6+x17y7+x16y8+x15y9+x14y10+x13y11+x12y12+x11y13+x10y14+x9y15+x8y16+x7y17+x6y18+x5y19+x4y20+x3y21+x2y22+xy23+x23+x22y+x21y2+x20y3+x19y4+x18y5+x17y6+x16y7+x15y8+x14y9+x13y10+x12y11+x11y12+x10y13+x9y14+x8y15+x7y16+x6y17+x5y18+x4y19+x3y20+x2y21+xy22+x22+x21y+x20y2+x19y3+x18y4+x17y5+x16y6+x15y7+x14y8+x13y9+x12y10+x11y11+x10y12+x9y13+x8y14+x7y15+x6y16+x5y17+x4y18+x3y19+x2y20+xy21+x21+x20y+x19y2+x18y3+x17y4+x16y5+x15y6+x14y7+x13y8+x12y9+x11y10+x10y11+x9y12+x8y13+x7y14+x6y15+x5y16+x4y17+x3y18+x2y19+xy20+x20+x19y+x18y2+x17y3+x16y4+x15y5+x14y6+x13y7+x12y8+x11y9+x10y10+x9y11+x8y12+x7y13+x6y14+x5y15+x4y16+x3y17+x2y18+xy19+x19+x18y+x17y2+x16y3+x15y4+x14y5+x13y6+x12y7+x11y8+x10y9+x9y10+x8y11+x7y12+x6y13+x5y14+x4y15+x3y16+x2y17+xy18+x18+x17y+x16y2+x15y3+x14y4+x13y5+x12y6+x11y7+x10y8+x9y9+x8y10+x7y11+x6y12+x5y13+x4y14+x3y15+x2y16+xy17+x17+x16y+x15y2+x14y3+x13y4+x12y5+x11y6+x10y7+x9y8+x8y9+x7y10+x6y11+x5y12+x4y13+x3y14+x2y15+xy16+x16+x15y+x14y2+x13y3+x12y4+x11y5+x10y6+x9y7+x8y8+x7y9+x6y10+x5y11+x4y12+x3y13+x2y14+x15+x14y+x13y2+x12y3+x11y4+x10y5+x9y6+x8y7+x7y8+x6y9+x5y10+x4y11+x3y12+x2y13+x14+x13y+x12y2+x11y3+x10y4+x9y5+x8y6+x7y7+x6y8+x5y9+x4y10+x3y11+x2y12+x13+x12y+x11y2+x10y3+x9y4+x8y5+x7y6+x6y7+x5y8+x4y9+x3y10+x2y11+x12+x11y+x10y2+x9y3+x8y4+x7y5+x6y6+x5y7+x4y8+x3y9+x2y10+x11+x10y+x9y2+x8y3+x7y4+x6y5+x5y6+x4y7+x3y8+x2y9+x9y+x8y2+x7y3+x6y4+x5y5+x4y6+x3y7+x2y8+x8y+x7y2+x6y3+x5y4+x4y5+x3y6+x2y7+x7y+x6y2+x5y3+x4y4+x3y5+x2y6+x5y2+x4y3+x3y4+x2y5+x4y2+x3y3+x2y4+x3y2+x2y3+x2y2;
map phi = R,x+2*y+x^2+x*y+y^2+x^3,3*x+5*y+x^2*y+y^2;
poly h2 = phi(h);
int t = timer;
list l1 = integralBasis(h2, 2, "atOrigin");
timer - t;
LIB"integralbasis.lib";
ring R = 0,(x,y),dp;
poly h = x31+x30y+x29y2+x28y3+x27y4+x26y5+x25y6+x24y7+x23y8+x22y9+x21y10+x20y11+x19y12+x18y13+x17y14+x16y15+x15y16+x14y17+x13y18+x12y19+x11y20+x10y21+x9y22+x8y23+x7y24+x6y25+x5y26+x4y27+x3y28+x2y29+xy30+y31+x30+x29y+x28y2+x27y3+x26y4+x25y5+x24y6+x23y7+x22y8+x21y9+x20y10+x19y11+x18y12+x17y13+x16y14+x15y15+x14y16+x13y17+x12y18+x11y19+x10y20+x9y21+x8y22+x7y23+x6y24+x5y25+x4y26+x3y27+x2y28+xy29+y30+x29+x28y+x27y2+x26y3+x25y4+x24y5+x23y6+x22y7+x21y8+x20y9+x19y10+x18y11+x17y12+x16y13+x15y14+x14y15+x13y16+x12y17+x11y18+x10y19+x9y20+x8y21+x7y22+x6y23+x5y24+x4y25+x3y26+x2y27+xy28+x28+x27y+x26y2+x25y3+x24y4+x23y5+x22y6+x21y7+x20y8+x19y9+x18y10+x17y11+x16y12+x15y13+x14y14+x13y15+x12y16+x11y17+x10y18+x9y19+x8y20+x7y21+x6y22+x5y23+x4y24+x3y25+x2y26+xy27+x27+x26y+x25y2+x24y3+x23y4+x22y5+x21y6+x20y7+x19y8+x18y9+x17y10+x16y11+x15y12+x14y13+x13y14+x12y15+x11y16+x10y17+x9y18+x8y19+x7y20+x6y21+x5y22+x4y23+x3y24+x2y25+xy26+x26+x25y+x24y2+x23y3+x22y4+x21y5+x20y6+x19y7+x18y8+x17y9+x16y10+x15y11+x14y12+x13y13+x12y14+x11y15+x10y16+x9y17+x8y18+x7y19+x6y20+x5y21+x4y22+x3y23+x2y24+xy25+x25+x24y+x23y2+x22y3+x21y4+x20y5+x19y6+x18y7+x17y8+x16y9+x15y10+x14y11+x13y12+x12y13+x11y14+x10y15+x9y16+x8y17+x7y18+x6y19+x5y20+x4y21+x3y22+x2y23+xy24+x24+x23y+x22y2+x21y3+x20y4+x19y5+x18y6+x17y7+x16y8+x15y9+x14y10+x13y11+x12y12+x11y13+x10y14+x9y15+x8y16+x7y17+x6y18+x5y19+x4y20+x3y21+x2y22+xy23+x23+x22y+x21y2+x20y3+x19y4+x18y5+x17y6+x16y7+x15y8+x14y9+x13y10+x12y11+x11y12+x10y13+x9y14+x8y15+x7y16+x6y17+x5y18+x4y19+x3y20+x2y21+xy22+x22+x21y+x20y2+x19y3+x18y4+x17y5+x16y6+x15y7+x14y8+x13y9+x12y10+x11y11+x10y12+x9y13+x8y14+x7y15+x6y16+x5y17+x4y18+x3y19+x2y20+xy21+x21+x20y+x19y2+x18y3+x17y4+x16y5+x15y6+x14y7+x13y8+x12y9+x11y10+x10y11+x9y12+x8y13+x7y14+x6y15+x5y16+x4y17+x3y18+x2y19+xy20+x20+x19y+x18y2+x17y3+x16y4+x15y5+x14y6+x13y7+x12y8+x11y9+x10y10+x9y11+x8y12+x7y13+x6y14+x5y15+x4y16+x3y17+x2y18+xy19+x19+x18y+x17y2+x16y3+x15y4+x14y5+x13y6+x12y7+x11y8+x10y9+x9y10+x8y11+x7y12+x6y13+x5y14+x4y15+x3y16+x2y17+xy18+x18+x17y+x16y2+x15y3+x14y4+x13y5+x12y6+x11y7+x10y8+x9y9+x8y10+x7y11+x6y12+x5y13+x4y14+x3y15+x2y16+xy17+x17+x16y+x15y2+x14y3+x13y4+x12y5+x11y6+x10y7+x9y8+x8y9+x7y10+x6y11+x5y12+x4y13+x3y14+x2y15+xy16+x16+x15y+x14y2+x13y3+x12y4+x11y5+x10y6+x9y7+x8y8+x7y9+x6y10+x5y11+x4y12+x3y13+x2y14+x15+x14y+x13y2+x12y3+x11y4+x10y5+x9y6+x8y7+x7y8+x6y9+x5y10+x4y11+x3y12+x2y13+x14+x13y+x12y2+x11y3+x10y4+x9y5+x8y6+x7y7+x6y8+x5y9+x4y10+x3y11+x2y12+x13+x12y+x11y2+x10y3+x9y4+x8y5+x7y6+x6y7+x5y8+x4y9+x3y10+x2y11+x12+x11y+x10y2+x9y3+x8y4+x7y5+x6y6+x5y7+x4y8+x3y9+x2y10+x11+x10y+x9y2+x8y3+x7y4+x6y5+x5y6+x4y7+x3y8+x2y9+x9y+x8y2+x7y3+x6y4+x5y5+x4y6+x3y7+x2y8+x8y+x7y2+x6y3+x5y4+x4y5+x3y6+x2y7+x7y+x6y2+x5y3+x4y4+x3y5+x2y6+x5y2+x4y3+x3y4+x2y5+x4y2+x3y3+x2y4+x3y2+x2y3+x2y2;
map phi = R,x+2*y+x^2+x*y+y^2+x^3,3*x+5*y+x^2*y+y^2;
poly h2 = phi(h);
h2 = monic(h2);
int t = timer;
list l1 = integralBasis(h2, 2, "atOrigin");
timer - t;
h2;
printlevel = 5;
LIB"integralbasis.lib";
ring r = 0,(x,y),(dp, L(100000));
poly f = (y^15 + 2*x^38)*(y^19 + 7*x^52) + y^100;
int t = timer;
list l1 = integralBasis(f, 2, "atOrigin");
timer - t;
t = timer;
list l2 = integralBasis(f, 2, "atOrigin", "noOpti");
timer - t;
size(reduce(l1[1], groebner(l2[1])));
size(reduce(l2[1], groebner(l1[1])));
printlevel = 5;
LIB"integralbasis.lib";
ring r = 0,(x,y),(dp, L(100000));
poly f = (y^15 + 2*x^38)*(y^19 + 7*x^52) + y^100;
int t = timer;
list l1 = integralBasis(f, 2, "atOrigin");
timer - t;
t = timer;
list l2 = integralBasis(f, 2, "atOrigin", "noOpti");
timer - t;
size(reduce(l1[1], groebner(l2[1])));
size(reduce(l2[1], groebner(l1[1])));
printlevel = 5;
LIB"integralbasis.lib";
ring r = 0,(x,y),(dp, L(100000));
poly f = (y^15 + 2*x^38)*(y^19 + 7*x^52) + y^100;
int t = timer;
list l1 = integralBasis(f, 2, "atOrigin");
timer - t;
t = timer;
list l2 = integralBasis(f, 2, "atOrigin", "noOpti");
timer - t;
size(reduce(l1[1], groebner(l2[1])));
size(reduce(l2[1], groebner(l1[1])));
printlevel = 5;
LIB"integralbasis.lib";
ring r = 0,(x,y),(dp, L(100000));
poly f = (y^15 + 2*x^38)*(y^19 + 7*x^52) + y^100;
int t = timer;
list l1 = integralBasis(f, 2, "atOrigin");
timer - t;
t = timer;
list l2 = integralBasis(f, 2, "atOrigin", "noOpti");
timer - t;
size(reduce(l1[1], groebner(l2[1])));
size(reduce(l2[1], groebner(l1[1])));
LIB"integralbasis.lib";
ring r = 0,(x,y),(dp, L(100000));
poly f = (y^15 + 2*x^38)*(y^19 + 7*x^52)*(y^7+3*x^2) + y^100;
int t = timer;
list l1 = integralBasis(f, 2, "atOrigin");
timer - t;
t = timer;
list l2 = integralBasis(f, 2, "atOrigin", "noOpti");
timer - t;
size(reduce(l1[1], groebner(l2[1])));
size(reduce(l2[1], groebner(l1[1])));
printlevel = 5;
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y7 + x4) * (y7 + y5x3 + x4) + y30;
int t = timer;
list l1 = integralBasis(f, 2, "atOrigin");
timer - t;
t = timer;
list l2 = integralBasis(f, 2, "atOrigin", "noOpti");
timer - t;
size(reduce(l1[1], groebner(l2[1])));
size(reduce(l2[1], groebner(l1[1])));
printlevel = 5;
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y7 + x4) * (y7 + y5x3 + x4) + y30;
int t = timer;
list l1 = integralBasis(f, 2, "atOrigin");
timer - t;
t = timer;
list l2 = integralBasis(f, 2, "atOrigin", "noOpti");
timer - t;
size(reduce(l1[1], groebner(l2[1])));
size(reduce(l2[1], groebner(l1[1])));
printlevel = 5;
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y7 + x4) * (y7 + y5x3 + x4) + y30;
int t = timer;
list l1 = integralBasis(f, 2, "atOrigin");
timer - t;
t = timer;
list l2 = integralBasis(f, 2, "atOrigin", "noOpti");
timer - t;
size(reduce(l1[1], groebner(l2[1])));
size(reduce(l2[1], groebner(l1[1])));
printlevel = 5;
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y7 + x4) * (y7 + y5x3 + x4) + y30;
int t = timer;
list l1 = integralBasis(f, 2, "atOrigin");
timer - t;
t = timer;
list l2 = integralBasis(f, 2, "atOrigin", "noOpti");
timer - t;
size(reduce(l1[1], groebner(l2[1])));
size(reduce(l2[1], groebner(l1[1])));
printlevel = 5;
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y7 + x4) * (y7 + y5x3 + x4) + y30;
int t = timer;
list l1 = integralBasis(f, 2, "atOrigin");
timer - t;
t = timer;
list l2 = integralBasis(f, 2, "atOrigin", "noOpti");
timer - t;
size(reduce(l1[1], groebner(l2[1])));
size(reduce(l2[1], groebner(l1[1])));
printlevel = 5;
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y7 + x4) * (y7 + y5x3 + x4) + y30;
int t = timer;
list l1 = integralBasis(f, 2, "atOrigin");
timer - t;
t = timer;
list l2 = integralBasis(f, 2, "atOrigin", "noOpti");
timer - t;
size(reduce(l1[1], groebner(l2[1])));
size(reduce(l2[1], groebner(l1[1])));
printlevel = 5;
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y7 + x4) * (y7 + y5x3 + x4) + y30;
int t = timer;
list l1 = integralBasis(f, 2, "atOrigin");
timer - t;
t = timer;
list l2 = integralBasis(f, 2, "atOrigin", "noOpti");
timer - t;
size(reduce(l1[1], groebner(l2[1])));
size(reduce(l2[1], groebner(l1[1])));
printlevel = 5;
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y7 + x4) * (y7 + y5x3 + x4) + y30;
int t = timer;
list l1 = integralBasis(f, 2, "atOrigin");
timer - t;
t = timer;
list l2 = integralBasis(f, 2, "atOrigin", "noOpti");
timer - t;
size(reduce(l1[1], groebner(l2[1])));
size(reduce(l2[1], groebner(l1[1])));
printlevel = 5;
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y7 + x4) * (y7 + y5x3 + x4) + y30;
int t = timer;
list l1 = integralBasis(f, 2, "atOrigin");
timer - t;
t = timer;
list l2 = integralBasis(f, 2, "atOrigin", "noOpti");
timer - t;
size(reduce(l1[1], groebner(l2[1])));
size(reduce(l2[1], groebner(l1[1])));
printlevel = 5;
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y7 + x4) * (y7 + y5x3 + x4) + y30;
int t = timer;
list l1 = integralBasis(f, 2, "atOrigin");
timer - t;
t = timer;
list l2 = integralBasis(f, 2, "atOrigin", "noOpti");
timer - t;
size(reduce(l1[1], groebner(l2[1])));
size(reduce(l2[1], groebner(l1[1])));
printlevel = 5;
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y7 + x4) * (y7 + y5x3 + x4) + y30;
int t = timer;
list l1 = integralBasis(f, 2, "atOrigin");
timer - t;
t = timer;
list l2 = integralBasis(f, 2, "atOrigin", "noOpti");
timer - t;
size(reduce(l1[1], groebner(l2[1])));
size(reduce(l2[1], groebner(l1[1])));
printlevel = 5;
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y7 + x4) * (y7 + y5x3 + x4) + y30;
int t = timer;
list l1 = integralBasis(f, 2, "atOrigin");
timer - t;
t = timer;
list l2 = integralBasis(f, 2, "atOrigin", "noOpti");
timer - t;
size(reduce(l1[1], groebner(l2[1])));
size(reduce(l2[1], groebner(l1[1])));
printlevel = 5;
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y7 + x4) * (y7 + y5x3 + x4) + y30;
int t = timer;
list l1 = integralBasis(f, 2, "atOrigin");
timer - t;
t = timer;
list l2 = integralBasis(f, 2, "atOrigin", "noOpti");
timer - t;
size(reduce(l1[1], groebner(l2[1])));
size(reduce(l2[1], groebner(l1[1])));
printlevel = 5;
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y7 + x4) * (y7 + y5x3 + x4) + y30;
int t = timer;
list l1 = integralBasis(f, 2, "atOrigin");
timer - t;
t = timer;
list l2 = integralBasis(f, 2, "atOrigin", "noOpti");
timer - t;
size(reduce(l1[1], groebner(l2[1])));
size(reduce(l2[1], groebner(l1[1])));
printlevel = 5;
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y7 + x4) * (y7 + y5x3 + x4) + y30;
int t = timer;
list l1 = integralBasis(f, 2, "atOrigin");
timer - t;
t = timer;
list l2 = integralBasis(f, 2, "atOrigin", "noOpti");
timer - t;
size(reduce(l1[1], groebner(l2[1])));
size(reduce(l2[1], groebner(l1[1])));
printlevel = 5;
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y7 + x4) * (y7 + y5x3 + x4) + y30;
int t = timer;
list l1 = integralBasis(f, 2, "atOrigin");
timer - t;
printlevel = 5;
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y7 + x4) * (y7 + y5x3 + x4) + y30;
int t = timer;
list l1 = integralBasis(f, 2, "atOrigin");
timer - t;
t = timer;
list l2 = integralBasis(f, 2, "atOrigin", "noOpti");
timer - t;
size(reduce(l1[1], groebner(l2[1])));
size(reduce(l2[1], groebner(l1[1])));
printlevel = 5;
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y7 + x4) * (y7 + y5x3 + x4) + y30;
int t = timer;
list l1 = integralBasis(f, 2, "atOrigin");
timer - t;
t = timer;
list l2 = integralBasis(f, 2, "atOrigin", "noOpti");
timer - t;
size(reduce(l1[1], groebner(l2[1])));
size(reduce(l2[1], groebner(l1[1])));
printlevel = 5;
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y7 + x4) * (y7 + y5x3 + x4) + y30;
int t = timer;
list l1 = integralBasis(f, 2, "atOrigin");
timer - t;
t = timer;
list l2 = integralBasis(f, 2, "atOrigin", "noOpti");
timer - t;
size(reduce(l1[1], groebner(l2[1])));
size(reduce(l2[1], groebner(l1[1])));
printlevel = 5;
LIB"integralbasis.lib";
ring r = 0,(x,y),(dp, L(100000));
poly f = (y^15 + 2*x^38)*(y^19 + 7*x^52) + y^100;
int t = timer;
list l1 = integralBasis(f, 2, "atOrigin");
timer - t;
t = timer;
list l2 = integralBasis(f, 2, "atOrigin", "noOpti");
timer - t;
size(reduce(l1[1], groebner(l2[1])));
size(reduce(l2[1], groebner(l1[1])));
printlevel = 5;
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y7 + x4) * (y7 + y5x3 + x4) + y16;
int t = timer;
list l1 = integralBasis(f, 2, "atOrigin");
timer - t;
t = timer;
list l2 = integralBasis(f, 2, "atOrigin", "noOpti");
timer - t;
size(reduce(l1[1], groebner(l2[1])));
size(reduce(l2[1], groebner(l1[1])));
printlevel = 5;
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y7 + x4) * (y7 + y5x3 + x4) + y16;
int t = timer;
list l1 = integralBasis(f, 2, "atOrigin");
timer - t;
t = timer;
list l2 = integralBasis(f, 2, "atOrigin", "noOpti");
timer - t;
size(reduce(l1[1], groebner(l2[1])));
size(reduce(l2[1], groebner(l1[1])));
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y7 + x4) * (y7 + y5x3 + x4) + y30;
int t = timer;
list l1 = integralBasis(f, 2, "atOrigin");
timer - t;
t = timer;
list l2 = integralBasis(f, 2, "atOrigin", "noOpti");
timer - t;
size(reduce(l1[1], groebner(l2[1])));
size(reduce(l2[1], groebner(l1[1])));
LIB"integralbasis.lib";
ring r = 0,(x,y),(dp, L(100000));
poly f = (y^15 + 2*x^38)*(y^19 + 7*x^52) + y^100;
int t = timer;
list l1 = integralBasis(f, 2, "atOrigin");
timer - t;
t = timer;
list l2 = integralBasis(f, 2, "atOrigin", "noOpti");
timer - t;
size(reduce(l1[1], groebner(l2[1])));
size(reduce(l2[1], groebner(l1[1])));
LIB"integralbasis.lib";
ring r = 0,(x,y),(dp, L(100000));
poly f = (y^15 + 2*x^38)*(y^19 + 7*x^52)*(y^7+3*x^2) + y^100;
int t = timer;
list l1 = integralBasis(f, 2, "atOrigin");
timer - t;
t = timer;
list l2 = integralBasis(f, 2, "atOrigin", "noOpti");
timer - t;
printlevel = 5;
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y7 + x4) * (y7 + y5x3 + x4) + y30;
int t = timer;
list l1 = integralBasis(f, 2, "atOrigin");
timer - t;
t = timer;
list l2 = integralBasis(f, 2, "atOrigin", "noOpti");
timer - t;
size(reduce(l1[1], groebner(l2[1])));
size(reduce(l2[1], groebner(l1[1])));
LIB"integralbasis.lib";
ring r = 0,(x,y),dp;
int k = 400; int d = 500;
poly f = y^2 + x^(k+1) + y^d;
int t = timer;
list l1 = integralBasis(f, 2, "atOrigin");
timer - t;
t = timer;
list l2 = integralBasis(f, 2, "atOrigin", "noOpti");
timer - t;
size(reduce(l1[1], groebner(l2[1])));
size(reduce(l2[1], groebner(l1[1])));
LIB"integralbasis.lib";
ring r = 0,(x,y),dp;
int k = 400; int d = 500;
poly f = y^2 + x^(k+1) + y^d;
int t = timer;
list l1 = integralBasis(f, 2, "atOrigin");
timer - t;
t = timer;
list l2 = integralBasis(f, 2, "atOrigin", "noOpti");
timer - t;
size(reduce(l1[1], groebner(l2[1])));
size(reduce(l2[1], groebner(l1[1])));
LIB"integralbasis.lib";
ring r = 0,(x,y),dp;
int k = 400; int d = 500;
poly f = y^2 + x^(k+1) + y^d;
int t = timer;
list l1 = integralBasis(f, 2, "atOrigin");
timer - t;
t = timer;
list l2 = integralBasis(f, 2, "atOrigin", "noOpti");
timer - t;
size(reduce(l1[1], groebner(l2[1])));
size(reduce(l2[1], groebner(l1[1])));
LIB"integralbasis.lib";
ring r = 0,(x,y),dp;
int k = 400; int d = 500;
poly f = y^2 + x^(k+1) + y^d;
int t = timer;
list l1 = integralBasis(f, 2, "atOrigin");
timer - t;
t = timer;
list l2 = integralBasis(f, 2, "atOrigin", "noOpti");
timer - t;
size(reduce(l1[1], groebner(l2[1])));
size(reduce(l2[1], groebner(l1[1])));
LIB"integralbasis.lib";
ring r = 0,(x,y),dp;
int k = 400; int d = 500;
poly f = y^2 + x^(k+1) + y^d;
int t = timer;
list l1 = integralBasis(f, 2, "atOrigin");
timer - t;
t = timer;
list l2 = integralBasis(f, 2, "atOrigin", "noOpti");
timer - t;
size(reduce(l1[1], groebner(l2[1])));
size(reduce(l2[1], groebner(l1[1])));
LIB"integralbasis.lib";
ring r = 0,(x,y),dp;
int k = 400; int d = 500;
poly f = x*(x^(k-1) + y^2) + y^d;
int t = timer;
list l1 = integralBasis(f, 2, "atOrigin");
timer - t;
t = timer;
list l2 = integralBasis(f, 2, "atOrigin", "noOpti");
timer - t;
size(reduce(l1[1], groebner(l2[1])));
size(reduce(l2[1], groebner(l1[1])));
LIB"integralbasis.lib";
ring r = 0,(x,y),dp;
int k = 400; int d = 500;
poly f = x*(x^(k-1) + y^2) + y^d;
int t = timer;
list l1 = integralBasis(f, 2, "atOrigin");
timer - t;
t = timer;
list l2 = integralBasis(f, 2, "atOrigin", "noOpti");
timer - t;
size(reduce(l1[1], groebner(l2[1])));
size(reduce(l2[1], groebner(l1[1])));
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
int k = 50;
int d = 70;
poly f = polyDK(d, k, 1231);
int t = timer;
list l1 = integralBasis(f, 2, "atOrigin");
timer - t;
t = timer;
list l2 = integralBasis(f, 2, "atOrigin", "noOpti");
timer - t;
size(reduce(l1[1], groebner(l2[1])));
size(reduce(l2[1], groebner(l1[1])));
LIB"integralbasis.lib";
ring r = 0,(x,y),dp;
int k = 6;
poly z = 2*x - y + 1;
poly f = (x^(k+1) + y^(k+1) + z^(k+1))^2 - 4*(x^(k+1)*y^(k+1) + y^(k+1)*z^(k+1) + z^(k+1)*x^(k+1));
f = monic(f);
int t = timer;
list l1 = integralBasis(f, 2);
timer - t;
t = timer;
list l2 = integralBasis(f, 2, "noOpti");
timer - t;
reduce(l1[1], groebner(l2[1]));
reduce(l2[1], groebner(l1[1]));
LIB"integralbasis.lib";
ring r = 0,(x,y),dp;
int k = 5;
poly z = x - 2*y + 1;
poly f = x^(2*k) + y^(2*k) + z^(2*k) + 2 * (x^k * z^k - x^k * y^k + y^k * z^k);
f = monic(f);
int t = timer;
list l1 = integralBasis(f, 2);
timer - t;
t = timer;
list l2 = integralBasis(f, 2, "noOpti");
timer - t;
reduce(l1[1], groebner(l2[1]));
reduce(l2[1], groebner(l1[1]));
LIB"integralbasis.lib";
ring r = 0,(x,y),dp;
poly f = (y^4 + 2*x^3*y^2 + x^6 + x^5*y)^3 + x^11*y^11;
int t = timer;
list l1 = integralBasis(f, 2, "atOrigin");
timer - t;
t = timer;
list l2 = integralBasis(f, 2, "atOrigin", "noOpti");
timer - t;
size(reduce(l1[1], groebner(l2[1])));
size(reduce(l2[1], groebner(l1[1])));
LIB"integralbasis.lib";
ring r = 0,(x,y),dp;
poly f = (y^5 + y^4*x^7 + 2*x^8) * (y^3 + 7*x^4) * (y^7 + 2*x^12) * (y^11 + 2*x^18) + y^30;
int t = timer;
list l1 = integralBasis(f, 2, "atOrigin");
timer - t;
t = timer;
list l2 = integralBasis(f, 2, "atOrigin", "noOpti");
timer - t;
// Verification does not finish
size(reduce(l1[1], groebner(l2[1])));
size(reduce(l2[1], groebner(l1[1])));
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y4+3x3y + x4)*(y^7 + 6x4y3 + 2xy + x7)*(y5+7xy-4x2)*(y3+x2)*(y2-x3)+y30;
int t = timer;
list l1 = integralBasis(f,2, "atOrigin");
"opti", timer - t;
int t = timer;
list l2 = integralBasis(f,2, "atOrigin", "noOpti");
"no opti", timer - t;
size(reduce(l1[1], groebner(l2[1])));
size(reduce(l2[1], groebner(l1[1])));
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y4+3x3y + x4)*(y^7 + 6x4y3 + 2xy + x7)*(y5+7xy-4x2)*(y3+x2)*(y2-x3)+y30;
int t = timer;
list l1 = integralBasis(f,2, "atOrigin");
"opti", timer - t;
printlevel = 5;
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y4+3x3y + x4)*(y^7 + 6x4y3 + 2xy + x7)*(y5+7xy-4x2)*(y3+x2)*(y2-x3)+y30;
int t = timer;
list l1 = integralBasis(f,2, "atOrigin");
"opti", timer - t;
printlevel = 5;
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y4+3x3y + x4)*(y^7 + 6x4y3 + 2xy + x7)*(y5+7xy-4x2)*(y3+x2)*(y2-x3)+y30;
int t = timer;
list l1 = integralBasis(f,2, "atOrigin");
"opti", timer - t;
printlevel = 5;
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y4+3x3y + x4)*(y^7 + 6x4y3 + 2xy + x7)*(y5+7xy-4x2)*(y3+x2)*(y2-x3)+y30;
int t = timer;
list l1 = integralBasis(f,2, "atOrigin");
"opti", timer - t;
M
s
MSelf
md
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y4+3x3y + x4)*(y^7 + 6x4y3 + 2xy + x7)*(y5+7xy-4x2)*(y3+x2)*(y2-x3)+y30;
list l = puiseux(f,1,-1);
l;
option("long");
option("short",0);
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y4+3x3y + x4)*(y^7 + 6x4y3 + 2xy + x7)*(y5+7xy-4x2)*(y3+x2)*(y2-x3)+y30;
int t = timer;
list l1 = integralBasis(f,2, "atOrigin");
MSelf
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y4+3x3y + x4)*(y^7 + 6x4y3 + 2xy + x7)*(y5+7xy-4x2)*(y3+x2)*(y2-x3)+y30;
int t = timer;
list l1 = integralBasis(f,2, "atOrigin");
classes
pExp
MClass
bF
classes
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y4+3x3y + x4)*(y^7 + 6x4y3 + 2xy + x7)*(y5+7xy-4x2)*(y3+x2)*(y2-x3)+y30;
int t = timer;
list l1 = integralBasis(f,2, "atOrigin");
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y4+3x3y + x4)*(y^7 + 6x4y3 + 2xy + x7)*(y5+7xy-4x2)*(y3+x2)*(y2-x3)+y30;
int t = timer;
list l1 = integralBasis(f,2, "atOrigin");
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y4+3x3y + x4)*(y^7 + 6x4y3 + 2xy + x7)*(y5+7xy-4x2)*(y3+x2)*(y2-x3)+y30;
int t = timer;
list l1 = integralBasis(f,2, "atOrigin");
bF
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y4+3x3y + x4)*(y^7 + 6x4y3 + 2xy + x7)*(y5+7xy-4x2)*(y3+x2)*(y2-x3)+y30;
int t = timer;
list l1 = integralBasis(f,2, "atOrigin");
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y4+3x3y + x4)*(y^7 + 6x4y3 + 2xy + x7)*(y5+7xy-4x2)*(y3+x2)*(y2-x3)+y30;
int t = timer;
list l1 = integralBasis(f,2, "atOrigin");
bF
bF
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y4+3x3y + x4)*(y^7 + 6x4y3 + 2xy + x7)*(y5+7xy-4x2)*(y3+x2)*(y2-x3)+y30;
int t = timer;
list l1 = integralBasis(f,2, "atOrigin");
"opti", timer - t;
int t = timer;
list l2 = integralBasis(f,2, "atOrigin", "noOpti");
"no opti", timer - t;
size(reduce(l1[1], groebner(l2[1])));
size(reduce(l2[1], groebner(l1[1])));
reduce(l1[1], groebner(l2[1]))
;
l1;
l2;
C11;
l1;
l2;
l1;
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y4+3x3y + x4)*(y^7 + 6x4y3 + 2xy + x7)*(y9+7xy2-4x2)*(y3+x2)*(y2-x3)+y30;
int t = timer;
list l1 = integralBasis(f,2, "atOrigin");
"opti", timer - t;
int t = timer;
list l2 = integralBasis(f,2, "atOrigin", "noOpti");
"no opti", timer - t;
size(reduce(l1[1], groebner(l2[1])));
size(reduce(l2[1], groebner(l1[1])));
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y4+3x3y + x4)*(y^7 + 6x4y3 + 2xy + x7)*(y9+7xy2-4x2)*(y3+x2)*(y2-x3)+y30;
int t = timer;
list l1 = integralBasis(f,2, "atOrigin");
"opti", timer - t;
int t = timer;
list l2 = integralBasis(f,2, "atOrigin", "noOpti");
"no opti", timer - t;
size(reduce(l1[1], groebner(l2[1])));
size(reduce(l2[1], groebner(l1[1])));
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y4+ x4)*(y^7 + 2xy + x2)*(y5+7x3)*(y3+x2)*(y3-x2)*(y2-x3)+y30;
int t = timer;
list l1 = integralBasis(f,2, "atOrigin");
"opti", timer - t;
int t = timer;
list l2 = integralBasis(f,2, "atOrigin", "noOpti");
"no opti", timer - t;
size(reduce(l1[1], groebner(l2[1])));
size(reduce(l2[1], groebner(l1[1])));
printlevel = 5;
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y4+3x3y + x4)*(y^7 + 6x4y3 + 2xy + x7)*(y5+7xy-4x2)*(y3+x2)*(y2-x3)+y30;
int t = timer;
list l1 = integralBasis(f,2, "atOrigin");
"opti", timer - t;
int t = timer;
list l2 = integralBasis(f,2, "atOrigin", "noOpti");
"no opti", timer - t;
size(reduce(l1[1], groebner(l2[1])));
size(reduce(l2[1], groebner(l1[1])));
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y4+3x3y + x4)*(y^7 + 6x4y3 + 2xy + x7)*(y5+7xy-4x2)*(y3+x2)*(y2-x3)+y30;
int t = timer;
list l1 = integralBasis(f,2, "atOrigin");
maxExp = 13
"opti", timer - t;
int t = timer;
list l2 = integralBasis(f,2, "atOrigin", "noOpti");
maxExp = 13
size(reduce(l1[1], groebner(l2[1])));
size(reduce(l2[1], groebner(l1[1])));
reduce(l1[1], groebner(l2[1]));
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y4+3x3y + x4)*(y^7 + 6x4y3 + 2xy + x7)*(y5+7xy-4x2)*(y3+x2)*(y2-x3)+y30;
int t = timer;
list l1 = integralBasis(f,2, "atOrigin");
"opti", timer - t;
int t = timer;
list l2 = integralBasis(f,2, "atOrigin", "noOpti");
"no opti", timer - t;
size(reduce(l1[1], groebner(l2[1])));
size(reduce(l2[1], groebner(l1[1])));
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y4+3x3y + x4)*(y^7 + 6x4y3 + 2xy + x7)*(y5+7xy-4x2)*(y3+x2)*(y2-x3)+y30;
int t = timer;
list l1 = integralBasis(f,2, "atOrigin");
i
maxExpi
minOrd
maxExp
classes
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y4+3x3y + x4)*(y^7 + 6x4y3 + 2xy + x7)*(y5+7xy-4x2)*(y3+x2)*(y2-x3)+y30;
int t = timer;
list l1 = integralBasis(f,2, "atOrigin");
M;
md
MSelf
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y4+3x3y + x4)*(y^7 + 6x4y3 + 2xy + x7)*(y5+7xy-4x2)*(y3+x2)*(y2-x3)+y30;
int t = timer;
list l1 = integralBasis(f,2, "atOrigin");
def S = classes[5][1]
setring S;
PE
setring R
def S = classes[2][1]
setring S;
PE
setring R
def S = classes[1][1]
setring S;
PE
setring R
MClass
def S = classes[5][1]
setring S;
basering
PE
MClass
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y4+3x3y + x4)*(y^7 + 6x4y3 + 2xy + x7)*(y5+7xy-4x2)*(y3+x2)*(y2-x3)+y30;
int t = timer;
list l1 = integralBasis(f,2, "atOrigin");
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y4+3x3y + x4)*(y^7 + 6x4y3 + 2xy + x7)*(y5+7xy-4x2)*(y3+x2)*(y2-x3)+y30;
int t = timer;
list l1 = integralBasis(f,2, "atOrigin");
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y4+3x3y + x4)*(y^7 + 6x4y3 + 2xy + x7)*(y5+7xy-4x2)*(y3+x2)*(y2-x3)+y30;
int t = timer;
list l1 = integralBasis(f,2, "atOrigin");
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y4+3x3y + x4)*(y^7 + 6x4y3 + 2xy + x7)*(y5+7xy-4x2)*(y3+x2)*(y2-x3)+y30;
int t = timer;
list l1 = integralBasis(f,2, "atOrigin");
"opti", timer - t;
int t = timer;
list l2 = integralBasis(f,2, "atOrigin", "noOpti");
"no opti", timer - t;
size(reduce(l1[1], groebner(l2[1])));
size(reduce(l2[1], groebner(l1[1])));
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y4+3x3y + x4)*(y^7 + 6x4y3 + 2xy + x7)*(y5+7xy-4x2)*(y3+x2)*(y2-x3)+y30;
int t = timer;
list l1 = integralBasis(f,2, "atOrigin");
maxexpi
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y4+3x3y + x4)*(y^7 + 6x4y3 + 2xy + x7)*(y5+7xy-4x2)*(y3+x2)*(y2-x3)+y30;
int t = timer;
list l1 = integralBasis(f,2, "atOrigin");
maxExpi
maxExp
MClass
0~
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y4+3x3y + x4)*(y^7 + 6x4y3 + 2xy + x7)*(y5+7xy-4x2)*(y3+x2)*(y2-x3)+y30;
int t = timer;
list l1 = integralBasis(f,2, "atOrigin");
M
MSelf
maxExpi
maxExp
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y4+3x3y + x4)*(y^7 + 6x4y3 + 2xy + x7)*(y5+7xy-4x2)*(y3+x2)*(y2-x3)+y30;
int t = timer;
list l1 = integralBasis(f,2, "atOrigin");
M
MSelf[5]
s
M[5]
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y4+3x3y + x4)*(y^7 + 6x4y3 + 2xy + x7)*(y5+7xy-4x2)*(y3+x2)*(y2-x3)+y30;
int t = timer;
list l1 = integralBasis(f,2, "atOrigin");
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y4+3x3y + x4)*(y^7 + 6x4y3 + 2xy + x7)*(y5+7xy-4x2)*(y3+x2)*(y2-x3)+y30;
int t = timer;
list l1 = integralBasis(f,2, "atOrigin");
"opti", timer - t;
int t = timer;
list l2 = integralBasis(f,2, "atOrigin", "noOpti");
"no opti", timer - t;
size(reduce(l1[1], groebner(l2[1])));
size(reduce(l2[1], groebner(l1[1])));
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y4+3x3y + x4)*(y^7 + 6x4y3 + 2xy + x7)*(y5+7xy-4x2)*(y3+x2)*(y2-x3)+y30;
int t = timer;
list l1 = integralBasis(f,2, "atOrigin");
"opti", timer - t;
int t = timer;
list l2 = integralBasis(f,2, "atOrigin", "noOpti");
"no opti", timer - t;
size(reduce(l1[1], groebner(l2[1])));
size(reduce(l2[1], groebner(l1[1])));
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y4+3x3y + x4)*(y^7 + 6x4y3 + 2xy + x7)*(y5+7xy-4x2)*(y3+x2)*(y2-x3)+y30;
int t = timer;
list l1 = integralBasis(f,2, "atOrigin");
bF
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y4+3x3y + x4)*(y^7 + 6x4y3 + 2xy + x7)*(y5+7xy-4x2)*(y3+x2)*(y2-x3)+y30;
int t = timer;
list l1 = integralBasis(f,2, "atOrigin");
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y4+3x3y + x4)*(y^7 + 6x4y3 + 2xy + x7)*(y5+7xy-4x2)*(y3+x2)*(y2-x3)+y30;
int t = timer;
list l1 = integralBasis(f,2, "atOrigin");
classes[i]
pGround
classes[i]
pGround
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y4+3x3y + x4)*(y^7 + 6x4y3 + 2xy + x7)*(y5+7xy-4x2)*(y3+x2)*(y2-x3)+y30;
int t = timer;
list l1 = integralBasis(f,2, "atOrigin");
f
basering
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y4+3x3y + x4)*(y^7 + 6x4y3 + 2xy + x7)*(y5+7xy-4x2)*(y3+x2)*(y2-x3)+y30;
int t = timer;
list l1 = integralBasis(f,2, "atOrigin");
pGround
f
basering
degX
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y4+3x3y + x4)*(y^7 + 6x4y3 + 2xy + x7)*(y5+7xy-4x2)*(y3+x2)*(y2-x3)+y30;
int t = timer;
list l1 = integralBasis(f,2, "atOrigin");
ffList
basering
ff
g2
g1
g1
den
ff
pardeg(ff)
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y4+3x3y + x4)*(y^7 + 6x4y3 + 2xy + x7)*(y5+7xy-4x2)*(y3+x2)*(y2-x3)+y30;
int t = timer;
list l1 = integralBasis(f,2, "atOrigin");
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y4+3x3y + x4)*(y^7 + 6x4y3 + 2xy + x7)*(y5+7xy-4x2)*(y3+x2)*(y2-x3)+y30;
int t = timer;
list l1 = integralBasis(f,2, "atOrigin");
basering;
basering;
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y4+3x3y + x4)*(y^7 + 6x4y3 + 2xy + x7)*(y5+7xy-4x2)*(y3+x2)*(y2-x3)+y30;
int t = timer;
list l1 = integralBasis(f,2, "atOrigin");
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y4+3x3y + x4)*(y^7 + 6x4y3 + 2xy + x7)*(y5+7xy-4x2)*(y3+x2)*(y2-x3)+y30;
int t = timer;
list l1 = integralBasis(f,2, "atOrigin");
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y4+3x3y + x4)*(y^7 + 6x4y3 + 2xy + x7)*(y5+7xy-4x2)*(y3+x2)*(y2-x3)+y30;
int t = timer;
list l1 = integralBasis(f,2, "atOrigin");
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y4+3x3y + x4)*(y^7 + 6x4y3 + 2xy + x7)*(y5+7xy-4x2)*(y3+x2)*(y2-x3)+y30;
int t = timer;
list l1 = integralBasis(f,2, "atOrigin");
"opti", timer - t;
int t = timer;
list l2 = integralBasis(f,2, "atOrigin", "noOpti");
"no opti", timer - t;
size(reduce(l1[1], groebner(l2[1])));
size(reduce(l2[1], groebner(l1[1])));
l1;
l2;
"opti", timer - t;
int t = timer;
list l2 = integralBasis(f,2, "atOrigin", "noOpti");
"no opti", timer - t;
size(reduce(l1[1], groebner(l2[1])));
size(reduce(l2[1], groebner(l1[1])));
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y4+3x3y + x4)*(y^7 + 6x4y3 + 2xy + x7)*(y5+7xy-4x2)*(y3+x2)*(y2-x3)+y30;
int t = timer;
list l1 = integralBasis(f,2, "atOrigin");
deg(pGround,vy)
deg(pGround,vx)
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y4+3x3y + x4)*(y^7 + 6x4y3 + 2xy + x7)*(y5+7xy-4x2)*(y3+x2)*(y2-x3)+y30;
int t = timer;
list l1 = integralBasis(f,2, "atOrigin");
"opti", timer - t;
int t = timer;
list l2 = integralBasis(f,2, "atOrigin", "noOpti");
"no opti", timer - t;
reduce(l1[1], groebner(l2[1]));
reduce(l2[1], groebner(l1[1]));
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y4+3x3y + x4)*(y^7 + 6x4y3 + 2xy + x7)*(y5+7xy-4x2)*(y3+x2)*(y2-x3)+y30;
int t = timer;
list l1 = integralBasis(f,2, "atOrigin");
degPolySet
polySet
degPolySet
ordExpAtPoly
classes
polySet
classes
ordAtPol(polySet[3], classes[2][1]);
polySet[3]
puiseux(polySet[3], 1, -1)
list l = puiseux(polySet[3], 1, -1)
l;
def S = l[1]
setring S
PE
basering
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y4+3x3y + x4)*(y^7 + 6x4y3 + 2xy + x7)*(y5+7xy-4x2)*(y3+x2)*(y2-x3)+y30;
int t = timer;
list l1 = integralBasis(f,2, "atOrigin");
ordExpAtPoly
basering
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y4+3x3y + x4)*(y^7 + 6x4y3 + 2xy + x7)*(y5+7xy-4x2)*(y3+x2)*(y2-x3)+y30;
int t = timer;
list l1 = integralBasis(f,2, "atOrigin");
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y4+3x3y + x4)*(y^7 + 6x4y3 + 2xy + x7)*(y5+7xy-4x2)*(y3+x2)*(y2-x3)+y30;
int t = timer;
list l1 = integralBasis(f,2, "atOrigin");
basering
list l = puiseux(fNew, 1, -1);
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y4+3x3y + x4)*(y^7 + 6x4y3 + 2xy + x7)*(y5+7xy-4x2)*(y3+x2)*(y2-x3)+y30;
int t = timer;
list l1 = integralBasis(f,2, "atOrigin");
vy
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y4+3x3y + x4)*(y^7 + 6x4y3 + 2xy + x7)*(y5+7xy-4x2)*(y3+x2)*(y2-x3)+y30;
int t = timer;
list l1 = integralBasis(f,2, "atOrigin");
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y4+3x3y + x4)*(y^7 + 6x4y3 + 2xy + x7)*(y5+7xy-4x2)*(y3+x2)*(y2-x3)+y30;
int t = timer;
list l1 = integralBasis(f,2, "atOrigin");
vy = intvec(0,1)
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y4+3x3y + x4)*(y^7 + 6x4y3 + 2xy + x7)*(y5+7xy-4x2)*(y3+x2)*(y2-x3)+y30;
int t = timer;
list l1 = integralBasis(f,2, "atOrigin");
~
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y4+3x3y + x4)*(y^7 + 6x4y3 + 2xy + x7)*(y5+7xy-4x2)*(y3+x2)*(y2-x3)+y30;
int t = timer;
list l1 = integralBasis(f,2, "atOrigin");
intvec vy = (0,1)
deg(fNew, vy)
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y4+3x3y + x4)*(y^7 + 6x4y3 + 2xy + x7)*(y5+7xy-4x2)*(y3+x2)*(y2-x3)+y30;
int t = timer;
list l1 = integralBasis(f,2, "atOrigin");
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y4+3x3y + x4)*(y^7 + 6x4y3 + 2xy + x7)*(y5+7xy-4x2)*(y3+x2)*(y2-x3)+y30;
int t = timer;
list l1 = integralBasis(f,2, "atOrigin");
ordAtPoly
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y4+3x3y + x4)*(y^7 + 6x4y3 + 2xy + x7)*(y5+7xy-4x2)*(y3+x2)*(y2-x3)+y30;
int t = timer;
list l1 = integralBasis(f,2, "atOrigin");
ordExpAtPoly
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y4+3x3y + x4)*(y^7 + 6x4y3 + 2xy + x7)*(y5+7xy-4x2)*(y3+x2)*(y2-x3)+y30;
int t = timer;
list l1 = integralBasis(f,2, "atOrigin");
"opti", timer - t;
int t = timer;
list l2 = integralBasis(f,2, "atOrigin", "noOpti");
"no opti", timer - t;
reduce(l1[1], groebner(l2[1]));
reduce(l2[1], groebner(l1[1]));
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y4+3x3y + x4)*(y^7 + 6x4y3 + 2xy + x7)*(y5+7xy-4x2)*(y3+x2)*(y2-x3)+y30;
int t = timer;
list l1 = integralBasis(f,2, "atOrigin");
"opti", timer - t;
int t = timer;
list l2 = integralBasis(f,2, "atOrigin", "noOpti");
"no opti", timer - t;
reduce(l1[1], groebner(l2[1]));
reduce(l2[1], groebner(l1[1]));
ordExpAtPoly
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y4+3x3y + x4)*(y^7 + 6x4y3 + 2xy + x7)*(y5+7xy-4x2)*(y3+x2)*(y2-x3)+y30;
int t = timer;
list l1 = integralBasis(f,2, "atOrigin");
ordExpAtPoly
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y4+3x3y + x4)*(y^7 + 6x4y3 + 2xy + x7)*(y5+7xy-4x2)*(y3+x2)*(y2-x3)+y30;
int t = timer;
list l1 = integralBasis(f,2, "atOrigin");
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y4+3x3y + x4)*(y^7 + 6x4y3 + 2xy + x7)*(y5+7xy-4x2)*(y3+x2)*(y2-x3)+y30;
int t = timer;
list l1 = integralBasis(f,2, "atOrigin");
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y4+3x3y + x4)*(y^7 + 6x4y3 + 2xy + x7)*(y5+7xy-4x2)*(y3+x2)*(y2-x3)+y30;
int t = timer;
list l1 = integralBasis(f,2, "atOrigin");
"opti", timer - t;
int t = timer;
list l2 = integralBasis(f,2, "atOrigin", "noOpti");
"no opti", timer - t;
reduce(l1[1], groebner(l2[1]));
reduce(l2[1], groebner(l1[1]));
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y4+3x3y + x4)*(y^7 + 6x4y3 + 2xy + x7)*(y5+7xy-4x2)*(y3+x2)*(y2-x3)+y30;
int t = timer;
list l1 = integralBasis(f,2, "atOrigin");
"opti", timer - t;
int t = timer;
list l2 = integralBasis(f,2, "atOrigin", "noOpti");
"no opti", timer - t;
size(reduce(l1[1], groebner(l2[1])));
size(reduce(l2[1], groebner(l1[1])));
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y4+3x3y + x4)*(y^7 + 6x4y3 + 2xy + x7)*(y5+7xy-4x2)*(y3+x2)*(y2-x3)+y30;
int t = timer;
list l1 = integralBasis(f,2, "atOrigin");
"opti", timer - t;
int t = timer;
list l2 = integralBasis(f,2, "atOrigin", "noOpti");
"no opti", timer - t;
size(reduce(l1[1], groebner(l2[1])));
size(reduce(l2[1], groebner(l1[1])));
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y4+3x3y + x4)*(y^7 + 6x4y3 + 2xy + x7)*(y5+7xy-4x2)*(y3+x2)*(y2-x3)+y30;
int t = timer;
list l1 = integralBasis(f,2, "atOrigin");
"opti", timer - t;
int t = timer;
list l2 = integralBasis(f,2, "atOrigin", "noOpti");
"no opti", timer - t;
size(reduce(l1[1], groebner(l2[1])));
size(reduce(l2[1], groebner(l1[1])));
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y4+3x3y + x4)*(y^7 + 6x4y3 + 2xy + x7)*(y5+7xy-4x2)*(y3+x2)*(y2-x3)+y30;
int t = timer;
list l1 = integralBasis(f,2, "atOrigin");
"opti", timer - t;
int t = timer;
list l2 = integralBasis(f,2, "atOrigin", "noOpti");
"no opti", timer - t;
size(reduce(l1[1], groebner(l2[1])));
size(reduce(l2[1], groebner(l1[1])));
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y4+3x3y + x4)*(y^7 + 6x4y3 + 2xy + x7)*(y5+7xy-4x2)*(y3+x2)*(y2-x3)+y30;
int t = timer;
list l1 = integralBasis(f,2, "atOrigin");
"opti", timer - t;
int t = timer;
list l2 = integralBasis(f,2, "atOrigin", "noOpti");
"no opti", timer - t;
size(reduce(l1[1], groebner(l2[1])));
size(reduce(l2[1], groebner(l1[1])));
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y4+3x3y + x4)*(y^7 + 6x4y3 + 2xy + x7)*(y5+7xy-4x2)*(y3+x2)*(y2-x3)+y30;
int t = timer;
list l1 = integralBasis(f,2, "atOrigin");
"opti", timer - t;
int t = timer;
list l2 = integralBasis(f,2, "atOrigin", "noOpti");
"no opti", timer - t;
size(reduce(l1[1], groebner(l2[1])));
size(reduce(l2[1], groebner(l1[1])));
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y4+3x3y + x4)*(y^7 + 6x4y3 + 2xy + x7)*(y5+7xy-4x2)*(y3+x2)*(y2-x3)+y30;
int t = timer;
list l1 = integralBasis(f,2, "atOrigin");
"opti", timer - t;
int t = timer;
list l2 = integralBasis(f,2, "atOrigin", "noOpti");
"no opti", timer - t;
size(reduce(l1[1], groebner(l2[1])));
size(reduce(l2[1], groebner(l1[1])));
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y4+3x3y + x4)*(y^7 + 6x4y3 + 2xy + x7)*(y5+7xy-4x2)*(y3+x2)*(y2-x3)+y100;
int t = timer;
list l1 = integralBasis(f,2, "atOrigin");
"opti", timer - t;
int t = timer;
list l2 = integralBasis(f,2, "atOrigin", "noOpti");
"no opti", timer - t;
size(reduce(l1[1], groebner(l2[1])));
size(reduce(l2[1], groebner(l1[1])));
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y4+3x3y + x4)*(y^7 + 6x4y3 + 2xy + x7)*(y9+7xy2-4x2)*(y3+x2)*(y2-x3)+y30;
int t = timer;
list l1 = integralBasis(f,2, "atOrigin");
"opti", timer - t;
int t = timer;
list l2 = integralBasis(f,2, "atOrigin", "noOpti");
"no opti", timer - t;
size(reduce(l1[1], groebner(l2[1])));
size(reduce(l2[1], groebner(l1[1])));
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y4+ x4)*(y^7 + 2xy + x2)*(y5+7x3)*(y3+x2)*(y3-x2)*(y2-x3)+y30;
int t = timer;
list l1 = integralBasis(f,2, "atOrigin");
"opti", timer - t;
int t = timer;
list l2 = integralBasis(f,2, "atOrigin", "noOpti");
"no opti", timer - t;
size(reduce(l1[1], groebner(l2[1])));
size(reduce(l2[1], groebner(l1[1])));
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y4+ x4)*(y^7 + 2xy + x2)*(y5+7x3)*(y3+x2)*(y3-x2)*(y2-x3)+y30;
int t = timer;
list l1 = integralBasis(f,2, "atOrigin");
"opti", timer - t;
int t = timer;
list l2 = integralBasis(f,2, "atOrigin", "noOpti");
"no opti", timer - t;
size(reduce(l1[1], groebner(l2[1])));
size(reduce(l2[1], groebner(l1[1])));
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y4+3x3y + x4)*(y^7 + 6x4y3 + 2xy + x7)*(y5+7x3)*(y3-4x2)*(y3+x2)*(y2-x3)+y30;
int t = timer;
list l1 = integralBasis(f,2, "atOrigin");
"opti", timer - t;
int t = timer;
list l2 = integralBasis(f,2, "atOrigin", "noOpti");
"no opti", timer - t;
size(reduce(l1[1], groebner(l2[1])));
size(reduce(l2[1], groebner(l1[1])));
LIB"integralbasis.lib";
ring R = 0,(x,y),dp;
poly f = x^(30)+x^2*y^2+y^(11);
map phi = R,x+2*y+x^2+x*y+y^2+x^3,3*x+5*y+x^2*y+y^2;
poly g =phi(f);
list l = puiseux(g,1,-1);
l;
def S = l[1],
;
def S = l[1];
setring S;
PE
;
basering;
poly f = PE[1][1];
f;
subs(f,x,0);
subst(f,x,0);
intvec vx = (1,0);
deg(f,vx);
basering
;
g;
setring r;
setring R;
g;
deg(g,vx);
deg(g,(0,1));
deg(g,intvec(0,1));
l;
setring S;
PE;
PE[2];
PE[1];
basering;
pardeg(minpoly);
dd
printlevel = 5;
LIB"integralbasis.lib";
ring R = 0,(x,y),dp;
poly h = x31+x30y+x29y2+x28y3+x27y4+x26y5+x25y6+x24y7+x23y8+x22y9+x21y10+x20y11+x19y12+x18y13+x17y14+x16y15+x15y16+x14y17+x13y18+x12y19+x11y20+x10y21+x9y22+x8y23+x7y24+x6y25+x5y26+x4y27+x3y28+x2y29+xy30+y31+x30+x29y+x28y2+x27y3+x26y4+x25y5+x24y6+x23y7+x22y8+x21y9+x20y10+x19y11+x18y12+x17y13+x16y14+x15y15+x14y16+x13y17+x12y18+x11y19+x10y20+x9y21+x8y22+x7y23+x6y24+x5y25+x4y26+x3y27+x2y28+xy29+y30+x29+x28y+x27y2+x26y3+x25y4+x24y5+x23y6+x22y7+x21y8+x20y9+x19y10+x18y11+x17y12+x16y13+x15y14+x14y15+x13y16+x12y17+x11y18+x10y19+x9y20+x8y21+x7y22+x6y23+x5y24+x4y25+x3y26+x2y27+xy28+x28+x27y+x26y2+x25y3+x24y4+x23y5+x22y6+x21y7+x20y8+x19y9+x18y10+x17y11+x16y12+x15y13+x14y14+x13y15+x12y16+x11y17+x10y18+x9y19+x8y20+x7y21+x6y22+x5y23+x4y24+x3y25+x2y26+xy27+x27+x26y+x25y2+x24y3+x23y4+x22y5+x21y6+x20y7+x19y8+x18y9+x17y10+x16y11+x15y12+x14y13+x13y14+x12y15+x11y16+x10y17+x9y18+x8y19+x7y20+x6y21+x5y22+x4y23+x3y24+x2y25+xy26+x26+x25y+x24y2+x23y3+x22y4+x21y5+x20y6+x19y7+x18y8+x17y9+x16y10+x15y11+x14y12+x13y13+x12y14+x11y15+x10y16+x9y17+x8y18+x7y19+x6y20+x5y21+x4y22+x3y23+x2y24+xy25+x25+x24y+x23y2+x22y3+x21y4+x20y5+x19y6+x18y7+x17y8+x16y9+x15y10+x14y11+x13y12+x12y13+x11y14+x10y15+x9y16+x8y17+x7y18+x6y19+x5y20+x4y21+x3y22+x2y23+xy24+x24+x23y+x22y2+x21y3+x20y4+x19y5+x18y6+x17y7+x16y8+x15y9+x14y10+x13y11+x12y12+x11y13+x10y14+x9y15+x8y16+x7y17+x6y18+x5y19+x4y20+x3y21+x2y22+xy23+x23+x22y+x21y2+x20y3+x19y4+x18y5+x17y6+x16y7+x15y8+x14y9+x13y10+x12y11+x11y12+x10y13+x9y14+x8y15+x7y16+x6y17+x5y18+x4y19+x3y20+x2y21+xy22+x22+x21y+x20y2+x19y3+x18y4+x17y5+x16y6+x15y7+x14y8+x13y9+x12y10+x11y11+x10y12+x9y13+x8y14+x7y15+x6y16+x5y17+x4y18+x3y19+x2y20+xy21+x21+x20y+x19y2+x18y3+x17y4+x16y5+x15y6+x14y7+x13y8+x12y9+x11y10+x10y11+x9y12+x8y13+x7y14+x6y15+x5y16+x4y17+x3y18+x2y19+xy20+x20+x19y+x18y2+x17y3+x16y4+x15y5+x14y6+x13y7+x12y8+x11y9+x10y10+x9y11+x8y12+x7y13+x6y14+x5y15+x4y16+x3y17+x2y18+xy19+x19+x18y+x17y2+x16y3+x15y4+x14y5+x13y6+x12y7+x11y8+x10y9+x9y10+x8y11+x7y12+x6y13+x5y14+x4y15+x3y16+x2y17+xy18+x18+x17y+x16y2+x15y3+x14y4+x13y5+x12y6+x11y7+x10y8+x9y9+x8y10+x7y11+x6y12+x5y13+x4y14+x3y15+x2y16+xy17+x17+x16y+x15y2+x14y3+x13y4+x12y5+x11y6+x10y7+x9y8+x8y9+x7y10+x6y11+x5y12+x4y13+x3y14+x2y15+xy16+x16+x15y+x14y2+x13y3+x12y4+x11y5+x10y6+x9y7+x8y8+x7y9+x6y10+x5y11+x4y12+x3y13+x2y14+x15+x14y+x13y2+x12y3+x11y4+x10y5+x9y6+x8y7+x7y8+x6y9+x5y10+x4y11+x3y12+x2y13+x14+x13y+x12y2+x11y3+x10y4+x9y5+x8y6+x7y7+x6y8+x5y9+x4y10+x3y11+x2y12+x13+x12y+x11y2+x10y3+x9y4+x8y5+x7y6+x6y7+x5y8+x4y9+x3y10+x2y11+x12+x11y+x10y2+x9y3+x8y4+x7y5+x6y6+x5y7+x4y8+x3y9+x2y10+x11+x10y+x9y2+x8y3+x7y4+x6y5+x5y6+x4y7+x3y8+x2y9+x9y+x8y2+x7y3+x6y4+x5y5+x4y6+x3y7+x2y8+x8y+x7y2+x6y3+x5y4+x4y5+x3y6+x2y7+x7y+x6y2+x5y3+x4y4+x3y5+x2y6+x5y2+x4y3+x3y4+x2y5+x4y2+x3y3+x2y4+x3y2+x2y3+x2y2;
map phi = R,x+2*y+x^2+x*y+y^2+x^3,3*x+5*y+x^2*y+y^2;
poly h2 = phi(h);
h2 = monic(h2);
int t = timer;
list l1 = integralBasis(h2, 2, "atOrigin");
LIB"integralbasis.lib";
ring R = 0,(x,y),dp;
poly h = x31+x30y+x29y2+x28y3+x27y4+x26y5+x25y6+x24y7+x23y8+x22y9+x21y10+x20y11+x19y12+x18y13+x17y14+x16y15+x15y16+x14y17+x13y18+x12y19+x11y20+x10y21+x9y22+x8y23+x7y24+x6y25+x5y26+x4y27+x3y28+x2y29+xy30+y31+x30+x29y+x28y2+x27y3+x26y4+x25y5+x24y6+x23y7+x22y8+x21y9+x20y10+x19y11+x18y12+x17y13+x16y14+x15y15+x14y16+x13y17+x12y18+x11y19+x10y20+x9y21+x8y22+x7y23+x6y24+x5y25+x4y26+x3y27+x2y28+xy29+y30+x29+x28y+x27y2+x26y3+x25y4+x24y5+x23y6+x22y7+x21y8+x20y9+x19y10+x18y11+x17y12+x16y13+x15y14+x14y15+x13y16+x12y17+x11y18+x10y19+x9y20+x8y21+x7y22+x6y23+x5y24+x4y25+x3y26+x2y27+xy28+x28+x27y+x26y2+x25y3+x24y4+x23y5+x22y6+x21y7+x20y8+x19y9+x18y10+x17y11+x16y12+x15y13+x14y14+x13y15+x12y16+x11y17+x10y18+x9y19+x8y20+x7y21+x6y22+x5y23+x4y24+x3y25+x2y26+xy27+x27+x26y+x25y2+x24y3+x23y4+x22y5+x21y6+x20y7+x19y8+x18y9+x17y10+x16y11+x15y12+x14y13+x13y14+x12y15+x11y16+x10y17+x9y18+x8y19+x7y20+x6y21+x5y22+x4y23+x3y24+x2y25+xy26+x26+x25y+x24y2+x23y3+x22y4+x21y5+x20y6+x19y7+x18y8+x17y9+x16y10+x15y11+x14y12+x13y13+x12y14+x11y15+x10y16+x9y17+x8y18+x7y19+x6y20+x5y21+x4y22+x3y23+x2y24+xy25+x25+x24y+x23y2+x22y3+x21y4+x20y5+x19y6+x18y7+x17y8+x16y9+x15y10+x14y11+x13y12+x12y13+x11y14+x10y15+x9y16+x8y17+x7y18+x6y19+x5y20+x4y21+x3y22+x2y23+xy24+x24+x23y+x22y2+x21y3+x20y4+x19y5+x18y6+x17y7+x16y8+x15y9+x14y10+x13y11+x12y12+x11y13+x10y14+x9y15+x8y16+x7y17+x6y18+x5y19+x4y20+x3y21+x2y22+xy23+x23+x22y+x21y2+x20y3+x19y4+x18y5+x17y6+x16y7+x15y8+x14y9+x13y10+x12y11+x11y12+x10y13+x9y14+x8y15+x7y16+x6y17+x5y18+x4y19+x3y20+x2y21+xy22+x22+x21y+x20y2+x19y3+x18y4+x17y5+x16y6+x15y7+x14y8+x13y9+x12y10+x11y11+x10y12+x9y13+x8y14+x7y15+x6y16+x5y17+x4y18+x3y19+x2y20+xy21+x21+x20y+x19y2+x18y3+x17y4+x16y5+x15y6+x14y7+x13y8+x12y9+x11y10+x10y11+x9y12+x8y13+x7y14+x6y15+x5y16+x4y17+x3y18+x2y19+xy20+x20+x19y+x18y2+x17y3+x16y4+x15y5+x14y6+x13y7+x12y8+x11y9+x10y10+x9y11+x8y12+x7y13+x6y14+x5y15+x4y16+x3y17+x2y18+xy19+x19+x18y+x17y2+x16y3+x15y4+x14y5+x13y6+x12y7+x11y8+x10y9+x9y10+x8y11+x7y12+x6y13+x5y14+x4y15+x3y16+x2y17+xy18+x18+x17y+x16y2+x15y3+x14y4+x13y5+x12y6+x11y7+x10y8+x9y9+x8y10+x7y11+x6y12+x5y13+x4y14+x3y15+x2y16+xy17+x17+x16y+x15y2+x14y3+x13y4+x12y5+x11y6+x10y7+x9y8+x8y9+x7y10+x6y11+x5y12+x4y13+x3y14+x2y15+xy16+x16+x15y+x14y2+x13y3+x12y4+x11y5+x10y6+x9y7+x8y8+x7y9+x6y10+x5y11+x4y12+x3y13+x2y14+x15+x14y+x13y2+x12y3+x11y4+x10y5+x9y6+x8y7+x7y8+x6y9+x5y10+x4y11+x3y12+x2y13+x14+x13y+x12y2+x11y3+x10y4+x9y5+x8y6+x7y7+x6y8+x5y9+x4y10+x3y11+x2y12+x13+x12y+x11y2+x10y3+x9y4+x8y5+x7y6+x6y7+x5y8+x4y9+x3y10+x2y11+x12+x11y+x10y2+x9y3+x8y4+x7y5+x6y6+x5y7+x4y8+x3y9+x2y10+x11+x10y+x9y2+x8y3+x7y4+x6y5+x5y6+x4y7+x3y8+x2y9+x9y+x8y2+x7y3+x6y4+x5y5+x4y6+x3y7+x2y8+x8y+x7y2+x6y3+x5y4+x4y5+x3y6+x2y7+x7y+x6y2+x5y3+x4y4+x3y5+x2y6+x5y2+x4y3+x3y4+x2y5+x4y2+x3y3+x2y4+x3y2+x2y3+x2y2;
int t = timer;
list l1 = integralBasis(h2, 2, "atOrigin");
timer - t;
printlevel = 5;
LIB"integralbasis.lib";
ring R = 0,(x,y),dp;
poly h = x31+x30y+x29y2+x28y3+x27y4+x26y5+x25y6+x24y7+x23y8+x22y9+x21y10+x20y11+x19y12+x18y13+x17y14+x16y15+x15y16+x14y17+x13y18+x12y19+x11y20+x10y21+x9y22+x8y23+x7y24+x6y25+x5y26+x4y27+x3y28+x2y29+xy30+y31+x30+x29y+x28y2+x27y3+x26y4+x25y5+x24y6+x23y7+x22y8+x21y9+x20y10+x19y11+x18y12+x17y13+x16y14+x15y15+x14y16+x13y17+x12y18+x11y19+x10y20+x9y21+x8y22+x7y23+x6y24+x5y25+x4y26+x3y27+x2y28+xy29+y30+x29+x28y+x27y2+x26y3+x25y4+x24y5+x23y6+x22y7+x21y8+x20y9+x19y10+x18y11+x17y12+x16y13+x15y14+x14y15+x13y16+x12y17+x11y18+x10y19+x9y20+x8y21+x7y22+x6y23+x5y24+x4y25+x3y26+x2y27+xy28+x28+x27y+x26y2+x25y3+x24y4+x23y5+x22y6+x21y7+x20y8+x19y9+x18y10+x17y11+x16y12+x15y13+x14y14+x13y15+x12y16+x11y17+x10y18+x9y19+x8y20+x7y21+x6y22+x5y23+x4y24+x3y25+x2y26+xy27+x27+x26y+x25y2+x24y3+x23y4+x22y5+x21y6+x20y7+x19y8+x18y9+x17y10+x16y11+x15y12+x14y13+x13y14+x12y15+x11y16+x10y17+x9y18+x8y19+x7y20+x6y21+x5y22+x4y23+x3y24+x2y25+xy26+x26+x25y+x24y2+x23y3+x22y4+x21y5+x20y6+x19y7+x18y8+x17y9+x16y10+x15y11+x14y12+x13y13+x12y14+x11y15+x10y16+x9y17+x8y18+x7y19+x6y20+x5y21+x4y22+x3y23+x2y24+xy25+x25+x24y+x23y2+x22y3+x21y4+x20y5+x19y6+x18y7+x17y8+x16y9+x15y10+x14y11+x13y12+x12y13+x11y14+x10y15+x9y16+x8y17+x7y18+x6y19+x5y20+x4y21+x3y22+x2y23+xy24+x24+x23y+x22y2+x21y3+x20y4+x19y5+x18y6+x17y7+x16y8+x15y9+x14y10+x13y11+x12y12+x11y13+x10y14+x9y15+x8y16+x7y17+x6y18+x5y19+x4y20+x3y21+x2y22+xy23+x23+x22y+x21y2+x20y3+x19y4+x18y5+x17y6+x16y7+x15y8+x14y9+x13y10+x12y11+x11y12+x10y13+x9y14+x8y15+x7y16+x6y17+x5y18+x4y19+x3y20+x2y21+xy22+x22+x21y+x20y2+x19y3+x18y4+x17y5+x16y6+x15y7+x14y8+x13y9+x12y10+x11y11+x10y12+x9y13+x8y14+x7y15+x6y16+x5y17+x4y18+x3y19+x2y20+xy21+x21+x20y+x19y2+x18y3+x17y4+x16y5+x15y6+x14y7+x13y8+x12y9+x11y10+x10y11+x9y12+x8y13+x7y14+x6y15+x5y16+x4y17+x3y18+x2y19+xy20+x20+x19y+x18y2+x17y3+x16y4+x15y5+x14y6+x13y7+x12y8+x11y9+x10y10+x9y11+x8y12+x7y13+x6y14+x5y15+x4y16+x3y17+x2y18+xy19+x19+x18y+x17y2+x16y3+x15y4+x14y5+x13y6+x12y7+x11y8+x10y9+x9y10+x8y11+x7y12+x6y13+x5y14+x4y15+x3y16+x2y17+xy18+x18+x17y+x16y2+x15y3+x14y4+x13y5+x12y6+x11y7+x10y8+x9y9+x8y10+x7y11+x6y12+x5y13+x4y14+x3y15+x2y16+xy17+x17+x16y+x15y2+x14y3+x13y4+x12y5+x11y6+x10y7+x9y8+x8y9+x7y10+x6y11+x5y12+x4y13+x3y14+x2y15+xy16+x16+x15y+x14y2+x13y3+x12y4+x11y5+x10y6+x9y7+x8y8+x7y9+x6y10+x5y11+x4y12+x3y13+x2y14+x15+x14y+x13y2+x12y3+x11y4+x10y5+x9y6+x8y7+x7y8+x6y9+x5y10+x4y11+x3y12+x2y13+x14+x13y+x12y2+x11y3+x10y4+x9y5+x8y6+x7y7+x6y8+x5y9+x4y10+x3y11+x2y12+x13+x12y+x11y2+x10y3+x9y4+x8y5+x7y6+x6y7+x5y8+x4y9+x3y10+x2y11+x12+x11y+x10y2+x9y3+x8y4+x7y5+x6y6+x5y7+x4y8+x3y9+x2y10+x11+x10y+x9y2+x8y3+x7y4+x6y5+x5y6+x4y7+x3y8+x2y9+x9y+x8y2+x7y3+x6y4+x5y5+x4y6+x3y7+x2y8+x8y+x7y2+x6y3+x5y4+x4y5+x3y6+x2y7+x7y+x6y2+x5y3+x4y4+x3y5+x2y6+x5y2+x4y3+x3y4+x2y5+x4y2+x3y3+x2y4+x3y2+x2y3+x2y2;
int t = timer;
list l1 = integralBasis(h, 2, "atOrigin");
timer - t;
t = timer;
list l2 = integralBasis(f, 2, "atOrigin", "noOpti");
timer - t;
t = timer;
list l2 = integralBasis(h3, 2, "atOrigin", "noOpti");
timer - t;
t = timer;
list l2 = integralBasis(h2, 2, "atOrigin", "noOpti");
timer - t;
t = timer;
list l2 = integralBasis(h, 2, "atOrigin", "noOpti");
timer - t;
LIB"integralbasis.lib";
ring R = 0,(x,y),dp;
poly h = x31+x30y+x29y2+x28y3+x27y4+x26y5+x25y6+x24y7+x23y8+x22y9+x21y10+x20y11+x19y12+x18y13+x17y14+x16y15+x15y16+x14y17+x13y18+x12y19+x11y20+x10y21+x9y22+x8y23+x7y24+x6y25+x5y26+x4y27+x3y28+x2y29+xy30+y31+x30+x29y+x28y2+x27y3+x26y4+x25y5+x24y6+x23y7+x22y8+x21y9+x20y10+x19y11+x18y12+x17y13+x16y14+x15y15+x14y16+x13y17+x12y18+x11y19+x10y20+x9y21+x8y22+x7y23+x6y24+x5y25+x4y26+x3y27+x2y28+xy29+y30+x29+x28y+x27y2+x26y3+x25y4+x24y5+x23y6+x22y7+x21y8+x20y9+x19y10+x18y11+x17y12+x16y13+x15y14+x14y15+x13y16+x12y17+x11y18+x10y19+x9y20+x8y21+x7y22+x6y23+x5y24+x4y25+x3y26+x2y27+xy28+x28+x27y+x26y2+x25y3+x24y4+x23y5+x22y6+x21y7+x20y8+x19y9+x18y10+x17y11+x16y12+x15y13+x14y14+x13y15+x12y16+x11y17+x10y18+x9y19+x8y20+x7y21+x6y22+x5y23+x4y24+x3y25+x2y26+xy27+x27+x26y+x25y2+x24y3+x23y4+x22y5+x21y6+x20y7+x19y8+x18y9+x17y10+x16y11+x15y12+x14y13+x13y14+x12y15+x11y16+x10y17+x9y18+x8y19+x7y20+x6y21+x5y22+x4y23+x3y24+x2y25+xy26+x26+x25y+x24y2+x23y3+x22y4+x21y5+x20y6+x19y7+x18y8+x17y9+x16y10+x15y11+x14y12+x13y13+x12y14+x11y15+x10y16+x9y17+x8y18+x7y19+x6y20+x5y21+x4y22+x3y23+x2y24+xy25+x25+x24y+x23y2+x22y3+x21y4+x20y5+x19y6+x18y7+x17y8+x16y9+x15y10+x14y11+x13y12+x12y13+x11y14+x10y15+x9y16+x8y17+x7y18+x6y19+x5y20+x4y21+x3y22+x2y23+xy24+x24+x23y+x22y2+x21y3+x20y4+x19y5+x18y6+x17y7+x16y8+x15y9+x14y10+x13y11+x12y12+x11y13+x10y14+x9y15+x8y16+x7y17+x6y18+x5y19+x4y20+x3y21+x2y22+xy23+x23+x22y+x21y2+x20y3+x19y4+x18y5+x17y6+x16y7+x15y8+x14y9+x13y10+x12y11+x11y12+x10y13+x9y14+x8y15+x7y16+x6y17+x5y18+x4y19+x3y20+x2y21+xy22+x22+x21y+x20y2+x19y3+x18y4+x17y5+x16y6+x15y7+x14y8+x13y9+x12y10+x11y11+x10y12+x9y13+x8y14+x7y15+x6y16+x5y17+x4y18+x3y19+x2y20+xy21+x21+x20y+x19y2+x18y3+x17y4+x16y5+x15y6+x14y7+x13y8+x12y9+x11y10+x10y11+x9y12+x8y13+x7y14+x6y15+x5y16+x4y17+x3y18+x2y19+xy20+x20+x19y+x18y2+x17y3+x16y4+x15y5+x14y6+x13y7+x12y8+x11y9+x10y10+x9y11+x8y12+x7y13+x6y14+x5y15+x4y16+x3y17+x2y18+xy19+x19+x18y+x17y2+x16y3+x15y4+x14y5+x13y6+x12y7+x11y8+x10y9+x9y10+x8y11+x7y12+x6y13+x5y14+x4y15+x3y16+x2y17+xy18+x18+x17y+x16y2+x15y3+x14y4+x13y5+x12y6+x11y7+x10y8+x9y9+x8y10+x7y11+x6y12+x5y13+x4y14+x3y15+x2y16+xy17+x17+x16y+x15y2+x14y3+x13y4+x12y5+x11y6+x10y7+x9y8+x8y9+x7y10+x6y11+x5y12+x4y13+x3y14+x2y15+xy16+x16+x15y+x14y2+x13y3+x12y4+x11y5+x10y6+x9y7+x8y8+x7y9+x6y10+x5y11+x4y12+x3y13+x2y14+x15+x14y+x13y2+x12y3+x11y4+x10y5+x9y6+x8y7+x7y8+x6y9+x5y10+x4y11+x3y12+x2y13+x14+x13y+x12y2+x11y3+x10y4+x9y5+x8y6+x7y7+x6y8+x5y9+x4y10+x3y11+x2y12+x13+x12y+x11y2+x10y3+x9y4+x8y5+x7y6+x6y7+x5y8+x4y9+x3y10+x2y11+x12+x11y+x10y2+x9y3+x8y4+x7y5+x6y6+x5y7+x4y8+x3y9+x2y10+x11+x10y+x9y2+x8y3+x7y4+x6y5+x5y6+x4y7+x3y8+x2y9+x9y+x8y2+x7y3+x6y4+x5y5+x4y6+x3y7+x2y8+x8y+x7y2+x6y3+x5y4+x4y5+x3y6+x2y7+x7y+x6y2+x5y3+x4y4+x3y5+x2y6+x5y2+x4y3+x3y4+x2y5+x4y2+x3y3+x2y4+x3y2+x2y3+x2y2;
int t = timer;
list l1 = integralBasis(h, 2, "atOrigin");
timer - t;
t = timer;
list l2 = integralBasis(h, 2, "atOrigin", "noOpti");
timer - t;
"Verification...";
size(reduce(l1[1], groebner(l2[1])));
size(reduce(l2[1], groebner(l1[1])));
printlevel = 5;
LIB"integralbasis.lib";
ring R = 0,(x,y),dp;
poly h = x31+x30y+x29y2+x28y3+x27y4+x26y5+x25y6+x24y7+x23y8+x22y9+x21y10+x20y11+x19y12+x18y13+x17y14+x16y15+x15y16+x14y17+x13y18+x12y19+x11y20+x10y21+x9y22+x8y23+x7y24+x6y25+x5y26+x4y27+x3y28+x2y29+xy30+y31+x30+x29y+x28y2+x27y3+x26y4+x25y5+x24y6+x23y7+x22y8+x21y9+x20y10+x19y11+x18y12+x17y13+x16y14+x15y15+x14y16+x13y17+x12y18+x11y19+x10y20+x9y21+x8y22+x7y23+x6y24+x5y25+x4y26+x3y27+x2y28+xy29+y30+x29+x28y+x27y2+x26y3+x25y4+x24y5+x23y6+x22y7+x21y8+x20y9+x19y10+x18y11+x17y12+x16y13+x15y14+x14y15+x13y16+x12y17+x11y18+x10y19+x9y20+x8y21+x7y22+x6y23+x5y24+x4y25+x3y26+x2y27+xy28+x28+x27y+x26y2+x25y3+x24y4+x23y5+x22y6+x21y7+x20y8+x19y9+x18y10+x17y11+x16y12+x15y13+x14y14+x13y15+x12y16+x11y17+x10y18+x9y19+x8y20+x7y21+x6y22+x5y23+x4y24+x3y25+x2y26+xy27+x27+x26y+x25y2+x24y3+x23y4+x22y5+x21y6+x20y7+x19y8+x18y9+x17y10+x16y11+x15y12+x14y13+x13y14+x12y15+x11y16+x10y17+x9y18+x8y19+x7y20+x6y21+x5y22+x4y23+x3y24+x2y25+xy26+x26+x25y+x24y2+x23y3+x22y4+x21y5+x20y6+x19y7+x18y8+x17y9+x16y10+x15y11+x14y12+x13y13+x12y14+x11y15+x10y16+x9y17+x8y18+x7y19+x6y20+x5y21+x4y22+x3y23+x2y24+xy25+x25+x24y+x23y2+x22y3+x21y4+x20y5+x19y6+x18y7+x17y8+x16y9+x15y10+x14y11+x13y12+x12y13+x11y14+x10y15+x9y16+x8y17+x7y18+x6y19+x5y20+x4y21+x3y22+x2y23+xy24+x24+x23y+x22y2+x21y3+x20y4+x19y5+x18y6+x17y7+x16y8+x15y9+x14y10+x13y11+x12y12+x11y13+x10y14+x9y15+x8y16+x7y17+x6y18+x5y19+x4y20+x3y21+x2y22+xy23+x23+x22y+x21y2+x20y3+x19y4+x18y5+x17y6+x16y7+x15y8+x14y9+x13y10+x12y11+x11y12+x10y13+x9y14+x8y15+x7y16+x6y17+x5y18+x4y19+x3y20+x2y21+xy22+x22+x21y+x20y2+x19y3+x18y4+x17y5+x16y6+x15y7+x14y8+x13y9+x12y10+x11y11+x10y12+x9y13+x8y14+x7y15+x6y16+x5y17+x4y18+x3y19+x2y20+xy21+x21+x20y+x19y2+x18y3+x17y4+x16y5+x15y6+x14y7+x13y8+x12y9+x11y10+x10y11+x9y12+x8y13+x7y14+x6y15+x5y16+x4y17+x3y18+x2y19+xy20+x20+x19y+x18y2+x17y3+x16y4+x15y5+x14y6+x13y7+x12y8+x11y9+x10y10+x9y11+x8y12+x7y13+x6y14+x5y15+x4y16+x3y17+x2y18+xy19+x19+x18y+x17y2+x16y3+x15y4+x14y5+x13y6+x12y7+x11y8+x10y9+x9y10+x8y11+x7y12+x6y13+x5y14+x4y15+x3y16+x2y17+xy18+x18+x17y+x16y2+x15y3+x14y4+x13y5+x12y6+x11y7+x10y8+x9y9+x8y10+x7y11+x6y12+x5y13+x4y14+x3y15+x2y16+xy17+x17+x16y+x15y2+x14y3+x13y4+x12y5+x11y6+x10y7+x9y8+x8y9+x7y10+x6y11+x5y12+x4y13+x3y14+x2y15+xy16+x16+x15y+x14y2+x13y3+x12y4+x11y5+x10y6+x9y7+x8y8+x7y9+x6y10+x5y11+x4y12+x3y13+x2y14+x15+x14y+x13y2+x12y3+x11y4+x10y5+x9y6+x8y7+x7y8+x6y9+x5y10+x4y11+x3y12+x2y13+x14+x13y+x12y2+x11y3+x10y4+x9y5+x8y6+x7y7+x6y8+x5y9+x4y10+x3y11+x2y12+x13+x12y+x11y2+x10y3+x9y4+x8y5+x7y6+x6y7+x5y8+x4y9+x3y10+x2y11+x12+x11y+x10y2+x9y3+x8y4+x7y5+x6y6+x5y7+x4y8+x3y9+x2y10+x11+x10y+x9y2+x8y3+x7y4+x6y5+x5y6+x4y7+x3y8+x2y9+x9y+x8y2+x7y3+x6y4+x5y5+x4y6+x3y7+x2y8+x8y+x7y2+x6y3+x5y4+x4y5+x3y6+x2y7+x7y+x6y2+x5y3+x4y4+x3y5+x2y6+x5y2+x4y3+x3y4+x2y5+x4y2+x3y3+x2y4+x3y2+x2y3+x2y2;
map phi = R,x+2*y+x^2+x*y+y^2+x^3,3*x+5*y+x^2*y+y^2;
poly h2 = phi(h);
h2 = monic(h2);
int t = timer;
list l1 = integralBasis(h2, 2, "atOrigin");
timer - t;
t = timer;
list l2 = integralBasis(h2, 2, "atOrigin", "noOpti");
timer - t;
LIB"integralbasis.lib";
ring r = 0,(x,y),(dp, L(100000));
poly f = (y^15 + 2*x^38)*(y^19 + 7*x^52)*(y^7+3*x^2) + y^100;
int t = timer;
list l1 = integralBasis(f, 2, "atOrigin");
ring r = 0,(x,y),(dp, L(100000));
poly f = (y^15 + 2*x^7)*(y^15 + 2*x^8)*(y^9 + 7*x^2)*(y^7+3*x^2)*(y^11+7*x6*y6+x^12) + y^60;
int t = timer;
list l1 = integralBasis(f, 2, "atOrigin");
ring r = 0, (x,y), dp;
poly f = (y7 + x4) * (y7 + y5x3 + x4) + y30;
int t = timer;
list l1 = integralBasis(f, 2, "atOrigin");
I
I[2] = T(7)-1;
ring r = 0, (x,y), dp;
poly f = (y7 + x4) * (y7 + y5x3 + x4) + y30;
int t = timer;
list l1 = integralBasis(f, 2, "atOrigin");
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y7 + x4) * (y7 + y5x3 + x4) + y30;
int t = timer;
list l1 = integralBasis(f, 2, "atOrigin");
I[2]=T(1)^7-1
I;
groebner(I);
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y7 + x4) * (y7 + y5x3 + x4) + y30;
int t = timer;
list l1 = integralBasis(f, 2, "atOrigin");
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y7 + x4) * (y7 + y5x3 + x4) + y30;
int t = timer;
list l1 = integralBasis(f, 2, "atOrigin");
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y7 + x4) * (y7 + y5x3 + x4) + y30;
int t = timer;
list l1 = integralBasis(f, 2, "atOrigin");
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y7 + x4) * (y7 + y5x3 + x4) + y30;
int t = timer;
list l1 = integralBasis(f, 2, "atOrigin");
I
timer - t;
t = timer;
list l2 = integralBasis(f, 2, "atOrigin", "noOpti");
timer - t;
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y7 + x4) * (y7 + y5x3 + x4) + y30;
int t = timer;
list l1 = integralBasis(f, 2, "atOrigin");
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y7 + x4) * (y7 + y5x3 + x4) + y30;
int t = timer;
list l1 = integralBasis(f, 2, "atOrigin");
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y7 + x4) * (y7 + y5x3 + x4) + y30;
int t = timer;
list l1 = integralBasis(f, 2, "atOrigin");
LIB"integralbasis.lib";
ring r = 0,(x,y),(dp, L(100000));
poly f = (y^15 + 2*x^38)*(y^19 + 7*x^52) + y^100;
int t = timer;
list l1 = integralBasis(f, 2, "atOrigin");
LIB"integralbasis.lib";
ring r = 0,(x,y),(dp, L(100000));
poly f = (y^15 + 2*x^38)*(y^19 + 7*x^52) + y^100;
int t = timer;
list l1 = integralBasis(f, 2, "atOrigin");
printlevel = 1;
LIB"integralbasis.lib";
ring r = 0,(x,y),(dp, L(100000));
poly f = (y^15 + 2*x^38)*(y^19 + 7*x^52) + y^100;
int t = timer;
list l1 = integralBasis(f, 2, "atOrigin");
printlevel = 1;
LIB"integralbasis.lib";
ring r = 0,(x,y),(dp, L(100000));
poly f = (y^15 + 2*x^38)*(y^19 + 7*x^52) + y^100;
int t = timer;
list l1 = integralBasis(f, 2, "atOrigin");
printlevel = 2;
LIB"integralbasis.lib";
ring r = 0,(x,y),(dp, L(100000));
poly f = (y^15 + 2*x^38)*(y^19 + 7*x^52) + y^100;
int t = timer;
list l1 = integralBasis(f, 2, "atOrigin");
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y7 + x4) * (y7 + y5x3 + x4) + y30;
list l = puiseux(f,1,-1);
l;
printlevel = 3;
LIB"integralbasis.lib";
ring R = 0,(x,y),dp;
poly f = x^(30)+x^2*y^2+y^(11);
map phi = R,x+2*y+x^2+x*y+y^2+x^3,3*x+5*y+x^2*y+y^2;
poly g =phi(f);
int t = timer;
list l1 = integralBasis(g, 2, "atOrigin");
timer - t;
t = timer;
list l2 = integralBasis(f, 2, "atOrigin", "noOpti");
timer - t;
printlevel = 3;
LIB"integralbasis.lib";
ring R = 0,(x,y),dp;
poly f = x^(30)+x^2*y^2+y^(11);
map phi = R,x+2*y+x^2+x*y+y^2+x^3,3*x+5*y+x^2*y+y^2;
poly g =phi(f);
int t = timer;
list l1 = integralBasis(g, 2, "atOrigin");
printlevel = 3;
LIB"integralbasis.lib";
ring R = 0,(x,y),dp;
poly f = x^(30)+x^2*y^2+y^(11);
map phi = R,x+2*y+x^2+x*y+y^2+x^3,3*x+5*y+x^2*y+y^2;
poly g =phi(f);
int t = timer;
list l1 = integralBasis(g, 2, "atOrigin");
classes
basering;
bF
printlevel = 3;
LIB"integralbasis.lib";
ring R = 0,(x,y),dp;
poly f = x^(30)+x^2*y^2+y^(11);
map phi = R,x+2*y+x^2+x*y+y^2+x^3,3*x+5*y+x^2*y+y^2;
poly g =phi(f);
int t = timer;
list l1 = integralBasis(g, 2, "atOrigin");
bF
printlevel = 3;
LIB"integralbasis.lib";
ring R = 0,(x,y),dp;
poly f = x^(30)+x^2*y^2+y^(11);
map phi = R,x+2*y+x^2+x*y+y^2+x^3,3*x+5*y+x^2*y+y^2;
poly g =phi(f);
int t = timer;
list l1 = integralBasis(g, 2, "atOrigin");
fNew
fetch(P, f2);
f
d
den
degX
setring S
ff
ffRed
pols
fNewTemp
I
basering
den
printlevel = 3;
LIB"integralbasis.lib";
ring R = 0,(x,y),dp;
poly f = x^(30)+x^2*y^2+y^(11);
map phi = R,x+2*y+x^2+x*y+y^2+x^3,3*x+5*y+x^2*y+y^2;
poly g =phi(f);
int t = timer;
list l1 = integralBasis(g, 2, "atOrigin");
printlevel = 3;
LIB"integralbasis.lib";
ring R = 0,(x,y),dp;
poly f = x^(30)+x^2*y^2+y^(11);
map phi = R,x+2*y+x^2+x*y+y^2+x^3,3*x+5*y+x^2*y+y^2;
poly g =phi(f);
int t = timer;
list l1 = integralBasis(g, 2, "atOrigin");

l1;
timer - t;
t = timer;
list l2 = integralBasis(f, 2, "atOrigin", "noOpti");
timer - t;

list l2 = integralBasis(g, 2, "atOrigin", "noOpti");
timer - t;

l2;
"Verification...";
size(reduce(l1[1], groebner(l2[1])));
size(reduce(l2[1], groebner(l1[1])));

