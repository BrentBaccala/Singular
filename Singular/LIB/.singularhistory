LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y5 + x2) * (y5 + y4x + x2)+y11;
list l1 = integralBasis(f,2, "atOrigin");
var(2)
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y5 + x2) * (y5 + y4x + x2)+y11;
list l1 = integralBasis(f,2, "atOrigin");
den
f
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y5 + x2) * (y5 + y4x + x2)+y11;
list l1 = integralBasis(f,2, "atOrigin");
ff
den
pols
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y5 + x2) * (y5 + y4x + x2)+y11;
list l1 = integralBasis(f,2, "atOrigin");
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y5 + x2) * (y5 + y4x + x2)+y11;
list l1 = integralBasis(f,2, "atOrigin");
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y5 + x2) * (y5 + y4x + x2)+y11;
list l1 = integralBasis(f,2, "atOrigin");
printlevel = 10;
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y5 + x2) * (y5 + y4x + x2)+y11;
list l1 = integralBasis(f,2, "atOrigin");
printlevel = 10;
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y5 + x2) * (y5 + y4x + x2)+y11;
list l1 = integralBasis(f,2, "atOrigin");
printlevel = 10;
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y5 + x2) * (y5 + y4x + x2)+y11;
list l1 = integralBasis(f,2, "atOrigin");
maxExpi
d
s
md
summands(d, s, md);
M
MSelf
s
d
s
md
printlevel = 10;
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y5 + x2) * (y5 + y4x + x2)+y11;
list l1 = integralBasis(f,2, "atOrigin");
md
printlevel = 10;
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y5 + x2) * (y5 + y4x + x2)+y11;
list l1 = integralBasis(f,2, "atOrigin");
printlevel = 10;
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y5 + x2) * (y5 + y4x + x2)+y11;
list l1 = integralBasis(f,2, "atOrigin");
I2Lifted
classes
l
getClasses(l)
printlevel = 10;
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y5 + x2) * (y5 + y4x + x2)+y11;
list l1 = integralBasis(f,2, "atOrigin");
printlevel = 10;
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y5 + x2) * (y5 + y4x + x2)+y11;
list l1 = integralBasis(f,2, "atOrigin");
printlevel = 10;
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y5 + x2) * (y5 + y4x + x2)+y11;
list l1 = integralBasis(f,2, "atOrigin");
f
classes
blocks
mdm
printlevel = 10;
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y5 + x2) * (y5 + y4x + x2)+y11;
list l1 = integralBasis(f,2, "atOrigin");
printlevel = 10;
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y5 + x2) * (y5 + y4x + x2)+y11;
list l1 = integralBasis(f,2, "atOrigin");
printlevel = 10;
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y5 + x2) * (y5 + y4x + x2)+y11;
list l1 = integralBasis(f,2, "atOrigin");
printlevel = 10;
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y5 + x2) * (y5 + y4x + x2)+y11;
list l1 = integralBasis(f,2, "atOrigin");
printlevel = 10;
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y5 + x2) * (y5 + y4x + x2)+y11;
list l1 = integralBasis(f,2, "atOrigin");
printlevel = 10;
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y5 + x2) * (y5 + y4x + x2)+y11;
list l1 = integralBasis(f,2, "atOrigin");
printlevel = 10;
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y5 + x2) * (y5 + y4x + x2)+y11;
list l1 = integralBasis(f,2, "atOrigin");
printlevel = 10;
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y5 + x2) * (y5 + y4x + x2)+y11;
list l1 = integralBasis(f,2, "atOrigin");
printlevel = 10;
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y5 + x2) * (y5 + y4x + x2)+y11;
list l1 = integralBasis(f,2, "atOrigin");
printlevel = 10;
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y5 + x2) * (y5 + y4x + x2)+y11;
list l1 = integralBasis(f,2, "atOrigin");
degExpand
printlevel = 10;
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y5 + x2) * (y5 + y4x + x2)+y11;
list l1 = integralBasis(f,2, "atOrigin");
maxDeg
sN
sD
f
je
printlevel = 10;
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y5 + x2) * (y5 + y4x + x2)+y11;
list l1 = integralBasis(f,2, "atOrigin");
printlevel = 10;
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y5 + x2) * (y5 + y4x + x2)+y11;
list l1 = integralBasis(f,2, "atOrigin");
newL
printlevel = 10;
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y5 + x2) * (y5 + y4x + x2)+y11;
list l1 = integralBasis(f,2, "atOrigin");
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y5 + x2) * (y5 + y4x + x2)+y11;
list l1 = integralBasis(f,2, "atOrigin");
[200~LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y5 + x2) * (y5 + y4x + x2)+y11;
list l1 = integralBasis(f,2, "atOrigin");
~
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y5 + x2) * (y5 + y4x + x2)+y11;
list l1 = integralBasis(f,2, "atOrigin");
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y5 + x2) * (y5 + y4x + x2)+y11;
list l1 = integralBasis(f,2, "atOrigin");
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y5 + x2) * (y5 + y4x + x2)+y11;
list l1 = integralBasis(f,2, "atOrigin");
l1;
printlevel = 10;
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y5 + x2) * (y5 + y4x + x2)+y11;
list l1 = integralBasis(f,2, "atOrigin");
I2LiftedFull
ifOut
printlevel = 10;
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y5 + x2) * (y5 + y4x + x2)+y11;
list l1 = integralBasis(f,2, "atOrigin");
l1;
printlevel = 10;
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y5 + x2) * (y5 + y4x + x2)+y11;
list l1 = integralBasis(f,2, "atOrigin");
I2LiftedFull
printlevel = 10;
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y5 + x2) * (y5 + y4x + x2)+y11;
list l1 = integralBasis(f,2, "atOrigin");
classes2
printlevel = 10;
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y5 + x2) * (y5 + y4x + x2)+y11;
list l1 = integralBasis(f,2, "atOrigin");
I2LiftedFull
printlevel = 10;
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y5 + x2) * (y5 + y4x + x2)+y11;
list l1 = integralBasis(f,2, "atOrigin");
printlevel = 10;
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y5 + x2) * (y5 + y4x + x2)+y11;
list l1 = integralBasis(f,2, "atOrigin");
l1;
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y3+x2)*(y2-x3)+y6;
integralBasis(f,2);
ring r = 0, (x,y), dp;
poly f = (y4+3x3y + x4)*(y5+7x3)+y12;
list l1 = integralBasis(f,2);
ring r = 0, (x,y), dp;
poly f = (y4+3x3y + x4)*(y5+7x3)+y12;
list l1 = integralBasis(f,2);
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y4+3x3y + x4)*(y5+7x3)+y12;
list l1 = integralBasis(f,2);
printlevel = 10;
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y4+3x3y + x4)*(y5+7x3)+y12;
list l1 = integralBasis(f,2);
printlevel = 10;
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y4+3x3y + x4)*(y5+7x3)+y12;
list l1 = integralBasis(f,2);
printlevel = 10;
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y4+3x3y + x4)*(y5+7x3)+y12;
list l1 = integralBasis(f,2);
printlevel = 10;
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y4+3x3y + x4)*(y5+7x3)+y12;
list l1 = integralBasis(f,2);
classes
typeof(classes[i][1])
printlevel = 10;
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y4+3x3y + x4)*(y5+7x3)+y12;
list l1 = integralBasis(f,2);
classes
i
printlevel = 10;
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y4+3x3y + x4)*(y5+7x3)+y12;
list l1 = integralBasis(f,2);
printlevel = 10;
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y4+3x3y + x4)*(y5+7x3)+y12;
list l1 = integralBasis(f,2);
classes
size(classes);
printlevel = 10;
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y4+3x3y + x4)*(y5+7x3)+y12;
list l1 = integralBasis(f,2);
;
;
printlevel = 10;
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y4+3x3y + x4)*(y5+7x3)+y12;
list l1 = integralBasis(f,2);
printlevel = 10;
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y4+3x3y + x4)*(y5+7x3)+y12;
list l1 = integralBasis(f,2);
printlevel = 10;
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y4+3x3y + x4)*(y5+7x3)+y12;
list l1 = integralBasis(f,2);
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y4+3x3y + x4)*(y5+7x3)+y12;
list l1 = integralBasis(f,2);
1<>0;
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y4+3x3y + x4)*(y5+7x3)+y12;
list l1 = integralBasis(f,2);
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y4+3x3y + x4)*(y5+7x3)+y12;
list l1 = integralBasis(f,2);
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y4+3x3y + x4)*(y5+7x3)+y12;
list l1 = integralBasis(f,2);
maxExpi
minOrd
M
MSelf
d
md
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y4+3x3y + x4)*(y5+7x3)+y12;
list l1 = integralBasis(f,2);
classes
def S = classes[2];
setring S;
PE;
printlevel = 10;
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y4+3x3y + x4)*(y5+7x3)+y12;
list l1 = integralBasis(f,2);
classes
def SS = classes[2][1];
setring SS;
PE;
basering;
M
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y4+3x3y + x4)*(y5+7x3)+y12;
list l1 = integralBasis(f,2);
M
bestElem
bF
md
classes
def SS = classes[2][1];
setring SS;
PE;
minpoly
pardeg(minpoly)
degBase
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y4+3x3y + x4)*(y5+7x3)+y12;
list l1 = integralBasis(f,2);
md
basering
def SS = classes[1][1];
setring SS;
PE;
basering;
lcm(5,5)
lcm(5,10)
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y4+3x3y + x4)*(y5+7x3)+y12;
list l1 = integralBasis(f,2);
l;
l1;
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y4+3x3y + x4)*(y5+7x3)*(y3-4x2)*(y3+x2)*(y2-x3)+y30;
list l1 = integralBasis(f,2,"modular");
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y4+3x3y + x4)*(y5+7x3)*(y3-4x2)*(y3+x2)*(y2-x3)+y30;
list l1 = integralBasis(f,2,"modular", "atOrigin");
l1;
LIB"integralbasis.lib";
ring r = 0,(x,y),dp;
int k = 40; int d = 50;
poly f = y^2 + x^(k+1) + y^d;
list l = integralBasis(f, 2);
l1;
l;
LIB"integralbasis.lib";
ring r = 0,(x,y),dp;
int k = 40; int d = 50;
poly f = x*(x^(k-1) + y^2) + y^d;
list l = integralBasis(f, 2, "atOrigin");
LIB"integralbasis.lib";
ring r = 0,(x,y),dp;
int k = 40; int d = 50;
poly f = x*(x^(k-1) + y^2) + y^d;
list l = integralBasis(f, 2, "atOrigin");
LIB"integralbasis.lib";
ring r = 0,(x,y),dp;
int k = 40; int d = 50;
poly f = x*(x^(k-1) + y^2) + y^d;
list l = integralBasis(f, 2, "atOrigin");
classes
def SS = classes[1][1];
setring SS;
PE;
basering;
def SS = classes[1][1];
setring SS;
PE;
ring r = 0,(x,y),dp;
int k = 40; int d = 50;
poly f = x*(x^(k-1) + y^2) + y^d;
list l = integralBasis(f, 2, "atOrigin");
LIB"integralbasis.lib";
ring r = 0,(x,y),dp;
int k = 40; int d = 50;
poly f = x*(x^(k-1) + y^2) + y^d;
list l = integralBasis(f, 2, "atOrigin");
def SS = classes[1][2];
setring SS;
PE;
LIB"integralbasis.lib";
ring r = 0,(x,y),dp;
int k = 40; int d = 50;
poly f = x*(x^(k-1) + y^2) + y^d;
list l = integralBasis(f, 2, "atOrigin");
def SS = classes[2][1];
setring SS;
PE;
basering;
getDegs(classes);
LIB"integralbasis.lib";
ring r = 0,(x,y),dp;
int k = 40; int d = 50;
poly f = x*(x^(k-1) + y^2) + y^d;
list l = integralBasis(f, 2, "atOrigin");
LIB"integralbasis.lib";
ring r = 0,(x,y),dp;
int k = 40; int d = 50;
poly f = x*(x^(k-1) + y^2) + y^d;
list l = integralBasis(f, 2, "atOrigin");
bF
LIB"integralbasis.lib";
ring r = 0,(x,y),dp;
int k = 40; int d = 50;
poly f = x*(x^(k-1) + y^2) + y^d;
list l = integralBasis(f, 2, "atOrigin");
setring S
PE
LIB"integralbasis.lib";
ring r = 0,(x,y),dp;
int k = 40; int d = 50;
poly f = x*(x^(k-1) + y^2) + y^d;
list l = integralBasis(f, 2, "atOrigin");
l;
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
int k = 5;
int d = 10;
poly f = polyDK(d, k, 1231);
list l = integralBasis(f, 2, "atOrigin");
l;
LIB"integralbasis.lib";
ring r = 0,(x,y),dp;
int k = 6;
poly z = 2*x - y + 1;
poly f = (x^(k+1) + y^(k+1) + z^(k+1))^2 - 4*(x^(k+1)*y^(k+1) + y^(k+1)*z^(k+1) + z^(k+1)*x^(k+1));
f = monic(f);
list l = integralBasis(f, 2, "atOrigin");
classes
LIB"integralbasis.lib";
ring r = 0,(x,y),dp;
int k = 6;
poly z = 2*x - y + 1;
poly f = (x^(k+1) + y^(k+1) + z^(k+1))^2 - 4*(x^(k+1)*y^(k+1) + y^(k+1)*z^(k+1) + z^(k+1)*x^(k+1));
f = monic(f);
list l = integralBasis(f, 2);
LIB"integralbasis.lib";
ring r = 0,(x,y),dp;
int k = 6;
poly z = 2*x - y + 1;
poly f = (x^(k+1) + y^(k+1) + z^(k+1))^2 - 4*(x^(k+1)*y^(k+1) + y^(k+1)*z^(k+1) + z^(k+1)*x^(k+1));
f = monic(f);
list l = integralBasis(f, 2);
l;
LIB"integralbasis.lib";
ring r = 0,(x,y),dp;
int k = 11;
poly z = x - 2*y + 1;
poly f = x^(2*k) + y^(2*k) + z^(2*k) + 2 * (x^k * z^k - x^k * y^k + y^k * z^k);
f = monic(f);
list l = integralBasis(f, 2, "nonModular");
LIB"integralbasis.lib";
ring r = 0,(x,y),dp;
int k = 11;
poly z = x - 2*y + 1;
poly f = x^(2*k) + y^(2*k) + z^(2*k) + 2 * (x^k * z^k - x^k * y^k + y^k * z^k);
f = monic(f);
list l = integralBasis(f, 2, "nonModular");
classes
def SS = classes[1][1];
setring SS;
PE;
setring R
polyGround
classes
setring S
basering;
PE
setring R
basering;
setring S
basering
pG
minpolys
LIB"integralbasis.lib";
ring r = 0,(x,y),dp;
int k = 40; int d = 50;
poly f = y^2 + x^(k+1) + y^d;
list l = integralBasis(f, 2);
l;
[200~LIB"integralbasis.lib";
ring r = 0,(x,y),dp;
int k = 40; int d = 50;
poly f = y^2 + x^(k+1) + y^d;
list l = integralBasis(f, 2);
LIB"integralbasis.lib";
ring r = 0,(x,y),dp;
int k = 40; int d = 50;
poly f = y^2 + x^(k+1) + y^d;
list l = integralBasis(f, 2);
l;
LIB"integralbasis.lib";
ring r = 0,(x,y),dp;
int k = 40; int d = 50;
poly f = y^2 + x^(k+1) + y^d;
list l = integralBasis(f, 2);
classes
def S = classes[1][1];
setring S;
PE;
basering;
fFr
LIB"integralbasis.lib";
ring r = 0,(x,y),dp;
int k = 40; int d = 50;
poly f = y^2 + x^(k+1) + y^d;
list l = integralBasis(f, 2);
fFr
LIB"integralbasis.lib";
ring r = 0,(x,y),dp;
int k = 40; int d = 50;
poly f = y^2 + x^(k+1) + y^d;
list l = integralBasis(f, 2);
fF
buildPolyFrac(fF);
basering;
basering;
[200~LIB"integralbasis.lib";
ring r = 0,(x,y),dp;
int k = 40; int d = 50;
poly f = y^2 + x^(k+1) + y^d;
list l = integralBasis(f, 2);
LIB"integralbasis.lib";
ring r = 0,(x,y),dp;
int k = 40; int d = 50;
poly f = y^2 + x^(k+1) + y^d;
list l = integralBasis(f, 2);
LIB"integralbasis.lib";
ring r = 0,(x,y),dp;
int k = 40; int d = 50;
poly f = y^2 + x^(k+1) + y^d;
list l = integralBasis(f, 2);
LIB"integralbasis.lib";
ring r = 0,(x,y),dp;
int k = 40; int d = 50;
poly f = y^2 + x^(k+1) + y^d;
list l = integralBasis(f, 2);
LIB"integralbasis.lib";
ring r = 0,(x,y),dp;
int k = 40; int d = 50;
poly f = y^2 + x^(k+1) + y^d;
list l = integralBasis(f, 2);
l;
LIB"integralbasis.lib";
ring r = 0,(x,y),dp;
int k = 40; int d = 50;
poly f = x*(x^(k-1) + y^2) + y^d;
list l = integralBasis(f, 2, "atOrigin");
l;
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
int k = 5;
int d = 10;
poly f = polyDK(d, k, 1231);
list l = integralBasis(f, 2, "atOrigin");
l;
LIB"integralbasis.lib";
ring r = 0,(x,y),dp;
int k = 6;
poly z = 2*x - y + 1;
poly f = (x^(k+1) + y^(k+1) + z^(k+1))^2 - 4*(x^(k+1)*y^(k+1) + y^(k+1)*z^(k+1) + z^(k+1)*x^(k+1));
f = monic(f);
list l = integralBasis(f, 2);
l;
LIB"integralbasis.lib";
ring r = 0,(x,y),dp;
int k = 11;
poly z = x - 2*y + 1;
poly f = x^(2*k) + y^(2*k) + z^(2*k) + 2 * (x^k * z^k - x^k * y^k + y^k * z^k);
f = monic(f);
list l = integralBasis(f, 2, "nonModular");
LIB"integralbasis.lib";
ring r = 0,(x,y),dp;
int k = 11;
poly z = x - 2*y + 1;
poly f = x^(2*k) + y^(2*k) + z^(2*k) + 2 * (x^k * z^k - x^k * y^k + y^k * z^k);
f = monic(f);
list l = integralBasis(f, 2, "nonModular");
LIB"integralbasis.lib";
ring r = 0,(x,y),dp;
int k = 11;
poly z = x - 2*y + 1;
poly f = x^(2*k) + y^(2*k) + z^(2*k) + 2 * (x^k * z^k - x^k * y^k + y^k * z^k);
f = monic(f);
list l = integralBasis(f, 2, "nonModular");
LIB"integralbasis.lib";
ring r = 0,(x,y),dp;
int k = 11;
poly z = x - 2*y + 1;
poly f = x^(2*k) + y^(2*k) + z^(2*k) + 2 * (x^k * z^k - x^k * y^k + y^k * z^k);
f = monic(f);
list l = integralBasis(f, 2, "nonModular");
degs
basering;
classes
degs
degs
bF
LIB"integralbasis.lib";
ring r = 0,(x,y),dp;
int k = 11;
poly z = x - 2*y + 1;
poly f = x^(2*k) + y^(2*k) + z^(2*k) + 2 * (x^k * z^k - x^k * y^k + y^k * z^k);
f = monic(f);
list l = integralBasis(f, 2, "nonModular");
LIB"integralbasis.lib";
ring r = 0,(x,y),dp;
int k = 11;
poly z = x - 2*y + 1;
poly f = x^(2*k) + y^(2*k) + z^(2*k) + 2 * (x^k * z^k - x^k * y^k + y^k * z^k);
f = monic(f);
list l = integralBasis(f, 2, "nonModular");
LIB"integralbasis.lib";
ring r = 0,(x,y),dp;
int k = 40; int d = 50;
poly f = y^2 + x^(k+1) + y^d;
list l = integralBasis(f, 2);
l;
ring r = 0,(x,y),dp;
int k = 40; int d = 50;
poly f = x*(x^(k-1) + y^2) + y^d;
list l = integralBasis(f, 2, "atOrigin");
l;
LIB"integralbasis.lib";
ring r = 0,(x,y),dp;
int k = 11;
poly z = x - 2*y + 1;
poly f = x^(2*k) + y^(2*k) + z^(2*k) + 2 * (x^k * z^k - x^k * y^k + y^k * z^k);
f = monic(f);
list l = integralBasis(f, 2, "nonModular");
basering;
minpoly
setring S
minpolys
LIB"integralbasis.lib";
ring r = 0,(x,y),dp;
int k = 11;
poly z = x - 2*y + 1;
poly f = x^(2*k) + y^(2*k) + z^(2*k) + 2 * (x^k * z^k - x^k * y^k + y^k * z^k);
f = monic(f);
list l = integralBasis(f, 2, "nonModular");
setring S
mp
fF
erg
setring R
LIB"integralbasis.lib";
ring r = 0,(x,y),dp;
int k = 11;
poly z = x - 2*y + 1;
poly f = x^(2*k) + y^(2*k) + z^(2*k) + 2 * (x^k * z^k - x^k * y^k + y^k * z^k);
f = monic(f);
list l = integralBasis(f, 2, "nonModular");
fFr
LIB"integralbasis.lib";
ring r = 0,(x,y),dp;
int k = 11;
poly z = x - 2*y + 1;
poly f = x^(2*k) + y^(2*k) + z^(2*k) + 2 * (x^k * z^k - x^k * y^k + y^k * z^k);
f = monic(f);
ideal J = slocus(f);
J;
radical(J);
LIB"integralbasis.lib";
ring r = 0,(x,y),dp;
poly f = x^15-21*x^14+8*x^13*y-6*x^13-16*x^12*y+20*x^11*y^2-x^12+8*x^11*y-36*x^10*y^2+24*x^9*y^3+4*x^9*y^2-16*x^8*y^3+26*x^7*y^4-6*x^6*y^4+8*x^5*y^5+4*x^3*y^6-y^8;
f = f *(-1);
list l = integralBasis(f, 2, "nonModular");
LIB"integralbasis.lib";
ring r = 0,(x,y),dp;
poly f = (y^4 + 2*x^3*y^2 + x^6 + x^5*y)^3 + x^11*y^11;
list l = integralBasis(f, 2, "nonModular");
l;
LIB"integralbasis.lib";
ring r = 0,(x,y),dp;
poly f = (y^4 + 2*x^3*y^2 + x^6 + x^5*y)^3 + x^11*y^11;
list l = integralBasis(f, 2, "nonModular");
classes
md
LIB"integralbasis.lib";
ring r = 0,(x,y),dp;
poly f = (y^4 + 2*x^3*y^2 + x^6 + x^5*y)^3 + x^11*y^11;
list l = integralBasis(f, 2, "nonModular");
MSelf
bestElem
bestElem
vS
bF
LIB"integralbasis.lib";
ring r = 0,(x,y),dp;
poly f = (y^4 + 2*x^3*y^2 + x^6 + x^5*y)^3 + x^11*y^11;
list l = integralBasis(f, 2, "nonModular");
LIB"integralbasis.lib";
ring r = 0,(x,y),dp;
poly f = (y^4 + 2*x^3*y^2 + x^6 + x^5*y)^3 + x^11*y^11;
list l = integralBasis(f, 2, "nonModular");
classes
def S = classes[1][1];
setring S;
PE
basering;
LIB"integralbasis.lib";
ring r = 0,(x,y),dp;
poly f = (y^4 + 2*x^3*y^2 + x^6 + x^5*y)^3 + x^11*y^11;
list l = integralBasis(f, 2, "nonModular");
l;
LIB"integralbasis.lib";
ring r = 0,(x,y),dp;
poly f = (y^4 + 2*x^3*y^2 + x^6 + x^5*y)^3 + x^11*y^11;
list l = integralBasis(f, 2, "nonModular");
LIB"integralbasis.lib";
ring r = 0,(x,y),dp;
poly f = (y^4 + 2*x^3*y^2 + x^6 + x^5*y)^3 + x^11*y^11;
list l = integralBasis(f, 2, "nonModular");
fFB
printlevel = 10;
LIB"integralbasis.lib";
ring r = 0,(x,y),dp;
poly f = (y^4 + 2*x^3*y^2 + x^6 + x^5*y)^3 + x^11*y^11;
list l = integralBasis(f, 2, "nonModular");
printlevel = 10;
LIB"integralbasis.lib";
ring r = 0,(x,y),dp;
poly f = (y^4 + 2*x^3*y^2 + x^6 + x^5*y)^3 + x^11*y^11;
list l = integralBasis(f, 2, "nonModular");
fFB
fF
basering
exps
den
printlevel = 10;
LIB"integralbasis.lib";
ring r = 0,(x,y),dp;
poly f = (y^4 + 2*x^3*y^2 + x^6 + x^5*y)^3 + x^11*y^11;
list l = integralBasis(f, 2, "nonModular");
l;
printlevel = 10;
LIB"integralbasis.lib";
ring r = 0,(x,y),dp;
poly f = (y^4 + 2*x^3*y^2 + x^6 + x^5*y)^3 + x^11*y^11;
list l = integralBasis(f, 2, "nonModular");
printlevel = 10;
LIB"integralbasis.lib";
ring r = 0,(x,y),dp;
poly f = (y^4 + 2*x^3*y^2 + x^6 + x^5*y)^3 + x^11*y^11;
list l = integralBasis(f, 2, "nonModular");
l;
reduce(I, groebner(l[1]);
reduce(l[1], groebner(I));
q
c
printlevel = 10;
LIB"integralbasis.lib";
ring r = 0,(x,y),dp;
poly f = (y^4 + 2*x^3*y^2 + x^6 + x^5*y)^3 + x^11*y^11;
list l = integralBasis(f, 2, "nonModular");
ideal I;
I[1]=x23;
I[2]=x22y;
I[3]=x23+x20y2;
I[4]=x22y+x19y3;
I[5]=19381206307392801/83076749736557242056487941267521536x31+1055924242596369/40564819207303340847894502572032x30+106134086413873/79228162514264337593543950336x29+577396907939/4835703278458516698824704x28+10609139737/1180591620717411303424x27+1252947609/2361183241434822606848x26y+340609631/576460752303423488x26+239957037/9223372036854775808x25y+94820295/2251799813685248x25-80599193/72057594037927936x24y+310107/137438953472x24-8280015/70368744177664x23y+18253053/2251799813685248x22y2+65/1048576x23-56685/8589934592x22y+68555/137438953472x21y2+65/1048576x20y2+x20+x19y+2x17y2+x14y4;
I[6]=19381206307392801/83076749736557242056487941267521536x30y+1055924242596369/40564819207303340847894502572032x29y+106134086413873/79228162514264337593543950336x28y+577396907939/4835703278458516698824704x27y+10609139737/1180591620717411303424x26y+1252947609/2361183241434822606848x25y2+340609631/576460752303423488x25y+239957037/9223372036854775808x24y2+94820295/2251799813685248x24y-80599193/72057594037927936x23y2+310107/137438953472x23y-8280015/70368744177664x22y2+18253053/2251799813685248x21y3+65/1048576x22y-56685/8589934592x21y2+68555/137438953472x20y3+65/1048576x19y3+x19y+x18y2+2x16y3+x13y5;
I[7]=19381206307392801/83076749736557242056487941267521536x31+1055924242596369/40564819207303340847894502572032x30+19381206307392801/83076749736557242056487941267521536x28y2+106134086413873/79228162514264337593543950336x29+1055924242596369/40564819207303340847894502572032x27y2+577396907939/4835703278458516698824704x28+106134086413873/79228162514264337593543950336x26y2+10609139737/1180591620717411303424x27+1252947609/2361183241434822606848x26y+577396907939/4835703278458516698824704x25y2+340609631/576460752303423488x26+239957037/9223372036854775808x25y+10609139737/1180591620717411303424x24y2+1252947609/2361183241434822606848x23y3+94820295/2251799813685248x25-80599193/72057594037927936x24y+340609631/576460752303423488x23y2+239957037/9223372036854775808x22y3+310107/137438953472x24-8280015/70368744177664x23y+28268337/562949953421312x22y2-80599193/72057594037927936x21y3+65/1048576x23-56685/8589934592x22y+189331/68719476736x21y2-8280015/70368744177664x20y3+18253053/2251799813685248x19y4+65/524288x20y2-56685/8589934592x19y3+68555/137438953472x18y4+65/1048576x17y4+x20+x19y+3x17y2+x16y3+3x14y4+x11y6;
I[8]=19381206307392801/83076749736557242056487941267521536x30y+1055924242596369/40564819207303340847894502572032x29y+19381206307392801/83076749736557242056487941267521536x27y3+106134086413873/79228162514264337593543950336x28y+1055924242596369/40564819207303340847894502572032x26y3+577396907939/4835703278458516698824704x27y+106134086413873/79228162514264337593543950336x25y3+10609139737/1180591620717411303424x26y+1252947609/2361183241434822606848x25y2+577396907939/4835703278458516698824704x24y3+340609631/576460752303423488x25y+239957037/9223372036854775808x24y2+10609139737/1180591620717411303424x23y3+1252947609/2361183241434822606848x22y4+94820295/2251799813685248x24y-80599193/72057594037927936x23y2+340609631/576460752303423488x22y3+239957037/9223372036854775808x21y4+310107/137438953472x23y-8280015/70368744177664x22y2+28268337/562949953421312x21y3-80599193/72057594037927936x20y4+65/1048576x22y-56685/8589934592x21y2+189331/68719476736x20y3-8280015/70368744177664x19y4+18253053/2251799813685248x18y5+65/524288x19y3-56685/8589934592x18y4+68555/137438953472x17y5+65/1048576x16y5+x19y+x18y2+3x16y3+x15y4+3x13y5+x10y7;
I[9]=16303899057149140345/2722258935367507707706996859454145691648x27y2+825795527723069/20769187434139310514121985316880384x27y+329389695644524757/1329227995784915872903807060280344576x26y2+22870119113300277/2658455991569831745807614120560689152x25y3+113696317117120213/20282409603651670423947251286016x27-9459681055342527/81129638414606681695789005144064x26y+465344929385294213/20769187434139310514121985316880384x25y2+9877281207523641/10384593717069655257060992658440192x24y3+10535555076172593/39614081257132168796771975168x26-1335049250915095/79228162514264337593543950336x25y+24442346609846169/10141204801825835211973625643008x24y2+5971807599092811/81129638414606681695789005144064x23y3+19381206307392801/41538374868278621028243970633760768x22y4+25509167563811/2417851639229258349412352x25-9541852585049/9671406556917033397649408x24y+3680295205157621/19807040628566084398385987584x23y2+16001450669885/79228162514264337593543950336x22y3+2388620017879605/20282409603651670423947251286016x21y4+175734915097/590295810358705651712x24-29908034707/1180591620717411303424x23y+13985189232815/1208925819614629174706176x22y2-3511117737475/9671406556917033397649408x21y3+426476626808113/39614081257132168796771975168x20y4+1448168031/288230376151711744x23+1916757533/4611686018427387904x22y+139634117885/295147905179352825856x21y2-5622154083/295147905179352825856x20y3+3608816190499/2417851639229258349412352x19y4+94820295/1125899906842624x22+2953650247/36028797018963968x21y+1125771259/144115188075855872x20y2-1646519763/2305843009213693952x19y3+47113306137/590295810358705651712x18y4+1252947609/1180591620717411303424x17y5+310107/68719476736x21+150494769/35184372088832x20y-57066837/1125899906842624x19y2+211449655/18014398509481984x18y3+1448168031/288230376151711744x17y4+239957037/4611686018427387904x16y5+65/524288x20+475795/4294967296x19y-218191/68719476736x18y2+9270065/17592186044416x17y3+131326401/1125899906842624x16y4-80599193/36028797018963968x15y5+195/524288x17y2+209555/2147483648x16y3+447217/68719476736x15y4-8280015/35184372088832x14y5+18253053/1125899906842624x13y6+195/524288x14y4-56685/4294967296x13y5+68555/68719476736x12y6+x17+2x16y+x15y2+65/524288x11y6+4x14y2+4x13y3+6x11y4+2x10y5+4x8y6+x5y8;
I[10]=16303899057149140345/2722258935367507707706996859454145691648x26y3+825795527723069/20769187434139310514121985316880384x26y2+329389695644524757/1329227995784915872903807060280344576x25y3+22870119113300277/2658455991569831745807614120560689152x24y4+113696317117120213/20282409603651670423947251286016x26y-9459681055342527/81129638414606681695789005144064x25y2+465344929385294213/20769187434139310514121985316880384x24y3+9877281207523641/10384593717069655257060992658440192x23y4+10535555076172593/39614081257132168796771975168x25y-1335049250915095/79228162514264337593543950336x24y2+24442346609846169/10141204801825835211973625643008x23y3+5971807599092811/81129638414606681695789005144064x22y4+19381206307392801/41538374868278621028243970633760768x21y5+25509167563811/2417851639229258349412352x24y-9541852585049/9671406556917033397649408x23y2+3680295205157621/19807040628566084398385987584x22y3+16001450669885/79228162514264337593543950336x21y4+2388620017879605/20282409603651670423947251286016x20y5+175734915097/590295810358705651712x23y-29908034707/1180591620717411303424x22y2+13985189232815/1208925819614629174706176x21y3-3511117737475/9671406556917033397649408x20y4+426476626808113/39614081257132168796771975168x19y5+1448168031/288230376151711744x22y+1916757533/4611686018427387904x21y2+139634117885/295147905179352825856x20y3-5622154083/295147905179352825856x19y4+3608816190499/2417851639229258349412352x18y5+94820295/1125899906842624x21y+2953650247/36028797018963968x20y2+1125771259/144115188075855872x19y3-1646519763/2305843009213693952x18y4+47113306137/590295810358705651712x17y5+1252947609/1180591620717411303424x16y6+310107/68719476736x20y+150494769/35184372088832x19y2-57066837/1125899906842624x18y3+211449655/18014398509481984x17y4+1448168031/288230376151711744x16y5+239957037/4611686018427387904x15y6+65/524288x19y+475795/4294967296x18y2-218191/68719476736x17y3+9270065/17592186044416x16y4+131326401/1125899906842624x15y5-80599193/36028797018963968x14y6+195/524288x16y3+209555/2147483648x15y4+447217/68719476736x14y5-8280015/35184372088832x13y6+18253053/1125899906842624x12y7+195/524288x13y5-56685/4294967296x12y6+68555/68719476736x11y7+x16y+2x15y2+x14y3+65/524288x10y7+4x13y3+4x12y4+6x10y5+2x9y6+4x7y7+x4y9;
I[11]=16303899057149140345/2722258935367507707706996859454145691648x24y4+20580357942770351/20769187434139310514121985316880384x24y3+329389695644524757/1329227995784915872903807060280344576x23y4+22870119113300277/2658455991569831745807614120560689152x22y5+162581010336812551/20282409603651670423947251286016x24y2-871968364062429/20282409603651670423947251286016x23y3+950071065077981227/41538374868278621028243970633760768x22y4+9877281207523641/10384593717069655257060992658440192x21y5-9541852585049/9671406556917033397649408x24y+17896145486487835/39614081257132168796771975168x23y2-659523900122605/39614081257132168796771975168x22y3+51273313237571943/20282409603651670423947251286016x21y4+5971807599092811/81129638414606681695789005144064x20y5+19381206307392801/41538374868278621028243970633760768x19y6+175734915097/590295810358705651712x24-29908034707/1180591620717411303424x23y+53479546029441/2417851639229258349412352x22y2-3263242580631/2417851639229258349412352x21y3+7787067037123355/39614081257132168796771975168x20y4+16001450669885/79228162514264337593543950336x19y5+2388620017879605/20282409603651670423947251286016x18y6+1448168031/288230376151711744x23+1916757533/4611686018427387904x22y+455003150867/590295810358705651712x21y2-52396651039/1180591620717411303424x20y3+31579194656129/2417851639229258349412352x19y4-3511117737475/9671406556917033397649408x18y5+426476626808113/39614081257132168796771975168x17y6+94820295/1125899906842624x22+2953650247/36028797018963968x21y+3699710549/288230376151711744x20y2-1376281993/4611686018427387904x19y3+326381541907/590295810358705651712x18y4-21235668723/1180591620717411303424x17y5+3608816190499/2417851639229258349412352x16y6+310107/68719476736x21+150494769/35184372088832x20y+18876729/562949953421312x19y2+3376549557/36028797018963968x18y3+3699710549/288230376151711744x17y4-3053082489/4611686018427387904x16y5+47113306137/590295810358705651712x15y6+1252947609/1180591620717411303424x14y7+65/524288x20+475795/4294967296x19y+22979/17179869184x18y2+169034899/35184372088832x17y3+18564891/281474976710656x16y4+342300117/36028797018963968x15y5+1448168031/288230376151711744x14y6+239957037/4611686018427387904x13y7+65/131072x17y2+894905/4294967296x16y3+114513/34359738368x15y4+10260115/35184372088832x14y5+74789727/562949953421312x13y6-80599193/36028797018963968x12y7+195/262144x14y4+362425/4294967296x13y5+128943/17179869184x12y6-8280015/35184372088832x11y7+18253053/1125899906842624x10y8+x17+2x16y+x15y2+65/131072x11y6-56685/4294967296x10y7+68555/68719476736x9y8+5x14y2+6x13y3+x12y4+65/524288x8y8+10x11y4+6x10y5+10x8y6+2x7y7+5x5y8+x2y10;
I[12]=16303899057149140345/2722258935367507707706996859454145691648x22y5+20580357942770351/20769187434139310514121985316880384x22y4+329389695644524757/1329227995784915872903807060280344576x21y5+22870119113300277/2658455991569831745807614120560689152x20y6+162581010336812551/20282409603651670423947251286016x22y3-871968364062429/20282409603651670423947251286016x21y4+950071065077981227/41538374868278621028243970633760768x20y5+9877281207523641/10384593717069655257060992658440192x19y6-9541852585049/9671406556917033397649408x22y2+17896145486487835/39614081257132168796771975168x21y3-659523900122605/39614081257132168796771975168x20y4+51273313237571943/20282409603651670423947251286016x19y5+5971807599092811/81129638414606681695789005144064x18y6+19381206307392801/41538374868278621028243970633760768x17y7+175734915097/590295810358705651712x22y-29908034707/1180591620717411303424x21y2+53479546029441/2417851639229258349412352x20y3-3263242580631/2417851639229258349412352x19y4+7787067037123355/39614081257132168796771975168x18y5+16001450669885/79228162514264337593543950336x17y6+2388620017879605/20282409603651670423947251286016x16y7+1448168031/288230376151711744x21y+1916757533/4611686018427387904x20y2+455003150867/590295810358705651712x19y3-52396651039/1180591620717411303424x18y4+31579194656129/2417851639229258349412352x17y5-3511117737475/9671406556917033397649408x16y6+426476626808113/39614081257132168796771975168x15y7+94820295/1125899906842624x20y+2953650247/36028797018963968x19y2+3699710549/288230376151711744x18y3-1376281993/4611686018427387904x17y4+326381541907/590295810358705651712x16y5-21235668723/1180591620717411303424x15y6+3608816190499/2417851639229258349412352x14y7+310107/68719476736x19y+150494769/35184372088832x18y2+18876729/562949953421312x17y3+3376549557/36028797018963968x16y4+3699710549/288230376151711744x15y5-3053082489/4611686018427387904x14y6+47113306137/590295810358705651712x13y7+1252947609/1180591620717411303424x12y8+65/524288x18y+475795/4294967296x17y2+22979/17179869184x16y3+169034899/35184372088832x15y4+18564891/281474976710656x14y5+342300117/36028797018963968x13y6+1448168031/288230376151711744x12y7+239957037/4611686018427387904x11y8+65/131072x15y3+894905/4294967296x14y4+114513/34359738368x13y5+10260115/35184372088832x12y6+74789727/562949953421312x11y7-80599193/36028797018963968x10y8+195/262144x12y5+362425/4294967296x11y6+128943/17179869184x10y7-8280015/35184372088832x9y8+18253053/1125899906842624x8y9+x15y+2x14y2+x13y3+65/131072x9y7-56685/4294967296x8y8+68555/68719476736x7y9+5x12y3+6x11y4+x10y5+65/524288x6y9+10x9y5+6x8y6+10x6y7+2x5y8+5x3y9+y11;
I;
reduce(I, groebner(l[1]));
reduce(l[1], groebner(I));
LIB"integralbasis.lib";
ring r = 0,(x,y),dp;
int k = 40; int d = 50;
poly f = y^2 + x^(k+1) + y^d;
list l = integralBasis(f, 2);
l;
LIB"integralbasis.lib";
ring r = 0,(x,y),dp;
int k = 40; int d = 50;
poly f = x*(x^(k-1) + y^2) + y^d;
list l = integralBasis(f, 2, "atOrigin");
l;
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
int k = 5;
int d = 10;
poly f = polyDK(d, k, 1231);
list l = integralBasis(f, 2, "atOrigin");
l;
LIB"integralbasis.lib";
ring r = 0,(x,y),dp;
int k = 6;
poly z = 2*x - y + 1;
poly f = (x^(k+1) + y^(k+1) + z^(k+1))^2 - 4*(x^(k+1)*y^(k+1) + y^(k+1)*z^(k+1) + z^(k+1)*x^(k+1));
f = monic(f);
list l = integralBasis(f, 2);
l;
LIB"integralbasis.lib";
ring r = 0,(x,y),dp;
int k = 11;
poly z = x - 2*y + 1;
poly f = x^(2*k) + y^(2*k) + z^(2*k) + 2 * (x^k * z^k - x^k * y^k + y^k * z^k);
f = monic(f);
list l = integralBasis(f, 2, "nonModular");
LIB"integralbasis.lib";
ring r = 0,(x,y),dp;
poly f = x^15-21*x^14+8*x^13*y-6*x^13-16*x^12*y+20*x^11*y^2-x^12+8*x^11*y-36*x^10*y^2+24*x^9*y^3+4*x^9*y^2-16*x^8*y^3+26*x^7*y^4-6*x^6*y^4+8*x^5*y^5+4*x^3*y^6-y^8;
f = f *(-1);
list l = integralBasis(f, 2, "nonModular");
LIB"integralbasis.lib";
ring r = 0,(x,y),dp;
poly f = (y^4 + 2*x^3*y^2 + x^6 + x^5*y)^3 + x^11*y^11;
list l = integralBasis(f, 2, "nonModular");
l;
LIB"integralbasis.lib";
ring r = 0,(x,y),dp;
poly f = (y^5 + y^4*x^7 + 2*x^8) * (y^3 + 7*x^4) * (y^7 + 2*x^12) * (y^11 + 2*x^18) + y^30;
int t = timer;
list l = integralBasis(f, 2);
LIB"integralbasis.lib";
ring r = 0,(x,y),dp;
poly f = (y^5 + y^4*x^7 + 2*x^8) * (y^3 + 7*x^4) * (y^7 + 2*x^12) * (y^11 + 2*x^18) + y^30;
int t = timer;
list l = integralBasis(f, 2, "atOrigin");
l;
LIB"integralbasis.lib";
ring r = 0,(x,y),(dp, L(100000));
poly f = (y^15 + 2*x^38)*(y^19 + 7*x^52) + y^36;
list l = integralBasis(f, 2, "check0");
l;
LIB"integralbasis.lib";
ring r = 0,(x,y),(dp, L(100000));
poly f = (y^15 + 2*x^38)*(y^19 + 7*x^52) + y^100;
list l = integralBasis(f, 2, "nonModular");
l;
LIB"integralbasis.lib";
ring r = 0,(x,y),dp;
int k = 11;
poly z = x - 2*y + 1;
poly f = x^(2*k) + y^(2*k) + z^(2*k) + 2 * (x^k * z^k - x^k * y^k + y^k * z^k);
f = monic(f);
list l = integralBasis(f, 2, "nonModular");
LIB"integralbasis.lib";
ring r = 0,(x,y),dp;
int k = 11;
poly z = x - 2*y + 1;
poly f = x^(2*k) + y^(2*k) + z^(2*k) + 2 * (x^k * z^k - x^k * y^k + y^k * z^k);
f = monic(f);
list l = integralBasis(f, 2, "nonModular");
classes
basering
seting S
LIB"integralbasis.lib";
ring r = 0,(x,y),dp;
int k = 11;
poly z = x - 2*y + 1;
poly f = x^(2*k) + y^(2*k) + z^(2*k) + 2 * (x^k * z^k - x^k * y^k + y^k * z^k);
f = monic(f);
list l = integralBasis(f, 2, "nonModular");
setring S
LIB"integralbasis.lib";
ring r = 0,(x,y),dp;
int k = 11;
poly z = x - 2*y + 1;
poly f = x^(2*k) + y^(2*k) + z^(2*k) + 2 * (x^k * z^k - x^k * y^k + y^k * z^k);
f = monic(f);
list l = integralBasis(f, 2, "nonModular");
fFr
den
buildPolyGround(fFr,den);
polyGround
fGround
fFr
buildPolyGroundXRoot(fFr, den);
fFr
den
LIB"integralbasis.lib";
ring r = 0,(x,y),dp;
int k = 11;
poly z = x - 2*y + 1;
poly f = x^(2*k) + y^(2*k) + z^(2*k) + 2 * (x^k * z^k - x^k * y^k + y^k * z^k);
f = monic(f);
list l = integralBasis(f, 2, "nonModular");
LIB"integralbasis.lib";
ring r = 0,(x,y),dp;
int k = 6;
poly z = 2*x - y + 1;
poly f = (x^(k+1) + y^(k+1) + z^(k+1))^2 - 4*(x^(k+1)*y^(k+1) + y^(k+1)*z^(k+1) + z^(k+1)*x^(k+1));
f = monic(f);
list l = integralBasis(f, 2);
LIB"integralbasis.lib";
ring r = 0,(x,y),dp;
int k = 6;
poly z = 2*x - y + 1;
poly f = (x^(k+1) + y^(k+1) + z^(k+1))^2 - 4*(x^(k+1)*y^(k+1) + y^(k+1)*z^(k+1) + z^(k+1)*x^(k+1));
f = monic(f);
list l = integralBasis(f, 2);
l;
LIB"integralbasis.lib";
ring r = 0,(x,y),dp;
int k = 40; int d = 50;
poly f = y^2 + x^(k+1) + y^d;
list l = integralBasis(f, 2);
LIB"integralbasis.lib";
ring r = 0,(x,y),dp;
int k = 40; int d = 50;
poly f = y^2 + x^(k+1) + y^d;
list l = integralBasis(f, 2);
LIB"integralbasis.lib";
ring r = 0,(x,y),dp;
int k = 40; int d = 50;
poly f = y^2 + x^(k+1) + y^d;
list l = integralBasis(f, 2);
l;
LIB"integralbasis.lib";
ring r = 0,(x,y),dp;
int k = 40; int d = 50;
poly f = x*(x^(k-1) + y^2) + y^d;
list l = integralBasis(f, 2, "atOrigin");
LIB"integralbasis.lib";
ring r = 0,(x,y),dp;
int k = 40; int d = 50;
poly f = x*(x^(k-1) + y^2) + y^d;
list l = integralBasis(f, 2, "atOrigin");
LIB"integralbasis.lib";
ring r = 0,(x,y),dp;
int k = 40; int d = 50;
poly f = x*(x^(k-1) + y^2) + y^d;
list l = integralBasis(f, 2, "atOrigin");
LIB"integralbasis.lib";
ring r = 0,(x,y),dp;
int k = 40; int d = 50;
poly f = x*(x^(k-1) + y^2) + y^d;
list l = integralBasis(f, 2, "atOrigin");
l;
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
int k = 5;
int d = 10;
poly f = polyDK(d, k, 1231);
list l = integralBasis(f, 2, "atOrigin");
l;
LIB"integralbasis.lib";
ring r = 0,(x,y),dp;
int k = 6;
poly z = 2*x - y + 1;
poly f = (x^(k+1) + y^(k+1) + z^(k+1))^2 - 4*(x^(k+1)*y^(k+1) + y^(k+1)*z^(k+1) + z^(k+1)*x^(k+1));
f = monic(f);
list l = integralBasis(f, 2);
LIB"integralbasis.lib";
ring r = 0,(x,y),dp;
int k = 6;
poly z = 2*x - y + 1;
poly f = (x^(k+1) + y^(k+1) + z^(k+1))^2 - 4*(x^(k+1)*y^(k+1) + y^(k+1)*z^(k+1) + z^(k+1)*x^(k+1));
f = monic(f);
list l = integralBasis(f, 2);
l;
LIB"integralbasis.lib";
ring r = 0,(x,y),dp;
int k = 11;
poly z = x - 2*y + 1;
poly f = x^(2*k) + y^(2*k) + z^(2*k) + 2 * (x^k * z^k - x^k * y^k + y^k * z^k);
f = monic(f);
list l = integralBasis(f, 2, "nonModular");
LIB"integralbasis.lib";
ring r = 0,(x,y),dp;
int k = 11;
poly z = x - 2*y + 1;
poly f = x^(2*k) + y^(2*k) + z^(2*k) + 2 * (x^k * z^k - x^k * y^k + y^k * z^k);
f = monic(f);
list l = integralBasis(f, 2, "nonModular");
LIB"integralbasis.lib";
ring r = 0,(x,y),dp;
poly f = x^15-21*x^14+8*x^13*y-6*x^13-16*x^12*y+20*x^11*y^2-x^12+8*x^11*y-36*x^10*y^2+24*x^9*y^3+4*x^9*y^2-16*x^8*y^3+26*x^7*y^4-6*x^6*y^4+8*x^5*y^5+4*x^3*y^6-y^8;
f = f *(-1);
list l = integralBasis(f, 2, "nonModular");
LIB"integralbasis.lib";
ring r = 0,(x,y),dp;
poly f = x12;
exponentsGCD(f, x);
exponentsGCD(f, 1);
poly f = x12 + x14;
exponentsGCD(f, 1);
LIB"integralbasis.lib";
ring r = 0,(x,y),dp;
poly f = x^15-21*x^14+8*x^13*y-6*x^13-16*x^12*y+20*x^11*y^2-x^12+8*x^11*y-36*x^10*y^2+24*x^9*y^3+4*x^9*y^2-16*x^8*y^3+26*x^7*y^4-6*x^6*y^4+8*x^5*y^5+4*x^3*y^6-y^8;
f = f *(-1);
list l = integralBasis(f, 2, "nonModular");
LIB"integralbasis.lib";
ring r = 0,(x,y),dp;
poly f = x^15-21*x^14+8*x^13*y-6*x^13-16*x^12*y+20*x^11*y^2-x^12+8*x^11*y-36*x^10*y^2+24*x^9*y^3+4*x^9*y^2-16*x^8*y^3+26*x^7*y^4-6*x^6*y^4+8*x^5*y^5+4*x^3*y^6-y^8;
f = f *(-1);
list l = integralBasis(f, 2, "nonModular");
LIB"integralbasis.lib";
ring r = 0,(x,y),dp;
poly f = x^15-21*x^14+8*x^13*y-6*x^13-16*x^12*y+20*x^11*y^2-x^12+8*x^11*y-36*x^10*y^2+24*x^9*y^3+4*x^9*y^2-16*x^8*y^3+26*x^7*y^4-6*x^6*y^4+8*x^5*y^5+4*x^3*y^6-y^8;
f = f *(-1);
list l = integralBasis(f, 2, "nonModular");
l;
LIB"integralbasis.lib";
ring r = 0,(x,y),dp;
poly f = x^15-21*x^14+8*x^13*y-6*x^13-16*x^12*y+20*x^11*y^2-x^12+8*x^11*y-36*x^10*y^2+24*x^9*y^3+4*x^9*y^2-16*x^8*y^3+26*x^7*y^4-6*x^6*y^4+8*x^5*y^5+4*x^3*y^6-y^8;
f = f *(-1);
list l = integralBasis(f, 2, "nonModular");
LIB"integralbasis.lib";
ring r = 0,(x,y),dp;
poly f = x^15-21*x^14+8*x^13*y-6*x^13-16*x^12*y+20*x^11*y^2-x^12+8*x^11*y-36*x^10*y^2+24*x^9*y^3+4*x^9*y^2-16*x^8*y^3+26*x^7*y^4-6*x^6*y^4+8*x^5*y^5+4*x^3*y^6-y^8;
f = f *(-1);
list l = integralBasis(f, 2, "nonModular");

l;
